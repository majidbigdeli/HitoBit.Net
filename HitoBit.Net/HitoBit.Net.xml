<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HitoBit.Net</name>
    </assembly>
    <members>
        <member name="T:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi">
            <inheritdoc cref="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApi" />
        </member>
        <member name="P:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.ApiOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client. Only available for Spot orders
            </summary>
        </member>
        <member name="E:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client. Note that this does not trigger when using CancelAllOrdersAsync. Only available for Spot orders
            </summary>
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.CommonFuturesClient">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApi.ParseRateLimitResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.ModifyPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.ChangeInitialLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.ChangeMarginTypeAsync(System.String,HitoBit.Net.Enums.FuturesMarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.ModifyPositionMarginAsync(System.String,System.Decimal,HitoBit.Net.Enums.FuturesMarginChangeDirectionType,System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetMarginChangeHistoryAsync(System.String,System.Nullable{HitoBit.Net.Enums.FuturesMarginChangeDirectionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetPositionInformationAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForTransactionHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetDownloadLinkForTransactionHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetDownloadLinkForOrderHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiAccount.GetDownloadLinkForTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetServerTimeAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetFundingInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetTopLongShortAccountRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetTopLongShortPositionRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetGlobalLongShortAccountRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetMarkPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetPremiumIndexKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetContinuousContractKlinesAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetBookPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetOpenInterestHistoryAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetTakerBuySellVolumeRatioAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetBasisAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiExchangeData.GetPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.PriceMatch},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.GetOpenOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{HitoBit.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitRestClientCoinFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi">
            <inheritdoc cref="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi" />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToIndexPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToIndexPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToContinuousContractKlineUpdatesAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToContinuousContractKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToIndexKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToIndexKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToMarkPriceKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToMarkPriceKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBitMiniTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBit24HPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBit24HPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBit24HPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToAllMarkPriceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice}}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToAllBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToAllLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToSymbolUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.CoinFuturesApi.HitoBitSocketClientCoinFuturesApi.GetAuthenticationRequestAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi">
            <inheritdoc cref="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi" />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.ApiOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.Brokerage">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.Futures">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.CryptoLoans">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.AutoInvest">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.Mining">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.SubAccount">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.Staking">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.SimpleEarn">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.CopyTrading">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApi.ParseRateLimitResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetSourceAndTargetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetSourceAssetsAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetTargetAssetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetTargetAssetRoisAsync(System.String,HitoBit.Net.Enums.AutoInvestRoiType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetIndexInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetPlansAsync(HitoBit.Net.Enums.AutoInvestPlanType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.OneTimeTransactionAsync(System.String,System.String,System.Decimal,System.String,System.Boolean,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.EditPlanStatusAsync(System.Int64,HitoBit.Net.Enums.AutoInvestPlanStatus,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.EditPlanAsync(System.String,System.Decimal,HitoBit.Net.Enums.AutoInvestSubscriptionCycle,System.String,System.Collections.Generic.Dictionary{System.String,System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.RedeemIndexLinkedPlanAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetSubscriptionTransactionHistoryAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HitoBit.Net.Enums.AutoInvestPlanType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetOneTimeTransactionStatusAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.CreatePlanAsync(System.String,HitoBit.Net.Enums.AutoInvestPlanType,System.Decimal,HitoBit.Net.Enums.AutoInvestSubscriptionCycle,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetIndexLinkedPlanRedemptionHistoryAsync(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetPlanHoldingsAsync(System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetIndexLinkedPlanPositionDetailsAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiAutoInvest.GetIndexLinkedPlanRebalanceHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.CreateSubAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.EnableMarginForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.EnableFuturesForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.EnableLeverageTokenForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.CreateApiKeyForSubAccountAsync(System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.DeleteSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.ChangeSubAccountApiKeyPermissionAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.AddIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.ChangeIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.DeleteIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.ChangeSubAccountCommissionAsync(System.String,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.ChangeSubAccountFuturesCommissionAdjustmentAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetSubAccountFuturesCommissionAdjustmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.ChangeSubAccountCoinFuturesCommissionAdjustmentAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetSubAccountCoinFuturesCommissionAdjustmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetSubAccountSpotAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetSubAccountMarginAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetSubAccountFuturesAssetInfoAsync(HitoBit.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.ChangeBnbBurnForSubAccountSpotAndMarginAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.ChangeBnbBurnForSubAccountMarginInterestAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetBnbBurnStatusForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.TransferUniversalAsync(System.String,System.Decimal,System.String,HitoBit.Net.Enums.BrokerageAccountType,System.String,HitoBit.Net.Enums.BrokerageAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetTransferHistoryUniversalAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.TransferAsync(System.String,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.TransferFuturesAsync(System.String,System.Decimal,HitoBit.Net.Enums.FuturesAccountType,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetTransferHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetTransferFuturesHistoryAsync(System.String,HitoBit.Net.Enums.FuturesAccountType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetSubAccountDepositHistoryAsync(System.String,System.String,System.Nullable{HitoBit.Net.Enums.SubAccountDepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetBrokerAccountInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetBrokerCommissionRebatesRecentAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiBrokerage.GetBrokerFuturesCommissionRebatesHistoryAsync(HitoBit.Net.Enums.FuturesAccountType,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiCopyTrading.GetUserStatusAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiCopyTrading.GetLeadSymbolAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiFutures">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiFutures.TransferFuturesAccountAsync(System.String,System.Decimal,HitoBit.Net.Enums.FuturesTransferType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiFutures.GetFuturesTransferHistoryAsync(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.GetIncomeHistoryAsync(System.String,System.Nullable{HitoBit.Net.Enums.LoanIncomeType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.BorrowAsync(System.String,System.String,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.GetBorrowHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.GetOpenBorrowOrdersAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.RepayAsync(System.Int64,System.Decimal,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.GetRepayHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.AdjustLTVAsync(System.Int64,System.Decimal,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.GetLtvAdjustHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.GetLoanableAssetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.GetCollateralAssetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.GetCollateralRepayRateAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiLoans.CustomizeMarginCallAsync(System.Decimal,System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMiningCoinListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMiningAlgorithmListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMinerDetailsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMinerListAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{HitoBit.Net.Enums.MinerStatus},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMiningRevenueListAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMiningOtherRevenueListAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMiningStatisticsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMiningAccountListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetHashrateResaleListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetHashrateResaleDetailsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.PlaceHashrateResaleRequestAsync(System.String,System.String,System.DateTime,System.DateTime,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.CancelHashrateResaleRequestAsync(System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiMining.GetMiningAccountEarningsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetFlexibleProductsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetLockedProductsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.SubscribeFlexibleProductAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.AccountSource},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.SubscribeLockedProductAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.AccountSource},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.RedeemFlexibleProductAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.AccountSource},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.RedeemLockedProductAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetFlexibleProductPositionsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetLockedProductPositionsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetAccountAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetFlexibleSubscriptionRecordsAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetLockedSubscriptionRecordsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetFlexibleRedemptionRecordsAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetLockedRedemptionRecordsAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetFlexibleRewardRecordsAsync(HitoBit.Net.Enums.RewardType,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetLockedRewardRecordsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.SetFlexibleAutoSubscribeAsync(System.String,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.SetLockedAutoSubscribeAsync(System.String,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetFlexiblePersonalQuotaLeftAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetLockedPersonalQuotaLeftAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetFlexibleSubscriptionPreviewAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetLockedSubscriptionPreviewAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetRateHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSimpleEarn.GetCollateralRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.SubscribeEthStakingAsync(System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.RedeemEthStakingAsync(System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.GetEthStakingHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.GetEthRedemptionHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.GetEthRewardsHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.GetEthStakingQuotaAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.GetBethRateHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.GetEthStakingAccountAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.WrapBethAsync(System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.GetBethWrapHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiStaking.GetBethUnwrapHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountTransferHistoryForMasterAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.TransferSubAccountAsync(HitoBit.Net.Enums.TransferAccountType,HitoBit.Net.Enums.TransferAccountType,System.String,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountAssetsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountDepositAddressAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountDepositHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountStatusAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.EnableMarginForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountMarginDetailsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountsMarginSummaryAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.EnableFuturesForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountFuturesDetailsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountFuturesDetailsAsync(HitoBit.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountsFuturesSummaryAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountsFuturesPositionRiskAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountsFuturesPositionRiskAsync(HitoBit.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.TransferSubAccountFuturesAsync(System.String,System.String,System.Decimal,HitoBit.Net.Enums.FuturesTransferType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.TransferSubAccountMarginAsync(System.String,System.String,System.Decimal,HitoBit.Net.Enums.SubAccountMarginTransferType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.TransferSubAccountToSubAccountAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.TransferSubAccountToMasterAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountTransferHistoryForSubAccountAsync(System.String,System.Nullable{HitoBit.Net.Enums.SubAccountTransferSubAccountType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetSubAccountBtcValuesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.CreateVirtualSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.EnableBlvtForSubAccountAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetUniversalTransferHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.UpdateIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.RemoveIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.GetFuturesAssetTransferHistoryAsync(System.String,HitoBit.Net.Enums.FuturesAccountType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.GeneralApi.HitoBitRestClientGeneralApiSubAccount.FuturesAssetTransferAsync(System.String,System.String,HitoBit.Net.Enums.FuturesAccountType,System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.HitoBitRestClient">
            <inheritdoc cref="T:HitoBit.Net.Interfaces.Clients.IHitoBitRestClient" />
        </member>
        <member name="P:HitoBit.Net.Clients.HitoBitRestClient.GeneralApi">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.HitoBitRestClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.HitoBitRestClient.UsdFuturesApi">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.HitoBitRestClient.CoinFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitRestClient.#ctor(System.Action{HitoBit.Net.Objects.Options.HitoBitRestOptions})">
            <summary>
            Create a new instance of the HitoBitRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,System.Action{HitoBit.Net.Objects.Options.HitoBitRestOptions})">
            <summary>
            Create a new instance of the HitoBitRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitRestClient.SetDefaultOptions(System.Action{HitoBit.Net.Objects.Options.HitoBitRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.HitoBitSocketClient">
            <inheritdoc cref="T:HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient" />
        </member>
        <member name="P:HitoBit.Net.Clients.HitoBitSocketClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.HitoBitSocketClient.UsdFuturesApi">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.HitoBitSocketClient.CoinFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitSocketClient.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of HitoBitSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitSocketClient.#ctor(System.Action{HitoBit.Net.Objects.Options.HitoBitSocketOptions})">
            <summary>
            Create a new instance of HitoBitSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitSocketClient.#ctor(System.Action{HitoBit.Net.Objects.Options.HitoBitSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of HitoBitSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitSocketClient.SetDefaultOptions(System.Action{HitoBit.Net.Objects.Options.HitoBitSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HitoBit.Net.Clients.HitoBitSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi">
            <inheritdoc cref="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApi" />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.ApiOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client. Only available for Spot orders
            </summary>
        </member>
        <member name="E:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client. Note that this does not trigger when using CancelAllOrdersAsync. Only available for Spot orders
            </summary>
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApi.ParseRateLimitResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetAccountInfoAsync(System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetFiatPaymentHistoryAsync(HitoBit.Net.Enums.OrderSide,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetFiatDepositWithdrawHistoryAsync(HitoBit.Net.Enums.TransactionType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.WalletType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{HitoBit.Net.Enums.WithdrawalStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetWithdrawalAddressesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetDepositHistoryAsync(System.String,System.Nullable{HitoBit.Net.Enums.DepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetDailySpotAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetDailyMarginAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetDailyFutureAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetAccountStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetFundingWalletAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetAPIKeyPermissionsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetUserAssetsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetBalancesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetWalletBalancesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetAssetDividendRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.DisableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.EnableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetDustLogAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HitoBit.Net.Enums.AccountType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.DustTransferAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{HitoBit.Net.Enums.AccountType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetAssetsForDustTransferAsync(System.Nullable{HitoBit.Net.Enums.AccountType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetBnbBurnStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.SetBnbBurnStatusAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.TransferAsync(HitoBit.Net.Enums.UniversalTransferType,System.String,System.Decimal,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetTransfersAsync(HitoBit.Net.Enums.UniversalTransferType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginLevelInformationAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.MarginBorrowAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.MarginRepayAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.CrossMarginAdjustMaxLeverageAsync(System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginTransferHistoryAsync(HitoBit.Net.Enums.TransferDirection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginLoansAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginRepaysAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetInterestMarginDataAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginInterestRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginForcedLiquidationHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetIsolatedMarginTierDataAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginMaxBorrowAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginMaxTransferAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetIsolatedMarginAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.DisableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.EnableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetEnabledIsolatedMarginAccountLimitAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetMarginOrderRateLimitStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.StartMarginUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.KeepAliveMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.StopMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.StartIsolatedMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.KeepAliveIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.CloseIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetOrderRateLimitStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetRebateHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetLeveragedTokensUserLimitAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetPortfolioMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetPortfolioMarginCollateralRateAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetPortfolioMarginBankruptcyLoanAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.PortfolioMarginBankruptcyLoanRepayAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetAutoConvertStableCoinConfigAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.SetAutoConvertStableCoinConfigAsync(System.String,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.ConvertBusdAsync(System.String,System.String,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetBusdConvertHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetCloudMiningHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetIsolatedMarginFeeDataAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetCrossMarginSmallLiabilityExchangeAssetsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.CrossMarginSmallLiabilityExchangeAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetCrossMarginSmallLiabilityExchangeHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetTradeFeeAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetAccountVipLevelAndStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiAccount.GetCommissionRatesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.SymbolStatus},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(HitoBit.Net.Enums.AccountType,System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.SymbolStatus},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(HitoBit.Net.Enums.AccountType[],System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.SymbolStatus},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.SymbolStatus},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetAssetDetailsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetProductsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetUiKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetCurrentAvgPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetTradingDayTickerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetTradingDayTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetRollingWindowTickerAsync(System.String,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetRollingWindowTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetPricesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetBookPricesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetMarginAssetsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetMarginSymbolsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetMarginPriceIndexAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetIsolatedMarginSymbolsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetLeveragedTokenInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetLeveragedTokensHistoricalKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetCrossMarginCollateralRatioAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetFutureHourlyInterestRateAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetMarginDelistScheduleAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetConvertListAllPairsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetConvertQuantityPrecisionPerAssetAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiExchangeData.GetDelistScheduleAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceTestOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{HitoBit.Net.Enums.CancelRestriction},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.ReplaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.CancelReplaceMode,System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.CancelRestriction},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceOcoOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceOcoOrderListAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.SpotOrderType,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.CancelOcoOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetOcoOrderAsync(System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetOcoOrdersAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetOpenOcoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceOtoOrderListAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Decimal,System.Decimal,System.Decimal,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.String,System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceOtocoOrderListAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Decimal,System.Decimal,System.Decimal,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.SpotOrderType,System.String,System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceMarginOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.SideEffectType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.CancelMarginOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.CancelAllMarginOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetMarginOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetOpenMarginOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetMarginOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetMarginUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceMarginOCOOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.SideEffectType},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.CancelMarginOcoOrderAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetMarginOcoOrderAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetMarginOcoOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetMarginOpenOcoOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.SubscribeLeveragedTokenAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetLeveragedTokensSubscriptionRecordsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.RedeemLeveragedTokenAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetLeveragedTokensRedemptionRecordsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetC2CTradeHistoryAsync(HitoBit.Net.Enums.OrderSide,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetPayTradeHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.ConvertQuoteRequestAsync(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.WalletType},System.Nullable{HitoBit.Net.Enums.ValidTime},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.ConvertAcceptQuoteAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetConvertOrderStatusAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetConvertTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetPreventedTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.PlaceTimeWeightedAveragePriceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Int32,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.CancelAlgoOrderAsync(System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetOpenAlgoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetClosedAlgoOrdersAsync(System.String,System.Nullable{HitoBit.Net.Enums.OrderSide},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitRestClientSpotApiTrading.GetAlgoSubOrdersAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.ApiOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApi.GetAuthenticationRequestAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiAccount.GetAccountInfoAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiAccount.GetOrderRateLimitsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiAccount.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamPositionsUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetExchangeInfoAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetUIKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetCurrentAvgPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetRollingWindowTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.GetBookTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBitMiniTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToRollingWindowTickerUpdatesAsync(System.String,System.TimeSpan,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToAllRollingWindowTickerUpdatesAsync(System.TimeSpan,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBitTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToBlvtInfoUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToBlvtInfoUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToBlvtKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiExchangeData.SubscribeToBlvtKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.PlaceTestOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.ReplaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.CancelReplaceMode,System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.PlaceOcoOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.PlaceOcoOrderListAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.SpotOrderType,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.GetOcoOrderAsync(System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.CancelOcoOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.GetOpenOcoOrdersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.GetOcoOrdersAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.SpotApi.HitoBitSocketClientSpotApiTrading.GetPreventedTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi">
            <inheritdoc cref="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApi" />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.ApiOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client. Only available for Spot orders
            </summary>
        </member>
        <member name="E:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client. Note that this does not trigger when using CancelAllOrdersAsync. Only available for Spot orders
            </summary>
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.CommonFuturesClient">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApi.ParseRateLimitResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.ModifyPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.ChangeInitialLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.ChangeMarginTypeAsync(System.String,HitoBit.Net.Enums.FuturesMarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.ModifyPositionMarginAsync(System.String,System.Decimal,HitoBit.Net.Enums.FuturesMarginChangeDirectionType,System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetMarginChangeHistoryAsync(System.String,System.Nullable{HitoBit.Net.Enums.FuturesMarginChangeDirectionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetAccountInfoV2Async(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetAccountInfoV3Async(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetMultiAssetsModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.SetMultiAssetsModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetPositionInformationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForTransactionHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetDownloadLinkForTransactionHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetDownloadLinkForOrderHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetDownloadLinkForTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetOrderRateLimitAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetBnbBurnStatusAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.SetBnbBurnStatusAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetSymbolConfigurationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiAccount.GetAccountConfigurationAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetServerTimeAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetFundingInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetTopLongShortAccountRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetTopLongShortPositionRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetGlobalLongShortAccountRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetMarkPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetPremiumIndexKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetOpenInterestHistoryAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetTakerBuySellVolumeRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetCompositeIndexInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetContinuousContractKlinesAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetAssetIndexesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetAssetIndexAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetBasisAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiExchangeData.GetConvertSymbolsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.PriceMatch},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetOrderEditHistoryAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.EditOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.EditMultipleOrdersAsync(System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetOpenOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{HitoBit.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.PlaceVolumeParticipationOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,HitoBit.Net.Enums.OrderUrgency,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.PlaceTimeWeightedAveragePriceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.CancelAlgoOrderAsync(System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetOpenAlgoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetClosedAlgoOrdersAsync(System.String,System.Nullable{HitoBit.Net.Enums.OrderSide},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetAlgoSubOrdersAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetPositionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.ConvertQuoteRequestAsync(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.ValidTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.ConvertAcceptQuoteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitRestClientUsdFuturesApiTrading.GetConvertOrderStatusAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi">
            <summary>
            Client providing access to the HitoBit Usd futures websocket Api
            </summary>
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.ApiOptions">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.#ctor(Microsoft.Extensions.Logging.ILogger,HitoBit.Net.Objects.Options.HitoBitSocketOptions)">
            <summary>
            Create a new instance of HitoBitSocketClientUsdFuturesStreams
            </summary>
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApi.GetAuthenticationRequestAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiAccount.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerRejectUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesUsdtStreamMarkPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesUsdtStreamMarkPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllMarkPriceUpdatesAsync(System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesUsdtStreamMarkPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToContinuousContractKlineUpdatesAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamContinuousKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToContinuousContractKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamContinuousKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBitMiniTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBit24HPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBit24HPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToCompositeIndexUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndex}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBit24HPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToSymbolUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAssetIndexUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAssetIndexUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.PriceMatch},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiTrading.EditOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Clients.UsdFuturesApi.HitoBitSocketClientUsdFuturesApiTrading.GetPositionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Converters.SymbolFilterConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Enums.AccountSource">
            <summary>
            Account source
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountSource.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountSource.Fund">
            <summary>
            Fund
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountSource.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AccountType">
            <summary>
            Type of account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.Spot">
            <summary>
            Spot account type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.Margin">
            <summary>
            Margin account type
            </summary>>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.Futures">
            <summary>
            Futures account type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.Leveraged">
            <summary>
            Leveraged account type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup002">
            <summary>
            Trade group 2
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup003">
            <summary>
            Trade group 3
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup004">
            <summary>
            Trade group 4
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup005">
            <summary>
            Trade group 5
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup006">
            <summary>
            Trade group 6
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup007">
            <summary>
            Trade group 7
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup008">
            <summary>
            Trade group 8
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup009">
            <summary>
            Trade group 9
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup010">
            <summary>
            Trade group 10
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup011">
            <summary>
            Trade group 11
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup012">
            <summary>
            Trade group 12
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup013">
            <summary>
            Trade group 13
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup014">
            <summary>
            Trade group 14
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup015">
            <summary>
            Trade group 15
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup016">
            <summary>
            Trade group 16
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup017">
            <summary>
            Trade group 17
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup018">
            <summary>
            Trade group 18
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup019">
            <summary>
            Trade group 19
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup020">
            <summary>
            Trade group 20
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup021">
            <summary>
            Trade group 21
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup022">
            <summary>
            Trade group 22
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup023">
            <summary>
            Trade group 23
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup024">
            <summary>
            Trade group 24
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup025">
            <summary>
            Trade group 25
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup026">
            <summary>
            Trade group 26
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup027">
            <summary>
            Trade group 27
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup028">
            <summary>
            Trade group 28
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup029">
            <summary>
            Trade group 29
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup030">
            <summary>
            Trade group 30
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup031">
            <summary>
            Trade group 31
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup032">
            <summary>
            Trade group 32
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup033">
            <summary>
            Trade group 33
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup034">
            <summary>
            Trade group 34
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup035">
            <summary>
            Trade group 35
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup036">
            <summary>
            Trade group 36
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup037">
            <summary>
            Trade group 37
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup038">
            <summary>
            Trade group 38
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup039">
            <summary>
            Trade group 39
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountType.TradeGroup040">
            <summary>
            Trade group 40
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AccountUpdateReason">
            <summary>
            Account update reason
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.FundingFee">
            <summary>
            Funding Fee
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.WithdrawReject">
            <summary>
            Withdraw Reject
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.Adjustment">
            <summary>
            Adjustment
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.InsuranceClear">
            <summary>
            Insurance Clear
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.AdminDeposit">
            <summary>
            Admin Deposit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.AdminWithdraw">
            <summary>
            Admin Withdraw
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.MarginTransfer">
            <summary>
            Margin Transfer
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.MarginTypeChange">
            <summary>
            Margin Type Change
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.AssetTransfer">
            <summary>
             Asset Transfer
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.OptionsPremiumFee">
            <summary>
            Options Premium Fee
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.OptionsSettleProfit">
            <summary>
            Options Settle Profit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.AutoExchange">
            <summary>
            Auto exchange
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.CoinSwapWithdraw">
            <summary>
            Coin swap withdraw
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AccountUpdateReason.CoinSwapDeposit">
            <summary>
            Coin swap deposit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AdjustRateDirection">
            <summary>
            Rate direction
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AdjustRateDirection.Additional">
            <summary>
            Additional
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AdjustRateDirection.Reduced">
            <summary>
            Reduced
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoCloseType">
            <summary>
            Type of auto close
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoCloseType.ADL">
            <summary>
            ADL
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoCloseType.Liquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestExecutionType">
            <summary>
            Execution type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestExecutionType.OneTime">
            <summary>
            One time
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestExecutionType.Recurring">
            <summary>
            Recurring
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestIndexStatus">
            <summary>
            Index status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestIndexStatus.Running">
            <summary>
            Running
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestIndexStatus.Rebalancing">
            <summary>
            Rebalancing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestIndexStatus.Paused">
            <summary>
            Paused
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestOneTimeTransactionStatus">
            <summary>
            Transaction status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestOneTimeTransactionStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestOneTimeTransactionStatus.Converting">
            <summary>
            Converting
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestPlanStatus">
            <summary>
            Plan status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestPlanStatus.Ongoing">
            <summary>
            Ongoing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestPlanStatus.Paused">
            <summary>
            Paused
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestPlanStatus.Removed">
            <summary>
            Removed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestPlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestPlanType.Single">
            <summary>
            Single
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestPlanType.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestPlanType.Portfolio">
            <summary>
            Portfolio
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestPlanType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestRedemptionStatus">
            <summary>
            Redemption status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestRedemptionStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestRedemptionStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestRoiType">
            <summary>
            Auto invest ROI type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestRoiType.SevenDay">
            <summary>
            Seven days
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestRoiType.ThreeMonth">
            <summary>
            Three months
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestRoiType.SixMonth">
            <summary>
            Six months
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestRoiType.OneYear">
            <summary>
            One year
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestRoiType.ThreeYear">
            <summary>
            Three year
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestRoiType.FiveYear">
            <summary>
            Five year
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestSubscriptionCycle">
            <summary>
            Subscription cycle
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestSubscriptionCycle.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestSubscriptionCycle.FourHour">
            <summary>
            Four hour
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestSubscriptionCycle.EightHour">
            <summary>
            Eight hour
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestSubscriptionCycle.TwelveHour">
            <summary>
            Twelve hour
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestSubscriptionCycle.Daily">
            <summary>
            Daily
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestSubscriptionCycle.Weekly">
            <summary>
            Weekly
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestSubscriptionCycle.BiWeekly">
            <summary>
            Bi-Weekly
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestSubscriptionCycle.Monthly">
            <summary>
            Monthly
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.AutoInvestTransactionStatus">
            <summary>
            Transaction status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestTransactionStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestTransactionStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.AutoInvestTransactionStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.BlvtStatus">
            <summary>
            Status of a blvt action
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BlvtStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BlvtStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BlvtStatus.Failure">
            <summary>
            Failure
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.BorrowStatus">
            <summary>
            Borrow status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BorrowStatus.AccruingInterest">
            <summary>
            Accruing interest
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BorrowStatus.Overdeu">
            <summary>
            Overdue
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BorrowStatus.Liquidating">
            <summary>
            Currently liquidating
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BorrowStatus.Repaying">
            <summary>
            Repaying
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BorrowStatus.Repaid">
            <summary>
            Repaid
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BorrowStatus.Liquidated">
            <summary>
            Liquidated
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BorrowStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BorrowStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.BrokerageAccountType">
            <summary>
            Brokerage account type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BrokerageAccountType.Spot">
            <summary> 
            Spot 
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BrokerageAccountType.FuturesUsdt">
            <summary> 
            Futures USDT
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BrokerageAccountType.FuturesCoin">
            <summary>
            Futures Coin
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.BrokerageTransferTransactionStatus">
            <summary>
            Brokerage transfer transaction status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BrokerageTransferTransactionStatus.Init">
            <summary>
            Init
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BrokerageTransferTransactionStatus.Process">
            <summary>
            Process
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BrokerageTransferTransactionStatus.Success">
            <summary> 
            Success 
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BrokerageTransferTransactionStatus.Failure">
            <summary> 
            Failure 
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.BusdConvertType">
            <summary>
            Busd convert type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BusdConvertType.AutoConvertDeposit">
            <summary>
            Auto convert when deposit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BusdConvertType.AutoConvertWithdrawal">
            <summary>
            Auto convert when withdraw
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BusdConvertType.WithdrawalFailed">
            <summary>
            In case withdraw failed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BusdConvertType.ApiConvert">
            <summary>
            Convert via sapi call
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.BusdConvertType.AutoConvert">
            <summary>
            Busd auto convert job
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.C2COrderStatus">
            <summary>
            C2C order status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.C2COrderStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.C2COrderStatus.Trading">
            <summary>
            Trading
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.C2COrderStatus.BuyerPayed">
            <summary>
            Buyer has paid
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.C2COrderStatus.Distributing">
            <summary>
            Distributing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.C2COrderStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.C2COrderStatus.InAppeal">
            <summary>
            In appeal
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.C2COrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.C2COrderStatus.CanceledBySystem">
            <summary>
            CanceledBySystem
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.CancelReplaceMode">
            <summary>
            Cancel replace mode
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.CancelReplaceMode.StopOnFailure">
            <summary>
            If the cancel request fails, the new order placement will not be attempted.
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.CancelReplaceMode.AllowFailure">
            <summary>
            New order placement will be attempted even if cancel request fails.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.CancelRestriction">
            <summary>
            Restrictions for order cancelation
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.CancelRestriction.OnlyNew">
            <summary>
            Cancel will succeed if the order status is New
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.CancelRestriction.OnlyPartiallyFilled">
            <summary>
            Cancel will succeed if order status is PartiallyFilled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.CloudMiningPaymentStatus">
            <summary>
            Cloud mining payment status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.CloudMiningPaymentStatus.Payment">
            <summary>
            Payment
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.CloudMiningPaymentStatus.Refund">
            <summary>
            Refund
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ContractType">
            <summary>
            Type of contract
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.Perpetual">
            <summary>
            Perpetual
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.PerpetualDelivering">
            <summary>
            Perpetual delivering
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.CurrentMonth">
            <summary>
            Current month
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.CurrentQuarter">
            <summary>
            Current quarter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.CurrentQuarterDelivering">
            <summary>
            Current quarter delivering
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.NextQuarter">
            <summary>
            Next quarter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.NextQuarterDelivering">
            <summary>
            Next quarter delivering
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.NextMonth">
            <summary>
            Next month
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ContractType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ConvertOrderStatus">
            <summary>
            Convert Order status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ConvertOrderStatus.Process">
            <summary>
            Process
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ConvertOrderStatus.AcceptSuccess">
            <summary>
            Accept success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ConvertOrderStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ConvertOrderStatus.Fail">
            <summary>
            Fail
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.DepositStatus">
            <summary>
            The status of a deposit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.DepositStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.DepositStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.DepositStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.DownloadStatus">
            <summary>
            Download status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.DownloadStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.DownloadStatus.Completed">
            <summary>
            Ready for download
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.EarningType">
            <summary>
            Mining earnings type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.MiningWallet">
            <summary>
            Mining wallet
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.MergedMining">
            <summary>
            Merged mining
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.ActivityBonus">
            <summary>
            Activity bonus
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.Rebate">
            <summary>
            Rebate
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.SmartPool">
            <summary>
            Smart pool
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.MiningAddress">
            <summary>
            Mining address
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.PoolSavings">
            <summary>
            Pool savings
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.Transfered">
            <summary>
            Transfered
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.IncomeTransfer">
            <summary>
            Income transfer
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.HashrateResaleMiningWallet">
            <summary>
            Hashrate resale - mining wallet
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.EarningType.HashrateResalePoolSavings">
            <summary>
            Hashrate resale - pool savings
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ExecutionType">
            <summary>
            The type of execution
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ExecutionType.New">
            <summary>
            New
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ExecutionType.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ExecutionType.Replaced">
            <summary>
            Replaced
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ExecutionType.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ExecutionType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ExecutionType.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ExecutionType.Amendment">
            <summary>
            Amendment
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ExecutionType.TradePrevention">
            <summary>
            Self trade prevented
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.FiatPaymentStatus">
            <summary>
            Status of a fiat payment
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatPaymentStatus.Processing">
            <summary>
            Still processing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatPaymentStatus.Completed">
            <summary>
            Successfully completed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatPaymentStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatPaymentStatus.Refunded">
            <summary>
            Refunded
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.FiatWithdrawDepositStatus">
            <summary>
            Status of a fiat payment
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatWithdrawDepositStatus.Processing">
            <summary>
            Still processing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatWithdrawDepositStatus.Successful">
            <summary>
            Successfully completed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatWithdrawDepositStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatWithdrawDepositStatus.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatWithdrawDepositStatus.Refunding">
            <summary>
            Refunding
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatWithdrawDepositStatus.Refunded">
            <summary>
            Refunded
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatWithdrawDepositStatus.RefundFailed">
            <summary>
            Refund failed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FiatWithdrawDepositStatus.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.FuturesAccountType">
            <summary>
            Futures account type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesAccountType.UsdtMarginedFutures">
            <summary>
            USDT Margined Futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesAccountType.CoinMarginedFutures">
            <summary>
            COIN Margined Futures
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.FuturesMarginChangeDirectionType">
            <summary>
            The direction to change futures margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesMarginChangeDirectionType.Add">
            <summary>
            Add margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesMarginChangeDirectionType.Reduce">
            <summary>
            Reduce Margin
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.FuturesMarginType">
            <summary>
            Type of Margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesMarginType.Isolated">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesMarginType.Cross">
            <summary>
            Crossed margin
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.FuturesTransferStatus">
            <summary>
            Status of a transfer between spot and futures account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesTransferStatus.Pending">
            <summary>
            Pending to execute
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesTransferStatus.Confirmed">
            <summary>
            Successfully transferred
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesTransferStatus.Failed">
            <summary>
            Execution failed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.FuturesTransferType">
            <summary>
            Futures account transfer type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesTransferType.FromSpotToUsdtFutures">
            <summary>
            From spot to USDT-M futures account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesTransferType.FromUsdtFuturesToSpot">
            <summary>
            From USDT-M futures to spot account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesTransferType.FromSpotToCoinFutures">
            <summary>
            From spot to COIN-M futures account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesTransferType.FromCoinFuturesToSpot">
            <summary>
            From COIN-M futures to spot account
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.HashrateResaleStatus">
            <summary>
            Resale status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.HashrateResaleStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.HashrateResaleStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.HashrateResaleStatus.Terminated">
            <summary>
            Terminated
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.IncomeType">
            <summary>
            Type of futures income
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.Transfer">
            <summary>
            Transfer into account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.WelcomeBonus">
            <summary>
            Futures welcome bonus
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.RealizedPnl">
            <summary>
            Futures realized profit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.FundingFee">
            <summary>
            Futures funding fee
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.Commission">
            <summary>
            Futures trading commission
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.InsuranceClear">
            <summary>
            Insurance clear
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.ReferralKickback">
            <summary>
            Referral kickback
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.CommissionRebate">
            <summary>
            Commission rebate
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.ApiRebate">
            <summary>
            Api rebate
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.ContestReward">
            <summary>
            Contest reward
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.CrossCollateralTransfer">
            <summary>
            Cross collateral transfer
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.OptionsPremiumFee">
            <summary>
            Options premium fee
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.OptionsSettleProfit">
            <summary>
            Options settle profit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.InternalTransfer">
            <summary>
            Internal transfer
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.AutoExchange">
            <summary>
            Auto exchange
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.DeliveredSettlement">
            <summary>
            Delivered settlement
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.CoinSwapDeposit">
            <summary>
            Coin swap deposit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.CoinSwapWithdraw">
            <summary>
            Coin swap withdraw
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IncomeType.PositionLimitIncreaseFee">
            <summary>
            Position limit increase fee
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.IndicatorType">
            <summary>
            Types of indicators
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IndicatorType.UnfilledRatio">
            <summary>
            Unfilled ratio
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IndicatorType.ExpirationRatio">
            <summary>
            Expired orders ratio
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IndicatorType.CancelationRatio">
            <summary>
            Canceled orders ratio
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.IsolatedMarginTransferDirection">
            <summary>
            Transfer direction for isolated margin transfer
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IsolatedMarginTransferDirection.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.IsolatedMarginTransferDirection.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.KlineInterval">
            <summary>
            The interval for the kline, the int value represents the time in seconds
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.OneSecond">
            <summary>
            1s
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.ThreeMinutes">
            <summary>
            3m
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.TwoHour">
            <summary>
            2h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.FourHour">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.SixHour">
            <summary>
            6h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.EightHour">
            <summary>
            8h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.TwelveHour">
            <summary>
            12h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.ThreeDay">
            <summary>
            3d
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.OneWeek">
            <summary>
            1w
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.KlineInterval.OneMonth">
            <summary>
            1M
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.LendingType">
            <summary>
            Lending type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LendingType.Daily">
            <summary>
            Flexible
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LendingType.Activity">
            <summary>
            Activity
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LendingType.CustomizedFixed">
            <summary>
            Customized fixed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.LiquidityType">
            <summary>
            Add/Remove liquidity type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LiquidityType.Single">
            <summary>
            Add/Remove single asset
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LiquidityType.Combined">
            <summary>
            Add/Remove combination of all coins
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ListOrderStatus">
            <summary>
            List order status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ListOrderStatus.Executing">
            <summary>
            Executing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ListOrderStatus.Done">
            <summary>
            Executed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ListOrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ListStatusType">
            <summary>
            List status type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ListStatusType.Response">
            <summary>
            Failed action
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ListStatusType.ExecutionStarted">
            <summary>
            Placed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ListStatusType.Done">
            <summary>
            Order list is done
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.LoanIncomeType">
            <summary>
            Income type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LoanIncomeType.BorrowIn">
            <summary>
            Borrow in
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LoanIncomeType.CollateralSpent">
            <summary>
            Collateral spent
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LoanIncomeType.RepayAmount">
            <summary>
            Repay amount
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LoanIncomeType.CollateralReturn">
            <summary>
            Collateral return
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LoanIncomeType.AddCollateral">
            <summary>
            Add collateral
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LoanIncomeType.RemoveCollateral">
            <summary>
            Remove collateral
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.LoanIncomeType.CollateralReturnAfterLiquidation">
            <summary>
            Collateral return after liquidation
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.MarginLevelStatus">
            <summary>
            Margin level status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginLevelStatus.Excessive">
            <summary>
            Excessive
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginLevelStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginLevelStatus.MarginCall">
            <summary>
            Margin call
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginLevelStatus.PreLiquidation">
            <summary>
            Pre-liquidation
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginLevelStatus.ForceLiquidation">
            <summary>
            Force liquidation
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.MarginStatus">
            <summary>
            Status of a margin action
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginStatus.Pending">
            <summary>
            Pending to execution
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginStatus.Completed">
            <summary>
            Executed, waiting to be confirmed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginStatus.Confirmed">
            <summary>
            Successfully loaned/repayed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MarginStatus.Failed">
            <summary>
            execution failed, nothing happened to your account
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.MinerStatus">
            <summary>
            Miner status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MinerStatus.All">
            <summary>
            All miners
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MinerStatus.Valid">
            <summary>
            Valid
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MinerStatus.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.MinerStatus.Failure">
            <summary>
            Failure
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.OrderOperationResult">
            <summary>
            Operation result
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderOperationResult.Success">
            <summary>
            Successful
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderOperationResult.Failure">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderOperationResult.NotAttempted">
            <summary>
            Not attempted
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.OrderRejectReason">
            <summary>
            The reason the order was rejected
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.None">
            <summary>
            Not rejected
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.UnknownInstrument">
            <summary>
            Unknown instrument
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.MarketClosed">
            <summary>
            Closed market
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.PriceQuantityExceedsHardLimits">
            <summary>
            Quantity out of bounds
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.UnknownOrder">
            <summary>
            Unknown order
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.DuplicateOrder">
            <summary>
            Duplicate
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.UnknownAccount">
            <summary>
            Unkown account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.InsufficientBalance">
            <summary>
            Not enough balance
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.AccountInactive">
            <summary>
            Account not active
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.AccountCannotSettle">
            <summary>
            Cannot settle
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderRejectReason.StopPriceWouldTrigger">
            <summary>
            Stop price would trigger immediately
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.OrderResponseType">
            <summary>
            Response type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderResponseType.Acknowledge">
            <summary>
            Ack only
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderResponseType.Result">
            <summary>
            Resulting order
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderResponseType.Full">
            <summary>
            Full order info, only valid on SPOT orders  
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.OrderSide">
            <summary>
            The side of an order
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.OrderStatus">
            <summary>
            The status of an orderн
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.PendingNew">
            <summary>
            Order is not yet active
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.New">
            <summary>
            Order is new
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Order is partly filled, still has quantity left to fill
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.Filled">
            <summary>
            The order has been filled and completed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.Canceled">
            <summary>
            The order has been canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.PendingCancel">
            <summary>
            The order is in the process of being canceled  (currently unused)
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.Rejected">
            <summary>
            The order has been rejected
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.Expired">
            <summary>
            The order has expired
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.Insurance">
            <summary>
            Liquidation with Insurance Fund
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.Adl">
            <summary>
            Counterparty Liquidation
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderStatus.ExpiredInMatch">
            <summary>
            Expired because of trigger SelfTradePrevention
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.OrderUrgency">
            <summary>
            Order urgency
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderUrgency.Low">
            <summary>
            Low urgency
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderUrgency.Medium">
            <summary>
            Medium urgency
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.OrderUrgency.High">
            <summary>
            High urgency
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.PayOrderType">
            <summary>
            Pay order type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayOrderType.Pay">
            <summary>
            C2B Merchant Acquiring Payment
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayOrderType.PayRefund">
            <summary>
            C2B Merchant Acquiring Payment, refund
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayOrderType.C2C">
            <summary>
            C2C Transfer Payment
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayOrderType.CryptoBox">
            <summary>
            Crypto box
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayOrderType.CryptoBoxRefund">
            <summary>
            Crypto box, refund
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayOrderType.C2CHolding">
            <summary>
            Transfer to new HitoBit user
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayOrderType.C2CHoldingRefund">
            <summary>
            Transfer to new HitoBit user, refund
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayOrderType.Payout">
            <summary>
            B2C Disbursement Payment
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.PayWalletType">
            <summary>
            Wallet type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayWalletType.Funding">
            <summary>
            Funding wallet
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayWalletType.Spot">
            <summary>
            Spot wallet
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayWalletType.Fiat">
            <summary>
            Fiat wallet
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayWalletType.Card">
            <summary>
            Card payment
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PayWalletType.Earn">
            <summary>
            Earn wallet
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.PeriodInterval">
            <summary>
            The interval for the period
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.TwoHour">
            <summary>
            2h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.FourHour">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.SixHour">
            <summary>
            6h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.TwelveHour">
            <summary>
            12h
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PeriodInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.PortfolioMarginAccountStatus">
            <summary>
            Account status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PortfolioMarginAccountStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PortfolioMarginAccountStatus.MarginCall">
            <summary>
            Margin call
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PortfolioMarginAccountStatus.SupplyMargin">
            <summary>
            Supply margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PortfolioMarginAccountStatus.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PortfolioMarginAccountStatus.ActiveLiquidation">
            <summary>
            Active liquidation
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PortfolioMarginAccountStatus.ForceLiquidation">
            <summary>
            Force liquidation
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PortfolioMarginAccountStatus.Bankrupted">
            <summary>
            Bankruped
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.PositionMode">
            <summary>
            User position mode
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PositionMode.Hedge">
            <summary>
            In the Hedge Mode, one contract can hold positions in both long and short directions at the same time, and hedge positions in different directions under the same contract.
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PositionMode.OneWay">
            <summary>
            In the One-way Mode, one contract can only hold positions in one direction.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PositionSide.Short">
            <summary>
            Short
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PositionSide.Long">
            <summary>
            Long
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PositionSide.Both">
            <summary>
            Both for One-way mode when placing an order
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.PriceMatch">
            <summary>
            Price matching type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.None">
            <summary>
            No price match
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.Opponent">
            <summary>
            Counterparty best price
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.Opponent5">
            <summary>
            Counterparty 5th best price
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.Opponent10">
            <summary>
            Counterparty 10th best price
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.Opponent20">
            <summary>
            Counterparty 20th best price
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.Queue">
            <summary>
            The best price on the same side of the order book
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.Queue5">
            <summary>
            The 5th best price on the same side of the order book
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.Queue10">
            <summary>
            The 10th best price on the same side of the order book
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.PriceMatch.Queue20">
            <summary>
            The 20th best price on the same side of the order book
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ProductStatus">
            <summary>
            Status of a product
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ProductStatus.All">
            <summary>
            All products
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ProductStatus.Subscribable">
            <summary>
            Products which are subscribable
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ProductStatus.Unsubscribable">
            <summary>
            Products which are unsubscribable
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ProjectStatus">
            <summary>
            Project status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ProjectStatus.Holding">
            <summary>
            Holding
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ProjectStatus.Redeemed">
            <summary>
            Redeemed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ProjectType">
            <summary>
            The type of project
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ProjectType.Activity">
            <summary>
            Regular
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ProjectType.CustomizedFixed">
            <summary>
            Customized fixed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.RateLimitInterval">
            <summary>
            Rate limit on what unit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RateLimitInterval.Second">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RateLimitInterval.Minute">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RateLimitInterval.Day">
            <summary>
            Days
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.RateLimitType">
            <summary>
            Type of rate limit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RateLimitType.RequestWeight">
            <summary>
            Request weight
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RateLimitType.Orders">
            <summary>
            Order amount
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RateLimitType.RawRequests">
            <summary>
            Raw requests
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RateLimitType.Connections">
            <summary>
            Connections
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.RebateType">
            <summary>
            Type of rebate
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RebateType.CommissionRebate">
            <summary>
            Commission rebate
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RebateType.ReferralKickback">
            <summary>
            Referral kickback
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.RedeemType">
            <summary>
            Redeem type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RedeemType.Fast">
            <summary>
            Fast
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RedeemType.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.RedemptionType">
            <summary>
            Simple earn redemption type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RedemptionType.ToSpot">
            <summary>
            Redeem to spot account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RedemptionType.ToFlexibleProduct">
            <summary>
            Redeem to flexible product
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RedemptionType.EarlyRedemption">
            <summary>
            Early redemption
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.RewardType">
            <summary>
            Simple Earn Reward type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RewardType.BonusTieredApr">
            <summary>
            Bonus tiered APR
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RewardType.RealtimeApr">
            <summary>
            Realtime APR
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.RewardType.HistoricalRewards">
            <summary>
            Historical rewards
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SelfTradePreventionMode.ExpireTaker">
            <summary>
            Expire taker
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SelfTradePreventionMode.ExpireMaker">
            <summary>
            Exire maker
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SelfTradePreventionMode.ExpireBoth">
            <summary>
            Exire both
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SelfTradePreventionMode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SideEffectType">
            <summary>
            Side effect for a margin order
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SideEffectType.NoSideEffect">
            <summary>
            Normal trade
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SideEffectType.MarginBuy">
            <summary>
            Margin trade order
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SideEffectType.AutoRepay">
            <summary>
            Make auto repayment after order is filled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SideEffectType.AutoBorrowRepay">
            <summary>
            Automatic borrowing and repayment, simultaneously
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SpotOrderType">
            <summary>
            Order type for a spot order
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SpotOrderType.Limit">
            <summary>
            Limit orders will be placed at a specific price. If the price isn't available in the order book for that asset the order will be added in the order book for someone to fill.
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SpotOrderType.Market">
            <summary>
            Market order will be placed without a price. The order will be executed at the best price available at that time in the order book.
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SpotOrderType.StopLoss">
            <summary>
            Stop loss order. Will execute a market order when the price drops below a price to sell and therefor limit the loss
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SpotOrderType.StopLossLimit">
            <summary>
            Stop loss order. Will execute a limit order when the price drops below a price to sell and therefor limit the loss
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SpotOrderType.TakeProfit">
            <summary>
            Take profit order. Will execute a market order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SpotOrderType.TakeProfitLimit">
            <summary>
            Take profit limit order. Will execute a limit order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SpotOrderType.LimitMaker">
            <summary>
            Same as a limit order, however it will fail if the order would immediately match, therefor preventing taker orders
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.FuturesOrderType">
            <summary>
            Order type for a futures order
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesOrderType.Limit">
            <summary>
            Limit orders will be placed at a specific price. If the price isn't available in the order book for that asset the order will be added in the order book for someone to fill.
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesOrderType.Market">
            <summary>
            Market order will be placed without a price. The order will be executed at the best price available at that time in the order book.
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesOrderType.Stop">
            <summary>
            Stop order. Execute a limit order when price reaches a specific Stop price
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesOrderType.StopMarket">
            <summary>
            Stop market order. Execute a market order when price reaches a specific Stop price
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesOrderType.TakeProfit">
            <summary>
            Take profit order. Will execute a limit order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesOrderType.TakeProfitMarket">
            <summary>
            Take profit market order. Will execute a market order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesOrderType.TrailingStopMarket">
            <summary>
            A trailing stop order will execute an order when the price drops below a certain percentage from its all time high since the order was activated
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.FuturesOrderType.Liquidation">
            <summary>
            A liquidation order
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.StakingProductType">
            <summary>
            Staking type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.StakingProductType.Staking">
            <summary>
            Locked staking
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.StakingProductType.FlexibleDeFi">
            <summary>
            Flexible DeFi staking
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.StakingProductType.LockedDeFi">
            <summary>
            Locked DeFi staking
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.StakingTransactionType">
            <summary>
            Staking transaction type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.StakingTransactionType.Subscription">
            <summary>
            Subscription
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.StakingTransactionType.Redemption">
            <summary>
            Redemption
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.StakingTransactionType.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SubAccountDepositStatus">
            <summary>
            Sub Account Deposit Status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubAccountDepositStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubAccountDepositStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubAccountDepositStatus.CreditedButCannotWithdraw">
            <summary>
            Credited but cannot withdraw
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SubAccountMarginTransferType">
            <summary>
            Sub account margin transfer type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubAccountMarginTransferType.FromSubAccountSpotToSubAccountMargin">
            <summary>
            Sub account spot to sub account margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubAccountMarginTransferType.FromSubAccountMarginToSubAccountSpot">
            <summary>
            From sub account margin to sub account spot
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SubAccountTransferSubAccountType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubAccountTransferSubAccountType.TransferIn">
            <summary>
            From main spot account to sub account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubAccountTransferSubAccountType.TransferOut">
            <summary>
            From sub account to main spot account
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SubscriptionStatus">
            <summary>
            Simple earn subscription status
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionStatus.Purchasing">
            <summary>
            Purchasing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SubscriptionType">
            <summary>
            Simple earn subscription type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionType.Auto">
            <summary>
            Auto subscribe
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionType.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionType.Convert">
            <summary>
            Locked to flexible
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionType.Loan">
            <summary>
            Flexible loan
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionType.AutoInvest">
            <summary>
            Auto invest
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SubscriptionType.Transfer">
            <summary>
            Locked saving to flexible
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SymbolFilterType">
            <summary>
            Filter type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.Unknown">
            <summary>
            Unknown filter type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.Price">
            <summary>
            Price filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.PricePercent">
            <summary>
            Price percent filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.LotSize">
            <summary>
            Lot size filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.MarketLotSize">
            <summary>
            Market lot size filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.MinNotional">
            <summary>
            Min notional filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.MaxNumberOrders">
            <summary>
            Max orders filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.MaxNumberAlgorithmicOrders">
            <summary>
            Max algo orders filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.IcebergParts">
            <summary>
            Max iceberg parts filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.MaxPosition">
            <summary>
            Max position filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.PercentagePriceBySide">
            <summary>
            Price filter by side
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.TrailingDelta">
            <summary>
            Trailing delta filter
            </summary>,
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.Notional">
            <summary>
            Notional filter
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolFilterType.IcebergOrders">
            <summary>
            Max Iceberg Orders filter
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SymbolStatus">
            <summary>
            Status of a symbol
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.PreTrading">
            <summary>
            Not trading yet
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.PendingTrading">
            <summary>
            Pending trading
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.Trading">
            <summary>
            Trading
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.PostTrading">
            <summary>
            No longer trading
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.EndOfDay">
            <summary>
            Not trading
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.Halt">
            <summary>
            Halted
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.AuctionMatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.Break">
            <summary>
            
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.Close">
            <summary>
            Closed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.PreDelivering">
            <summary>
            Pre delivering
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.Delivering">
            <summary>
            Delivering
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.PreSettle">
            <summary>
            Pre settle
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SymbolStatus.Settling">
            <summary>
            Settings
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.SystemStatus">
            <summary>
            Status of the HitoBit system
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SystemStatus.Normal">
            <summary>
            Operational
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.SystemStatus.Maintenance">
            <summary>
            In maintenance
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.TimeInForce">
            <summary>
            The time the order will be active for
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TimeInForce.GoodTillCanceled">
            <summary>
            GoodTillCanceled orders will stay active until they are filled or canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            ImmediateOrCancel orders have to be at least partially filled upon placing or will be automatically canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TimeInForce.FillOrKill">
            <summary>
            FillOrKill orders have to be entirely filled upon placing or will be automatically canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TimeInForce.GoodTillCrossing">
            <summary>
            GoodTillCrossing orders will post only
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TimeInForce.GoodTillExpiredOrCanceled">
            <summary>
            Good til the order expires or is canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TimeInForce.GoodTillDate">
            <summary>
            Good til date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.TradeRulesBehaviour">
            <summary>
            Trade rules behaviour
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TradeRulesBehaviour.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TradeRulesBehaviour.ThrowError">
            <summary>
            Throw an error if not complying
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TradeRulesBehaviour.AutoComply">
            <summary>
            Auto adjust order when not complying
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransactionType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransactionType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.TransferAccountType">
            <summary>
            Transfer account type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferAccountType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferAccountType.UsdtFuture">
            <summary>
            USDT-M future
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferAccountType.CoinFuture">
            <summary>
            Coin-M future
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferAccountType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferAccountType.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.TransferDirection">
            <summary>
            Direction of a transfer
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferDirection.RollIn">
            <summary>
            Roll-in
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferDirection.RollOut">
            <summary>
            Roll-out
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.TransferDirectionType">
            <summary>
            Transfer direction
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferDirectionType.MainToMargin">
            <summary>
            From main account to margin account
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.TransferDirectionType.MarginToMain">
            <summary>
            From margin account to main account
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.UnderlyingType">
            <summary>
            Underlying Type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UnderlyingType.Coin">
            <summary>
            Coin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UnderlyingType.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.UniversalTransferType">
            <summary>
            Universal transfer type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MainToFunding">
            <summary>
            Main (spot) to Funding
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MainToUsdFutures">
            <summary>
            Main (spot) to Usd Futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MainToCoinFutures">
            <summary>
            Main (spot) to Coin Futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MainToMargin">
            <summary>
            Main (spot) to Margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MainToMining">
            <summary>
            Main (spot) to Mining
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MainToIsolatedMargin">
            <summary>
            Main to isolated margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.FundingToMain">
            <summary>
            Funding to Main (spot)
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.FundingToUsdFutures">
            <summary>
            Funding to Usd futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.FundingToMargin">
            <summary>
            Funding to margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.UsdFuturesToMain">
            <summary>
            Usd futures to Main (spot)
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.UsdFuturesToFunding">
            <summary>
            Usd futures to Funding
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.UsdFuturesToMargin">
            <summary>
            Usd futures to Margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.CoinFuturesToMain">
            <summary>
            Coin futures to Main (spot)
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.CoinFuturesToMargin">
            <summary>
            Coin futures to Margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MarginToMain">
            <summary>
            Margin to Main (spot)
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MarginToUsdFutures">
            <summary>
            Margin to Usd futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MarginToCoinFutures">
            <summary>
            Margin to Coin futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MarginToMining">
            <summary>
            Margin to Mining
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MarginToFunding">
            <summary>
            Margin to Funding
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.IsolatedMarginToMargin">
            <summary>
            Isolated margin to margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MarginToIsolatedMargin">
            <summary>
            Margin to isolated margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.IsolatedMarginToIsolatedMargin">
            <summary>
            Isolated margin to Isolated margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.IsolatedMarginToMain">
            <summary>
            Isolated margin to main
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MiningToMain">
            <summary>
            Mining to Main (spot)
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MiningToUsdFutures">
            <summary>
            Mining to Usd futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MiningToMargin">
            <summary>
            Mining to Margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.FundingToCoinFutures">
            <summary>
            Funding to Coin futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.CoinFuturesToFunding">
            <summary>
            Coin futures to Funding
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MainToOption">
            <summary>
            Main to Option
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.OptionToMain">
            <summary>
            Option to Main
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.UsdFuturesToOption">
            <summary>
            Usd Futures to Option
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.OptionToUsdFutures">
            <summary>
            Option to Usd Futures
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.MarginToOption">
            <summary>
            Margin to Option
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.OptionToMargin">
            <summary>
            Option to Margin
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.FundingToOption">
            <summary>
            Funding to Option
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.UniversalTransferType.OptionToFunding">
            <summary>
            Option to Funding
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.ValidTime">
            <summary>
            Valid Time
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ValidTime.TenSeconds">
            <summary>
            10 seconds
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ValidTime.ThirtySeconds">
            <summary>
            30 seconds
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ValidTime.OneMinute">
            <summary>
            1 minute
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.ValidTime.TwoMinutes">
            <summary>
            2 minutes
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.WalletType">
            <summary>
            Wallet type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WalletType.Spot">
            <summary>
            Spot wallet
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WalletType.Funding">
            <summary>
            Funding wallet
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.WithdrawalStatus">
            <summary>
            The status of a withdrawal
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalStatus.EmailSend">
            <summary>
            Email has been send
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalStatus.Canceled">
            <summary>
            Withdrawal has been canceled
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalStatus.AwaitingApproval">
            <summary>
            Withdrawal is awaiting approval
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalStatus.Rejected">
            <summary>
            Withdrawal has been rejected
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalStatus.Processing">
            <summary>
            Withdrawal is processing
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalStatus.Failure">
            <summary>
            Withdrawal has failed
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalStatus.Completed">
            <summary>
            Withdrawal has been processed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.WithdrawalTransferType">
            <summary>
            Withdrawal transfer type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalTransferType.ExternalTransfer">
            <summary>
            Withdrawal to external wallets
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawalTransferType.InternalTransfer">
            <summary>
            Withdrawal from one hitobit account to another one
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.WithdrawDepositTransferType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawDepositTransferType.Internal">
            <summary>
            Internal transfer
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WithdrawDepositTransferType.External">
            <summary>
            External transfer
            </summary>
        </member>
        <member name="T:HitoBit.Net.Enums.WorkingType">
            <summary>
            Type of working
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WorkingType.Mark">
            <summary>
            Mark price type
            </summary>
        </member>
        <member name="F:HitoBit.Net.Enums.WorkingType.Contract">
            <summary>
            Contract price type
            </summary>
        </member>
        <member name="T:HitoBit.Net.ExtensionMethods.HitoBitExtensionMethods">
            <summary>
            Extension methods specific to using the HitoBit API
            </summary>
        </member>
        <member name="M:HitoBit.Net.ExtensionMethods.HitoBitExtensionMethods.UsedWeight(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get the used weight from the response headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.ExtensionMethods.HitoBitExtensionMethods.UsedOrderCount(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get the used weight from the response headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.HitoBitEnvironment">
            <summary>
            HitoBit environments
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.SpotRestAddress">
            <summary>
            Spot Rest API address
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.SpotSocketStreamAddress">
            <summary>
            Spot Socket Streams address
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.SpotSocketApiAddress">
            <summary>
            Spot Socket API address
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.BlvtSocketAddress">
            <summary>
            Blvt Socket API address
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.UsdFuturesRestAddress">
            <summary>
            Usd futures Rest address
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.UsdFuturesSocketAddress">
            <summary>
            Usd futures Socket address
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.UsdFuturesSocketApiAddress">
            <summary>
            Usd futures Socket address for the request API
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.CoinFuturesRestAddress">
            <summary>
            Coin futures Rest address
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.CoinFuturesSocketAddress">
            <summary>
            Coin futures Socket address
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.Testnet">
            <summary>
            Testnet environment
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitEnvironment.Us">
            <summary>
            HitoBit.us environment
            </summary>
        </member>
        <member name="M:HitoBit.Net.HitoBitEnvironment.CreateCustom(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
        </member>
        <member name="T:HitoBit.Net.HitoBitExchange">
            <summary>
            HitoBit exchange information and configuration
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:HitoBit.Net.HitoBitExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="M:HitoBit.Net.HitoBitExchange.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <summary>
            Format a base and quote asset to a HitoBit recognized symbol 
            </summary>
            <param name="baseAsset">Base asset</param>
            <param name="quoteAsset">Quote asset</param>
            <param name="tradingMode">Trading mode</param>
            <param name="deliverTime">Delivery time for delivery futures</param>
            <returns></returns>
        </member>
        <member name="P:HitoBit.Net.HitoBitExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the HitoBit API
            </summary>
        </member>
        <member name="T:HitoBit.Net.HitoBitRateLimiters">
            <summary>
            Rate limiter configuration for the HitoBit API
            </summary>
        </member>
        <member name="E:HitoBit.Net.HitoBitRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="T:HitoBit.Net.HitoBitHelpers">
            <summary>
            Helper methods for the HitoBit API
            </summary>
        </member>
        <member name="M:HitoBit.Net.HitoBitHelpers.ClampQuantity(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Clamp a quantity between a min and max quantity and floor to the closest step
            </summary>
            <param name="minQuantity"></param>
            <param name="maxQuantity"></param>
            <param name="stepSize"></param>
            <param name="quantity"></param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.HitoBitHelpers.ClampPrice(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Clamp a price between a min and max price
            </summary>
            <param name="minPrice"></param>
            <param name="maxPrice"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.HitoBitHelpers.FloorPrice(System.Decimal,System.Decimal)">
            <summary>
            Floor a price to the closest tick
            </summary>
            <param name="tickSize"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.HitoBitHelpers.Floor(System.Decimal)">
            <summary>
            Floor
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.HitoBitTrackerFactory">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.HitoBitTrackerFactory.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:HitoBit.Net.HitoBitTrackerFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:HitoBit.Net.HitoBitTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.HitoBitTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApi">
            <summary>
            HitoBit Coin futures API endpoints
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApi.CommonFuturesClient">
            <summary>
            DEPRECATED; use <see cref="T:CryptoExchange.Net.SharedApis.ISharedClient" /> instead for common/shared functionality. See <see href="https://majidbigdeli.github.io/CryptoExchange.Net/docs/index.html#shared" /> for more info.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount">
            <summary>
            HitoBit COIN-M futures account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetPositionInformationAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account position information
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#position-information-user_data" /></para>
            </summary>
            <param name="marginAsset">Filter by margin asset, for example `ETH`</param>
            <param name="pair">Filter by pair, for example `BTCUSD`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of Positions</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account information, including balances
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#account-information-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>.
            Gets account balances
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#futures-account-balance-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.ModifyPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change user's position mode (Hedge Mode or One-way Mode ) on EVERY symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#change-position-mode-trade" /></para>
            </summary>
            <param name="dualPositionSide">User position mode</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user's position mode (Hedge Mode or One-way Mode ) on EVERY symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#get-current-position-mode-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.ChangeInitialLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Requests to change the initial leverage of the given symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#change-initial-leverage-trade" /></para>
            </summary>
            <param name="symbol">Symbol to change the initial leverage for, for example `BTCUSD_PERP`</param>
            <param name="leverage">The amount of initial leverage to change to</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Result of the initial leverage change request</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.ChangeMarginTypeAsync(System.String,HitoBit.Net.Enums.FuturesMarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change the margin type for an open position
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#change-margin-type-trade" /></para>
            </summary>
            <param name="symbol">Symbol to change the position type for, for example `BTCUSD_PERP`</param>
            <param name="marginType">The type of margin to use</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.ModifyPositionMarginAsync(System.String,System.Decimal,HitoBit.Net.Enums.FuturesMarginChangeDirectionType,System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change the margin on an open position
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#modify-isolated-position-margin-trade" /></para>
            </summary>
            <param name="symbol">Symbol to adjust the position margin for, for example `BTCUSD_PERP`</param>
            <param name="amount">The amount of margin to be used</param>
            <param name="type">Whether to reduce or add margin to the position</param>
            <param name="positionSide">Default BOTH for One-way Mode ; LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The new position margin</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetMarginChangeHistoryAsync(System.String,System.Nullable{HitoBit.Net.Enums.FuturesMarginChangeDirectionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Requests the margin change history for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#get-position-margin-change-history-trade" /></para>
            </summary>
            <param name="symbol">Symbol to get margin history for, for example `BTCUSD_PERP`</param>
            <param name="type">Filter the history by the direction of margin change</param>
            <param name="startTime">Margin changes newer than this date will be retrieved</param>
            <param name="endTime">Margin changes older than this date will be retrieved</param>
            <param name="limit">The max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of all margin changes for the symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the income history for the futures account
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#get-income-history-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get income history from, for example `BTCUSD_PERP`</param>
            <param name="incomeType">The income type filter to apply to the request</param>
            <param name="startTime">Time to start getting income history from</param>
            <param name="endTime">Time to stop getting income history from</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The income history for the futures account</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets Notional and Leverage Brackets.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#notional-bracket-for-pair-user_data" /></para>
            </summary>
            <param name="symbolOrPair">The symbol or pair to get the data for, for example `BTCUSD_PERP`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Notional and Leverage Brackets</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get position ADL quantile estimations
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#position-adl-quantile-estimation-user_data" /></para>
            </summary>
            <param name="symbol">Only get for this symbol, for example `BTCUSD_PERP`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account commission rates
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#user-commission-rate-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `BTCUSD_PERP`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>User commission rate information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Start a user stream. The resulting listen key can be used to subscribe to the user stream using the socket client.The stream will close after 60 minutes unless <see cref="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">KeepAliveUserStreamAsync</see> is called.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#start-user-data-stream-user_stream" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Keep alive the user stream. This should be called every 30 minutes to prevent the user stream being stopped
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#keepalive-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stop the user stream, no updates will be send anymore
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#close-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to stop</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForTransactionHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get download id for downloading transaction history
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#get-download-id-for-futures-transaction-history-user_data" /></para>
            </summary>
            <param name="startTime">Start time of the data to download</param>
            <param name="endTime">End time of the data to download</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadLinkForTransactionHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the download link for transaction history by download id
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#get-futures-transaction-history-download-link-by-id-user_data" /></para>
            </summary>
            <param name="downloadId">The download id as requested by <see cref="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForTransactionHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)" /></param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get download id for downloading order history
            <para><a href="https://developers.hitobit.com/docs/derivatives/coin-margined-futures/account/Get-Download-Id-For-Futures-Order-History" /></para>
            </summary>
            <param name="startTime">Start time of the data to download</param>
            <param name="endTime">End time of the data to download</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadLinkForOrderHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the download link for order history by download id
            <para><a href="https://developers.hitobit.com/docs/derivatives/coin-margined-futures/account/Get-Futures-Order-History-Download-Link-by-Id" /></para>
            </summary>
            <param name="downloadId">The download id as requested by <see cref="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)" /></param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get download id for downloading trade history
            <para><a href="https://developers.hitobit.com/docs/derivatives/coin-margined-futures/account/Get-Download-Id-For-Futures-Trade-History" /></para>
            </summary>
            <param name="startTime">Start time of the data to download</param>
            <param name="endTime">End time of the data to download</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadLinkForTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the download link for order history by download id
            <para><a href="https://developers.hitobit.com/docs/derivatives/coin-margined-futures/account/Get-Futures-Trade-Download-Link-by-Id" /></para>
            </summary>
            <param name="downloadId">The download id as requested by <see cref="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.GetDownloadIdForTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)" /></param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData">
            <summary>
            HitoBit COIN-M futures exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <summary>
            Pings the HitoBit Futures API
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#test-connectivity" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>True if successful ping, false if no response</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetServerTimeAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Requests the server for the local time. This function also determines the offset between server and local time and uses this for subsequent API calls
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#check-server-time" /></para>
            </summary>
            <param name="resetAutoTimestamp">Whether the response should be used for a new auto timestamp calculation</param>
            <param name="ct">Cancellation token</param>
            <returns>Server time</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and symbol list
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#exchange-information" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the recent trades for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#recent-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get recent trades for, for example `BTCUSD_PERP`</param>
            <param name="limit">Result limit</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the historical  trades for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#old-trades-lookup-market_data" /></para>
            </summary>
            <param name="symbol">The symbol to get recent trades for, for example `BTCUSD_PERP`</param>
            <param name="limit">Result limit</param>
            <param name="fromId">From which trade id on results should be retrieved</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets compressed, aggregate trades. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#compressed-aggregate-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get the trades for, for example `BTCUSD_PERP`</param>
            <param name="fromId">ID to get aggregate trades from INCLUSIVE.</param>
            <param name="startTime">Time to start getting trades from</param>
            <param name="endTime">Time to stop getting trades from</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The aggregated trades list for the symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#kline-candlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetPremiumIndexKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get premium index kline data for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#premium-index-kline-data" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetFundingInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get funding rate info for symbols that had FundingRateCap/ FundingRateFloor / fundingIntervalHours adjustment
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#get-funding-rate-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#get-funding-rate-history-of-perpetual-futures" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="startTime">Start time to get funding rate history</param>
            <param name="endTime">End time to get funding rate history</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The funding rate history for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetTopLongShortAccountRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Top Trader Long/Short Ratio (Accounts)
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#top-trader-long-short-ratio-accounts" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get top trader long/short ratio (accounts)</param>
            <param name="endTime">End time to get top trader long/short ratio (accounts)</param>
            <param name="ct">Cancellation token</param>
            <returns>Top Trader Long/Short Ratio (Accounts) info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetTopLongShortPositionRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Top Trader Long/Short Ratio (Positions)
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#top-trader-long-short-ratio-positions" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get top trader long/short ratio (positions)</param>
            <param name="endTime">End time to get top trader long/short ratio (positions)</param>
            <param name="ct">Cancellation token</param>
            <returns>Top Trader Long/Short Ratio (Positions) info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetGlobalLongShortAccountRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Global Long/Short Ratio (Accounts)
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#long-short-ratio" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get global long/short ratio (accounts)</param>
            <param name="endTime">End time to get global long/short ratio (accounts)</param>
            <param name="ct">Cancellation token</param>
            <returns>Global Long/Short Ratio (Accounts) info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Kline/candlestick bars for the mark price of a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#mark-price-kline-candlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol get the data for, for example `BTCUSD_PERP`</param>
            <param name="interval">The interval of the klines</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#order-book" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for, for example `BTCUSD_PERP`</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetMarkPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Mark Price and Funding Rate for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#index-price-and-mark-price" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="pair">Filter by pair, for example `BTCUSD`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetContinuousContractKlinesAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided pair
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#continuous-contract-kline-candlestick-data" /></para>
            </summary>
            <param name="pair">The symbol to get the data for, for example `BTCUSD`</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided pair
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#index-price-kline-candlestick-data" /></para>
            </summary>
            <param name="pair">The symbol to get the data for, for example `BTCUSD`</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours change
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="pair">Filter by pair, for example `BTCUSD`</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetBookPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="symbol">Symbol to get book price for, for example `BTCUSD_PERP`</param>
            <param name="pair">Filter by pair, for example `BTCUSD`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get present open interest of a specific symbol.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#open-interest" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `BTCUSD_PERP`</param>
            <param name="ct">Cancellation token</param>
            <returns>Open Interest info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetOpenInterestHistoryAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Open Interest History
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#open-interest-statistics" /></para>
            </summary>
            <param name="pair">The pair to get the data for, for example `BTCUSD`</param>
            <param name="contractType">The contract type</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get open interest history</param>
            <param name="endTime">End time to get open interest history</param>
            <param name="ct">Cancellation token</param>
            <returns>Open Interest History info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetTakerBuySellVolumeRatioAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Taker Buy/Sell Volume Ratio
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#taker-buy-sell-volume" /></para>
            </summary>
            <param name="pair">The pair to get the data for, for example `BTCUSD`</param>
            <param name="contractType">The contract type</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get taker buy/sell volume ratio</param>
            <param name="endTime">End time to get taker buy/sell volume ratio</param>
            <param name="ct">Cancellation token</param>
            <returns>Taker Buy/Sell Volume Ratio info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetBasisAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets basis
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#basis" /></para>
            </summary>
            <param name="pair">The pair to get the data for, for example `BTCUSD`</param>
            <param name="contractType">The contract type</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="ct">Cancellation token</param>
            <returns>Basis</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiExchangeData.GetPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of the prices of all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="symbol">Retrieve for a symbol, for example `BTCUSD_PERP`</param>
            <param name="pair">Retrieve prices for a specific pair, for example `BTCUSD`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of prices</returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiShared">
            <summary>
            Shared interface for COIN-M Futures rest API usage
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading">
            <summary>
            HitoBit COIN-M futures trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.PriceMatch},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new order
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `BTCUSD_PERP`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the base symbol</param>
            <param name="positionSide">The position side</param>
            <param name="reduceOnly">Specify as true if the order is intended to only reduce the position</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="activationPrice">Used with TRAILING_STOP_MARKET orders, default as the latest price（supporting different workingType)</param>
            <param name="callbackRate">Used with TRAILING_STOP_MARKET orders</param>
            <param name="workingType">stopPrice triggered by: "MARK_PRICE", "CONTRACT_PRICE"</param>
            <param name="closePosition">Close-All，used with STOP_MARKET or TAKE_PROFIT_MARKET.</param>
            <param name="orderResponseType">The response type. Default Acknowledge</param>
            <param name="priceProtect">If true when price reaches stopPrice, difference between "MARK_PRICE" and "CONTRACT_PRICE" cannot be larger than "triggerProtect" of the symbol.</param>
            <param name="priceMatch">Only avaliable for Limit/Stop/TakeProfit order</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders in one call
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#place-multiple-orders-trade" /></para>
            </summary>
            <param name="orders">The orders to place</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Returns a list of call results, one for each order. The order the results are in is the order the orders were sent</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#query-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `BTCUSD_PERP`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending order
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#cancel-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `BTCUSD_PERP`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels all open orders
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `BTCUSD_PERP`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel all open orders of the specified symbol at the end of the specified countdown. This rest endpoint means to ensure your open orders are canceled in case of an outage. The endpoint should be called repeatedly as heartbeats
            so that the existing countdown time can be canceled and replaced by a new one.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#auto-cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="countDownTime">The time after which all open orders should cancel, or 0 to cancel an existing timer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Countdown result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels muliple orders
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#cancel-multiple-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `BTCUSD_PERP`</param>
            <param name="orderIdList">The list of order ids to cancel</param>
            <param name="origClientOrderIdList">The list of client order ids to cancel</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.GetOpenOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific open order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#query-current-open-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `BTCUSD_PERP`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of open orders
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#current-all-open-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get open orders for, for example `BTCUSD_PERP`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of open orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all orders for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#all-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for, for example `BTCUSD_PERP`</param>
            <param name="orderId">If set, only orders with an order id higher than the provided will be returned</param>
            <param name="startTime">If set, only orders placed after this time will be returned</param>
            <param name="endTime">If set, only orders placed before this time will be returned</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{HitoBit.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of users forced orders
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#user-39-s-force-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get forced orders for, for example `BTCUSD_PERP`</param>
            <param name="closeType">Filter by reason for close</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of forced orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets all user trades for provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#account-trade-list-user_data" /></para>
            </summary>
            <param name="symbol">Symbol to get trades for, for example `BTCUSD_PERP`</param>
            <param name="pair">Symbol to get trades for, for example `BTCUSD`</param>
            <param name="limit">The max number of results</param>
            <param name="fromId">TradeId to fetch from. Default gets most recent trades</param>
            <param name="orderId">Get the trades for a specific order</param>
            <param name="startTime">Orders newer than this date will be retrieved</param>
            <param name="endTime">Orders older than this date will be retrieved</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of trades</returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi">
            <summary>
            HitoBit Coin futures streams
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to individual trade update. NOTE: This endpoint stream isn't document and therefor might be changed or removed without prior notice
            </summary>
            <param name="symbol">Symbol to subscribe, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to individual trade update. NOTE: This endpoint stream isn't document and therefor might be changed or removed without prior notice
            </summary>
            <param name="symbols">Symbols to subscribe, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol and intervals
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `BTCUSD_PERP`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols and intervals
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `BTCUSD_PERP`</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for a list of symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe to, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBitMiniTick}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#all-market-mini-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBit24HPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBit24HPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe to, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBit24HPrice}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#all-market-tickers-streams" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToAllBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to all book ticker update streams
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#all-book-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the book ticker update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the book ticker update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to specific symbol forced liquidations stream
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#liquidation-order-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to list of symbol forced liquidations stream
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#liquidation-order-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `BTCUSD_PERP`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToAllLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to all forced liquidations stream
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#all-market-liquidation-order-streams" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth updates for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe on, for example `BTCUSD_PERP`</param>
            <param name="levels">The amount of entries to be returned in the update</param>
            <param name="updateInterval">Update interval in milliseconds</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth updates for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe on, for example `BTCUSD_PERP`</param>
            <param name="levels">The amount of entries to be returned in the update of each symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 500. Defaults to 250</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the order book updates for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#diff-book-depth-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="updateInterval">Update interval in milliseconds, either 0 or 100, 500 or 1000, depending on endpoint</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#diff-book-depth-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `BTCUSD_PERP`</param>
            <param name="updateInterval">Update interval in milliseconds, either 0 or 100, 500 or 1000, depending on endpoint</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the account update stream. Prior to using this, the <see cref="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">restClient.CoinFuturesApi.Account.StartUserStreamAsync</see> method should be called to start the stream and obtaining a listen key.
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#user-data-streams" /></para>
            </summary>
            <param name="listenKey">Listen key retrieved by the <see cref="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitRestClientCoinFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">restClient.CoinFuturesApi.Account.StartUserStreamAsync</see> method</param>
            <param name="onLeverageUpdate">The event handler for leverage changed update</param>
            <param name="onMarginUpdate">The event handler for whenever a margin has changed</param>
            <param name="onAccountUpdate">The event handler for whenever an account update is received</param>
            <param name="onOrderUpdate">The event handler for whenever an order status update is received</param>
            <param name="onListenKeyExpired">Responds when the listen key for the stream has expired. Initiate a new instance of the stream here</param>
            <param name="onStrategyUpdate">The event handler for whenever a strategy update is received</param>
            <param name="onGridUpdate">The event handler for whenever a grid update is received</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToIndexPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Index price update stream for a single pair
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#index-price-stream" /></para>
            </summary>
            <param name="pair">The symbol, for example `BTCUSD_PERP`</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToIndexPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Index price update stream for a list of pairs
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#index-price-stream" /></para>
            </summary>
            <param name="pairs">The pairs, for example `BTCUSD`</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Mark price update stream for a single symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#mark-price-stream" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToAllMarkPriceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice}}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
            Subscribe to the Mark price update stream for all symbols
             <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#mark-price-of-all-symbols-of-a-pair" /></para>
             </summary>
             <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
             <param name="onMessage">The event handler for the received data</param>
             <param name="ct">Cancellation token for closing this subscription</param>
             <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Mark price update stream for a list of symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#mark-price-stream" /></para>
            </summary>
            <param name="symbols">The symbols, for example `BTCUSD_PERP`</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToContinuousContractKlineUpdatesAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the continuous contract candlestick update stream for the provided pair
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#continuous-contract-kline-candlestick-streams" /></para>
            </summary>
            <param name="pair">The pair, for example `BTCUSD`</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToContinuousContractKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the continuous contract candlestick update stream for the provided pairs
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#continuous-contract-kline-candlestick-streams" /></para>
            </summary>
            <param name="pairs">The pairs, for example `BTCUSD`</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToIndexKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the index candlestick update stream for the provided pair
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#index-kline-candlestick-streams" /></para>
            </summary>
            <param name="pair">The pair, for example `BTCUSD`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToIndexKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the index candlestick update stream for the provided pairs
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#index-kline-candlestick-streams" /></para>
            </summary>
            <param name="pairs">The pairs, for example `BTCUSD`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToMarkPriceKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the mark price candlestick update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#mark-price-kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `BTCUSD_PERP`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToMarkPriceKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the mark price candlestick update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/delivery/en/#mark-price-kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `BTCUSD_PERP`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApi.SubscribeToSymbolUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to contract/symbol updates
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.CoinFuturesApi.IHitoBitSocketClientCoinFuturesApiShared">
            <summary>
            Shared interface for COIN-M Futures socket API usage
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi">
            <summary>
            HitoBit general API endpoints
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.Brokerage">
            <summary>
            Endpoints related to brokerage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.Futures">
            <summary>
            Endpoints related to futures account interactions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.CryptoLoans">
            <summary>
            Endpoints related to crypto loans
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.AutoInvest">
            <summary>
            Endpoints related to auto invest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.Mining">
            <summary>
            Endpoints related to mining
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.SubAccount">
            <summary>
            Endpoints related to requesting data for and controlling sub accounts
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.Staking">
            <summary>
            Endpoints related to staking
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.SimpleEarn">
            <summary>
            Endpoints related to HitoBit Simple Earn
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApi.CopyTrading">
            <summary>
            Endpoints related to HitoBit Copy Trading
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest">
            <summary>
            HitoBit Auto Invest endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetSourceAndTargetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get auto invest source and target assets
            <para><a href="https://developers.hitobit.com/docs/auto_invest/market-data" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetSourceAssetsAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <summary>
            Get source assets info
            <para><a href="https://developers.hitobit.com/docs/auto_invest/market-data/Query-source-asset-list" /></para>
            </summary>
            <param name="targetAsset">Filter by target asset</param>
            <param name="usageType">Usage type, "RECURRING" or "ONE_TIME"</param>
            <param name="flexibleAllowedToUse">Allowed to be used for flexible</param>
            <param name="sourceType">MAIN_SITE (default) or TR (Turkey users)</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetTargetAssetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get target assets info
            <para><a href="https://developers.hitobit.com/docs/auto_invest/market-data/Get-target-asset-list" /></para>
            </summary>
            <param name="targetAsset">Filter by target asset</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetTargetAssetRoisAsync(System.String,HitoBit.Net.Enums.AutoInvestRoiType,System.Threading.CancellationToken)">
            <summary>
            Get target asset ROIs
            <para><a href="https://developers.hitobit.com/docs/auto_invest/market-data/Get-target-asset-ROI-data" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="roiType">ROI type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetIndexInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get index info
            <para><a href="https://developers.hitobit.com/docs/auto_invest/market-data/Query-Index-Details" /></para>
            </summary>
            <param name="indexId">The id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetPlansAsync(HitoBit.Net.Enums.AutoInvestPlanType,System.Threading.CancellationToken)">
            <summary>
            Get auto invest plans
            <para><a href="https://developers.hitobit.com/docs/auto_invest/market-data/Get-list-of-plans" /></para>
            </summary>
            <param name="planType">Type of plans</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.OneTimeTransactionAsync(System.String,System.String,System.Decimal,System.String,System.Boolean,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Make a one time transaction
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade" /></para>
            </summary>
            <param name="sourceType">The source type, "MAIN_SITE" for normal, "TR" for Turkey users</param>
            <param name="requestId">Request id</param>
            <param name="subscriptionQuantity">The quantity to subscribe</param>
            <param name="sourceAsset">The source asset</param>
            <param name="flexibleAllowedToUse">true: use flexible wallet</param>
            <param name="indexId">Index id</param>
            <param name="subscriptionDetails">Subscription details of asset => percentage. Total percentage should add up to 100%</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.EditPlanStatusAsync(System.Int64,HitoBit.Net.Enums.AutoInvestPlanStatus,System.Threading.CancellationToken)">
            <summary>
            Edit the status of a plan
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Change-Plan-Status" /></para>
            </summary>
            <param name="planId">The plan id</param>
            <param name="status">New status</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.EditPlanAsync(System.String,System.Decimal,HitoBit.Net.Enums.AutoInvestSubscriptionCycle,System.String,System.Collections.Generic.Dictionary{System.String,System.Decimal},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Edit a plan
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Investment-plan-adjustment" /></para>
            </summary>
            <param name="planId">The plan id</param>
            <param name="subscriptionQuantity">The quantity</param>
            <param name="subscriptionCycle">The cycle</param>
            <param name="subscriptionStartDay">Start day, 1..31. Required if cycle is monthly</param>
            <param name="subscriptionStartWeekday">Start weekday, required if cycle is Weekly or Bi-Weekly</param>
            <param name="subscriptionStartTime">Start hour, 1..24</param>
            <param name="sourceAsset">Source asset</param>
            <param name="flexibleAllowedToUse">True:use flexible wallet</param>
            <param name="subscriptionDetails">Subscription details of asset => percentage. Total percentage should add up to 100%</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.RedeemIndexLinkedPlanAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Redeem index linked plan
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Index-Linked-Plan-Redemption" /></para>
            </summary>
            <param name="indexId">The index id</param>
            <param name="requestId">Request id</param>
            <param name="redemptionPercentage">Redemption percentage</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetSubscriptionTransactionHistoryAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HitoBit.Net.Enums.AutoInvestPlanType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get subscription transaction history
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Query-subscription-transaction-history" /></para>
            </summary>
            <param name="planId">Filter by plan id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="targetAsset">Filter by target asset</param>
            <param name="planType">Filter by plan type</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetOneTimeTransactionStatusAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Get one time transaction status
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Query-One-Time-Transaction-Status" /></para>
            </summary>
            <param name="transactionId">Transaction id</param>
            <param name="requestId">Request id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.CreatePlanAsync(System.String,HitoBit.Net.Enums.AutoInvestPlanType,System.Decimal,HitoBit.Net.Enums.AutoInvestSubscriptionCycle,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Decimal},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Create new investment plan
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Investment-plan-creation" /></para>
            </summary>
            <param name="sourceType">Source type, "MAIN_SITE" for normal, "TR" for Turkey users</param>
            <param name="requestId">Request id</param>
            <param name="planType">Plan type</param>
            <param name="subscriptionQuantity">Subscription quantity</param>
            <param name="subscriptionCycle">Subscription cycle</param>
            <param name="subscriptionStartDay">Subscription start day, 1..31. Required when cycle is montly</param>
            <param name="subscriptionStartWeekday">Subscription start weekday, "MON" .. "SUN". Required when cycle is Weekly or BiWeekly</param>
            <param name="subscriptionStartTime">Subscription start time hour, 0..24</param>
            <param name="sourceAsset">Source asset</param>
            <param name="flexibleAllowedToUse">True: flexible wallet</param>
            <param name="subscriptionDetails">Subscription details of asset => percentage. Total percentage should add up to 100%</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetIndexLinkedPlanRedemptionHistoryAsync(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get index linked plan redemption history
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Query-Index-Linked-Plan-Redemption" /></para>
            </summary>
            <param name="requestId">Request id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetPlanHoldingsAsync(System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            Get holding details of a plan
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Query-holding-details-of-the-plan" /></para>
            </summary>
            <param name="planId">Filter by plan id</param>
            <param name="requestId">Request id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetIndexLinkedPlanPositionDetailsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get index linked plan position details
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Query-Index-Linked-Plan-Position-Details" /></para>
            </summary>
            <param name="indexId">The index id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiAutoInvest.GetIndexLinkedPlanRebalanceHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get index linked plan rebalance history
            <para><a href="https://developers.hitobit.com/docs/auto_invest/trade/Index-Linked-Plan-Rebalance-Details" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage">
            <summary>
            HitoBit brokerage endpoints.
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.CreateSubAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Create a Sub Account
            <para>This request will generate a sub account under your brokerage master account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Created sub-account id</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.EnableMarginForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Margin for Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Enable Margin result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.EnableFuturesForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Futures for Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Enable Futures result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.EnableLeverageTokenForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Leverage Token for Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Enable Leverage Token result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.CreateApiKeyForSubAccountAsync(System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Create Api Key for Sub Account
            <para>This request will generate a api key for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>Sub account should be enable margin before its api-key's marginTrade being enabled</para>
            <para>Sub account should be enable futures before its api-key's futuresTrade being enabled</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="isSpotTradingEnabled">Is spot trading enabled</param>
            <param name="isMarginTradingEnabled">Is margin trading enabled</param>
            <param name="isFuturesTradingEnabled">Is futures trading enabled</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Api key result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.DeleteSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Delete Sub Account Api Key
            <para>This request will delete a api key for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey"></param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 500, max 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Api key result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.ChangeSubAccountApiKeyPermissionAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Change Sub Account Api Permission
            <para>This request will change the api permission for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>Sub account should be enable margin before its api-key's marginTrade being enabled</para>
            <para>Sub account should be enable futures before its api-key's futuresTrade being enabled</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="isSpotTradingEnabled">Is spot trading enabled</param>
            <param name="isMarginTradingEnabled">Is margin trading enabled</param>
            <param name="isFuturesTradingEnabled">Is futures trading enabled</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Api key result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.AddIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Add IP Restriction for Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="ipAddress">IP address</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Restriction result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.ChangeIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable or Disable IP Restriction for Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="ipRestrict">IP restrict</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Restriction result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get IP Restriction for Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Restriction result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.DeleteIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Delete IP Restriction for Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="ipAddress">IP address</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Restriction result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub accounts</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.ChangeSubAccountCommissionAsync(System.String,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Change Sub Account Commission
            <para>This request will change the commission for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>If margin disabled, it is not allowed to send marginMakerCommission or marginTakerCommission</para>
            <para>If margin enabled, marginMakerCommission or marginTakerCommission has default value as spotMakerCommission or spotTakerCommission</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="makerCommission">Maker commission</param>
            <param name="takerCommission">Taker commission</param>
            <param name="marginMakerCommission">Margin maker commission</param>
            <param name="marginTakerCommission">Margin taker commission</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account commission result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.ChangeSubAccountFuturesCommissionAdjustmentAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Change Sub Account USDT-Ⓜ Futures Commission Adjustment
            <para>This request will change the USDT-Ⓜ futures commission for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>The sub-account's USDT-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment</para>
            <para>If futures disabled, it is not allowed to set subaccount's USDT-Ⓜ futures commission adjustment on any symbol</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="symbol">Symbol</param>
            <param name="makerAdjustment">Maker adjustment (100 for 0.01%)</param>
            <param name="takerAdjustment">Taker adjustment (100 for 0.01%)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account USDT-Ⓜ futures commission result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetSubAccountFuturesCommissionAdjustmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account USDT-Ⓜ Futures Commission Adjustment
            <para>The sub-account's USDT-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment</para>
            <para>If symbol not sent, commission adjustment of all symbols will be returned</para>
            <para>If futures disabled, it is not allowed to set subaccount's USDT-Ⓜ futures commission adjustment on any symbol</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="symbol">Symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account USDT-Ⓜ futures commissions result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.ChangeSubAccountCoinFuturesCommissionAdjustmentAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Change Sub Account COIN-Ⓜ Futures Commission Adjustment
            <para>This request will change the COIN-Ⓜ futures commission for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>The sub-account's COIN-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment</para>
            <para>If futures disabled, it is not allowed to set subaccount's COIN-Ⓜ futures commission adjustment on any symbol</para>
            <para>Different symbols have the same commission for the same pair</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="pair">Pair</param>
            <param name="makerAdjustment">Maker adjustment (100 for 0.01%)</param>
            <param name="takerAdjustment">Taker adjustment (100 for 0.01%)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account coin futures commission result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetSubAccountCoinFuturesCommissionAdjustmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account COIN-Ⓜ Futures Commission Adjustment
            <para>The sub-account's COIN-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment</para>
            <para>If pair not sent, commission adjustment of all symbols will be returned</para>
            <para>If futures disabled, it is not allowed to set subaccount's COIN-Ⓜ futures commission adjustment on any symbol</para>
            <para>Different symbols have the same commission for the same pair</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="pair">Pair</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account coin futures commissions result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetBrokerAccountInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Broker Account Information
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Broker information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.TransferUniversalAsync(System.String,System.Decimal,System.String,HitoBit.Net.Enums.BrokerageAccountType,System.String,HitoBit.Net.Enums.BrokerageAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sub Account Transfer Universal
            <para>You need to enable "internal transfer" option for the api key which requests this endpoint</para>
            <para>Transfer from master account if fromId not sent</para>
            <para>Transfer to master account if toId not sent</para>
            <para>Transfer between futures account is not supported</para>
            </summary>
            <param name="asset">Asset</param>
            <param name="quantity">Quantity</param>
            <param name="fromId">From id</param>
            <param name="fromAccountType">From type</param>
            <param name="toId">To id</param>
            <param name="toAccountType">To type</param>
            <param name="clientTransferId">Client transfer id, must be unique</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetTransferHistoryUniversalAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Transfer History Universal
            <para>Either fromId or toId must be sent. Return fromId equal master account by default</para>
            <para>Only get the latest history of past 30 days</para>
            <para>If showAllStatus is true, the status in response will show four types: INIT,PROCESS,SUCCESS,FAILURE</para>
            </summary>
            <param name="fromId">From id</param>
            <param name="toId">To id</param>
            <param name="clientTransferId">Client transfer id</param>
            <param name="startDate">From date</param>
            <param name="endDate">To date</param>
            <param name="page">Page</param>
            <param name="limit">Limit (default 500, max 500)</param>
            <param name="showAllStatus">Show all status</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer history</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.TransferAsync(System.String,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sub Account Transfer (Spot)
            <para>You need to enable "internal transfer" option for the api key which requests this endpoint</para>
            <para>Transfer from master account if fromId not sent</para>
            <para>Transfer to master account if toId not sent</para>
            </summary>
            <param name="asset">Asset</param>
            <param name="quantity">Quantity</param>
            <param name="fromId">From id</param>
            <param name="toId">To id</param>
            <param name="clientTransferId">Client transfer id, must be unique</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.TransferFuturesAsync(System.String,System.Decimal,HitoBit.Net.Enums.FuturesAccountType,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sub Account Transfer (Futures)
            <para>You need to enable "internal transfer" option for the api key which requests this endpoint</para>
            <para>Transfer from master account if fromId not sent</para>
            <para>Transfer to master account if toId not sent</para>
            <para>Each master account could transfer 5000 times/min</para>
            </summary>
            <param name="asset">Asset</param>
            <param name="quantity">Quantity</param>
            <param name="futuresType">Futures type</param>
            <param name="fromId">From id</param>
            <param name="toId">To id</param>
            <param name="clientTransferId">Client transfer id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetTransferHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Transfer History (Spot)
            <para>If showAllStatus is true, the status in response will show four types: INIT,PROCESS,SUCCESS,FAILURE</para>
            <para>If showAllStatus is false, the status in response will show three types: INIT,PROCESS,SUCCESS</para>
            </summary>
            <param name="fromId">From id</param>
            <param name="toId">To id</param>
            <param name="clientTransferId">Client transfer id</param>
            <param name="startDate">From date</param>
            <param name="endDate">To date</param>
            <param name="page">Page</param>
            <param name="limit">Limit (default 500, max 500)</param>
            <param name="showAllStatus">Show all status</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer history</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetTransferFuturesHistoryAsync(System.String,HitoBit.Net.Enums.FuturesAccountType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Transfer History (Futures)
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="futuresType">Futures type</param>
            <param name="startDate">From date (default 30 days records)</param>
            <param name="endDate">To date (default 30 days records)</param>
            <param name="page">Page (default 1)</param>
            <param name="limit">Limit (default 50, max 500)</param>
            <param name="clientTransferId">Client transfer id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer history</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetSubAccountDepositHistoryAsync(System.String,System.String,System.Nullable{HitoBit.Net.Enums.SubAccountDepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Sub Account Deposit History
            <para>Please notice the default startDate and endDate to make sure that time interval is within 0-7 days</para>
            <para>If both startDate and endDate are sent, time between startDate and endDate must be less than 7 days</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="coin">Coin</param>
            <param name="status">Status</param>
            <param name="startDate">From date (default 7 days from current timestamp)</param>
            <param name="endDate">To date (default present timestamp)</param>
            <param name="limit">Limit (default 500)</param>
            <param name="offset">Offset (default 0)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetBrokerCommissionRebatesRecentAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Broker Commission Rebate Recent Record (Spot)
            <para>Only get the latest history of past 7 days</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="startDate">From date</param>
            <param name="endDate">To date</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 500, max 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Rebates history</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetBrokerFuturesCommissionRebatesHistoryAsync(HitoBit.Net.Enums.FuturesAccountType,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Broker Futures Commission Rebate Record
            </summary>
            <param name="futuresType">Futures type</param>
            <param name="startDate">Start date</param>
            <param name="endDate">End date</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 10, max 100)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Rebate records</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.ChangeBnbBurnForSubAccountSpotAndMarginAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Or Disable BNB Burn for Sub Account SPOT and MARGIN
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="spotBnbBurn">"true" or "false", spot and margin whether use BNB to pay for transaction fees or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.ChangeBnbBurnForSubAccountMarginInterestAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Or Disable BNB Burn for Sub Account Margin Interest
            <para>Sub account must be enabled margin before using this switch</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="interestBnbBurn">"true" or "false", margin loan whether uses BNB to pay for margin interest or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetBnbBurnStatusForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get BNB Burn Status for Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Status</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetSubAccountSpotAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Spot Asset info
            <para>If subAccountId is not sent, the size must be sent</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 10, max 20)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetSubAccountMarginAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Margin Asset info
            <para>If subAccountId is not sent, the size must be sent</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 10, max 20)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiBrokerage.GetSubAccountFuturesAssetInfoAsync(HitoBit.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Futures Asset info
            <para>If subAccountId is not sent, the size must be sent</para>
            </summary>
            <param name="futuresType">Futures type</param>
            <param name="subAccountId">Sub account id</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 10, max 20)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset info</returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiCopyTrading">
            <summary>
            HitoBit copy trading endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiCopyTrading.GetUserStatusAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Futures Lead Trader Status
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#copy-trading-endpoints" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiCopyTrading.GetLeadSymbolAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Futures Lead Trading Symbol Whitelist
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-futures-lead-trading-symbol-whitelist-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiFutures">
            <summary>
            HitoBit futures interaction endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiFutures.TransferFuturesAccountAsync(System.String,System.Decimal,HitoBit.Net.Enums.FuturesTransferType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Execute a transfer between the spot account and a futures account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#new-future-account-transfer-user_data" /></para>
            </summary>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="transferType">The transfer direction</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The transaction id</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiFutures.GetFuturesTransferHistoryAsync(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of transfers between spot and futures account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-future-account-transaction-history-list-user_data" /></para>
            </summary>
            <param name="asset">The asset to get history for</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">The page to return</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>History</returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans">
            <summary>
            HitoBit Spot Crypto loans endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.GetIncomeHistoryAsync(System.String,System.Nullable{HitoBit.Net.Enums.LoanIncomeType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get income history from crypto loans
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-crypto-loans-income-history-user_data" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="type">Filter by type of incoming</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.BorrowAsync(System.String,System.String,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Take a crypto loan
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#borrow-crypto-loan-borrow-trade" /></para>
            </summary>
            <param name="loanAsset">Asset to loan</param>
            <param name="collateralAsset">Collateral asset</param>
            <param name="loanTerm">Loan term in days, 7/14/30/90/180</param>
            <param name="loanQuantity">Quantity to loan in loan asset</param>
            <param name="collateralQuantity">Quantity to loan in collateral asset</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.GetBorrowHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get borrow order history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#borrow-get-loan-borrow-history-user_data" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.GetOpenBorrowOrdersAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get ongoing loan orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#borrow-get-loan-ongoing-orders-user_data" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="page">Page number</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.RepayAsync(System.Int64,System.Decimal,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Repay a loan
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#repay-crypto-loan-repay-trade" /></para>
            </summary>
            <param name="orderId">Order id to repay</param>
            <param name="quantity">Quantity to repay</param>
            <param name="repayWithBorrowedAsset">True to repay with the borrowed asset, false to repay with collateral asset</param>
            <param name="collateralReturn">Return extra colalteral to spot account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.GetRepayHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get loan repayment history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#repay-get-loan-repayment-history-user_data" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.AdjustLTVAsync(System.Int64,System.Decimal,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Adjust LTV for a loan
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#adjust-ltv-crypto-loan-adjust-ltv-trade" /></para>
            </summary>
            <param name="orderId">Order id</param>
            <param name="quantity">Adjustment quantity</param>
            <param name="addOrRmove">True for add, false to reduce</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.GetLtvAdjustHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get LTV adjustment history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#adjust-ltv-get-loan-ltv-adjustment-history-user_data" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.GetLoanableAssetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-loanable-assets-data-user_data-2" /></para>
            </summary>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="vipLevel">Vip level</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.GetCollateralAssetsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get LTV information and collateral limit of collateral assets. The collateral limit is shown in USD value.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-collateral-assets-data-user_data" /></para>
            </summary>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="vipLevel">Vip level</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.GetCollateralRepayRateAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the the rate of collateral coin / loan coin when using collateral repay, the rate will be valid within 8 second.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#check-collateral-repay-rate-user_data" /></para>
            </summary>
            <param name="loanAsset">Loan asset</param>
            <param name="collateralAsset">Collateral asset</param>
            <param name="quantity">Quantity</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiLoans.CustomizeMarginCallAsync(System.Decimal,System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Customize margin call for ongoing orders only.
            </summary>
            <param name="marginCall">Margin call value</param>
            <param name="orderId">Order id. Required if collateralAsset is not send</param>
            <param name="collateralAsset">Collateral asset. Required if order id is not send</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining">
            <summary>
            HitoBit Spot Mining endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMiningCoinListAsync(System.Threading.CancellationToken)">
            <summary>
            Gets mining coins info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#acquiring-coinname-market_data" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Coins info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMiningAlgorithmListAsync(System.Threading.CancellationToken)">
            <summary>
            Gets mining algorithms info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#acquiring-algorithm-market_data" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Algorithms info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMinerDetailsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets miner details
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#request-for-detail-miner-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account</param>
            <param name="workerName">Miners name</param>
            <param name="ct">Cancellation token</param>
            <returns>Miner details</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMinerListAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{HitoBit.Net.Enums.MinerStatus},System.Threading.CancellationToken)">
            <summary>
            Gets miner list
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#request-for-miner-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account</param>
            <param name="page">Result page</param>
            <param name="sortAscending">Sort in ascending order</param>
            <param name="sortColumn">Column to sort by</param>
            <param name="workerStatus">Filter by status</param>
            <param name="ct">Cancellation token</param>
            <returns>Miner list</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMiningRevenueListAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets revenue list
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#earnings-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account</param>
            <param name="page">Result page</param>
            <param name="pageSize">Results per page</param>
            <param name="coin">Coin</param>
            <param name="startDate">Start date</param>
            <param name="endDate">End date</param>
            <param name="ct">Cancellation token</param>
            <returns>Revenue list</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMiningOtherRevenueListAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get other revenue list
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#extra-bonus-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account</param>
            <param name="page">Result page</param>
            <param name="pageSize">Results per page</param>
            <param name="coin">Coin</param>
            <param name="startDate">Start date</param>
            <param name="endDate">End date</param>
            <param name="ct">Cancellation token</param>
            <returns>Revenue list</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMiningStatisticsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get mining statistics
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#statistic-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">User name</param>
            <param name="ct">Cancellation token</param>
            <returns>Mining statistics</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMiningAccountListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets mining account list
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#account-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account user name</param>
            <param name="ct">Cancellation token</param>
            <returns>Revenue list</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetHashrateResaleListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets hash rate resale list
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#hashrate-resale-list-user_data" /></para>
            </summary>
            <param name="page">Page</param>
            <param name="pageSize">Results per page</param>
            <param name="ct">Cancellation token</param>
            <returns>Resale list</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetHashrateResaleDetailsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets hash rate resale details
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#hashrate-resale-detail-user_data" /></para>
            </summary>
            <param name="configId">The mining id</param>
            <param name="userName">Mining account</param>
            <param name="page">Page</param>
            <param name="pageSize">Results per page</param>
            <param name="ct">Cancellation token</param>
            <returns>Resale details</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.PlaceHashrateResaleRequestAsync(System.String,System.String,System.DateTime,System.DateTime,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Hashrate resale request
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#hashrate-resale-request-user_data" /></para>
            </summary>
            <param name="userName">Mining account</param>
            <param name="algorithm">Transfer algorithm</param>
            <param name="startDate">Resale start time</param>
            <param name="endDate">Resale end time</param>
            <param name="toUser">To mining account</param>
            <param name="hashRate">Resale hashrate h/s must be transferred (BTC is greater than 500000000000 ETH is greater than 500000)</param>
            <param name="ct">Cancellation token</param>
            <returns>Mining account</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.CancelHashrateResaleRequestAsync(System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel Hashrate Resale Configuration
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#cancel-hashrate-resale-configuration-user_data" /></para>
            </summary>
            <param name="configId">Mining id</param>
            <param name="userName">Mining account</param>
            <param name="ct">Cancellation token</param>
            <returns>Success</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiMining.GetMiningAccountEarningsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get mining account earnings
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#mining-account-earning-user_data" /></para>
            </summary>
            <param name="algo">Algorithm</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn">
            <summary>
            HitoBit simple earn endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetFlexibleProductsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a list of simple earn flexible products
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-simple-earn-flexible-product-list-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetLockedProductsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a list of simple earn locked products
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-simple-earn-locked-product-list-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.SubscribeFlexibleProductAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.AccountSource},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Subscribe to flexible product
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#subscribe-flexible-product-trade" /></para>
            </summary>
            <param name="productId">Product id</param>
            <param name="quantity">Quantity</param>
            <param name="autoSubscribe">Auto subscribe, default true</param>
            <param name="sourceAccount">Source account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.SubscribeLockedProductAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.AccountSource},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Subscribe to locked product
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#subscribe-locked-product-trade" /></para>
            </summary>
            <param name="projectId">Project id</param>
            <param name="quantity">Quantity</param>
            <param name="autoSubscribe">Auto subscribe, default true</param>
            <param name="sourceAccount">Source account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.RedeemFlexibleProductAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.AccountSource},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Redeem flexible product
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#redeem-flexible-product-trade" /></para>
            </summary>
            <param name="productId">Product id</param>
            <param name="redeemAll">Whether to redeem all. If not then quantity should be specified</param>
            <param name="quantity">Quantity</param>
            <param name="destinationAccount">Destination account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.RedeemLockedProductAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Redeem locked product
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#redeem-locked-product-trade" /></para>
            </summary>
            <param name="positionId">Position id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetFlexibleProductPositionsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get flexible product position info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-flexible-product-position-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="productId">Filter by product id</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetLockedProductPositionsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get locked product position info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-locked-product-position-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="positionId">Filter by position id</param>
            <param name="projectId">Filter by project id</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetAccountAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Simple Earn account info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#simple-account-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetFlexibleSubscriptionRecordsAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Simple Earn flexible product subscription records 
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-flexible-subscription-record-user_data" /></para>
            </summary>
            <param name="productId">Filter by product id</param>
            <param name="purchaseId">Filter by purchase id</param>
            <param name="asset">Filler by asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetLockedSubscriptionRecordsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Simple Earn locked product subscription records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-locked-subscription-record-user_data" /></para>
            </summary>
            <param name="purchaseId">Filter by purchase id</param>
            <param name="asset">Filler by asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetFlexibleRedemptionRecordsAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Simple Earn flexible product redemption records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-flexible-redemption-record-user_data" /></para>
            </summary>
            <param name="productId">Filter by product id</param>
            <param name="redeemId">Filler by redeem id</param>
            <param name="asset">Filler by asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetLockedRedemptionRecordsAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Simple Earn locked product redemption records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-locked-redemption-record-user_data" /></para>
            </summary>
            <param name="positionId">Filter by position id</param>
            <param name="redeemId">Filler by redeem id</param>
            <param name="asset">Filler by asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetFlexibleRewardRecordsAsync(HitoBit.Net.Enums.RewardType,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Simple Earn flexible product reward records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-flexible-rewards-history-user_data" /></para>
            </summary>
            <param name="type">Type or rewards</param>
            <param name="productId">Filter by product id</param>
            <param name="asset">Filler by asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetLockedRewardRecordsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Simple Earn locked product reward records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-locked-rewards-history-user_data" /></para>
            </summary>
            <param name="positionId">Position id</param>
            <param name="asset">Filler by asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.SetFlexibleAutoSubscribeAsync(System.String,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set flexible product auto subscribe toggle
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#set-flexible-auto-subscribe-user_data" /></para>
            </summary>
            <param name="productId">Product id</param>
            <param name="autoSubscribe">Auto subscribe enabled or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.SetLockedAutoSubscribeAsync(System.String,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set locked product auto subscribe toggle
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#set-locked-auto-subscribe-user_data" /></para>
            </summary>
            <param name="positionId">Position id</param>
            <param name="autoSubscribe">Auto subscribe enabled or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetFlexiblePersonalQuotaLeftAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get flexible product personal quota left
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-flexible-personal-left-quota-user_data" /></para>
            </summary>
            <param name="productId">Product id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetLockedPersonalQuotaLeftAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get locked product personal quota left
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-locked-personal-left-quota-user_data" /></para>
            </summary>
            <param name="projectId">Project id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetFlexibleSubscriptionPreviewAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get flexible subscription preview
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-flexible-subscription-preview-user_data" /></para>
            </summary>
            <param name="productId">Product id</param>
            <param name="quantity">Quantity</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetLockedSubscriptionPreviewAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get locked subscription preview
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-locked-subscription-preview-user_data" /></para>
            </summary>
            <param name="projectId">Project id</param>
            <param name="quantity">Quantity</param>
            <param name="autoSubscribe">Auto subscribe</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetRateHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get rate history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-rate-history-user_data" /></para>
            </summary>
            <param name="productId">Product id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSimpleEarn.GetCollateralRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get collateral records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-rate-history-user_data" /></para>
            </summary>
            <param name="productId">Product id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Current page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking">
            <summary>
            HitoBit Staking endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.SubscribeEthStakingAsync(System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ETH staking
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#subscribe-eth-staking-trade" /></para>
            </summary>
            <param name="quantity">Amount</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.RedeemEthStakingAsync(System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Redeem from ETH staking
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#redeem-eth-trade" /></para>
            </summary>
            <param name="quantity">Amount</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.GetEthStakingHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get ETH staking history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-eth-staking-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.GetEthRedemptionHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get ETH redemption history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-eth-redemption-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.GetEthRewardsHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get ETH rewards history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-eth-rewards-distribution-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.GetEthStakingQuotaAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get ETH staking quotas
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-current-eth-staking-quota-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.GetBethRateHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Beth rate history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-beth-rate-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.GetEthStakingAccountAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get eth staking account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#eth-staking-account-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.WrapBethAsync(System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Wrap Beth
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#wrap-beth-trade" /></para>
            </summary>
            <param name="quantity">Quantity to wrap</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.GetBethWrapHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get wrap history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-wbeth-wrap-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiStaking.GetBethUnwrapHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get unwrap history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-wbeth-unwrap-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount">
            <summary>
            HitoBit Spot Subaccount endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets a list of sub accounts associated with this master account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-sub-account-list-for-master-account" /></para>
            </summary>
            <param name="email">Filter the list by email</param>
            <param name="page">The page of the results</param>
            <param name="limit">The max amount of results to return</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="isFreeze">Is freezed</param>
            <param name="ct">Cancellation token</param>
            <returns>List of sub accounts</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountTransferHistoryForMasterAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the transfer history of a sub account (from the master account) 
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-sub-account-spot-asset-transfer-history-for-master-account" /></para>
            </summary>
            <param name="fromEmail">Filter the history by from email</param>
            <param name="toEmail">Filter the history by to email</param>
            <param name="startTime">Filter the history by startTime</param>
            <param name="endTime">Filter the history by endTime</param>
            <param name="page">The page of the results</param>
            <param name="limit">The max amount of results to return</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of transfers</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.TransferSubAccountAsync(HitoBit.Net.Enums.TransferAccountType,HitoBit.Net.Enums.TransferAccountType,System.String,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers an asset form/to a sub account. If fromEmail or toEmail is not send it is interpreted as from/to the master account. Transfer between futures accounts is not supported
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#sub-account-futures-asset-transfer-for-master-account" /></para>
            </summary>
            <param name="fromEmail">From which account to transfer</param>
            <param name="fromAccountType">Account type to transfer from</param>
            <param name="toEmail">To which account to transfer</param>
            <param name="toAccountType">Account type to transfer to</param>
            <param name="asset">The asset to transfer</param>
            <param name="symbol">The sybol to transfer, only for isolated margin</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountAssetsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets list of balances for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-sub-account-assets-for-master-account" /></para>
            </summary>
            <param name="email">For which account to get the assets</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of balances</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountDepositAddressAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit address for an asset to a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-sub-account-deposit-address-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to deposit to</param>
            <param name="asset">The asset of the deposit</param>
            <param name="network">The coin network</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The deposit address</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountDepositHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit history for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-sub-account-deposit-history-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to get history for</param>
            <param name="asset">Filter for an asset</param>
            <param name="startTime">Only return deposits placed later this</param>
            <param name="endTime">Only return deposits placed before this</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset results by this</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The deposit history</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountStatusAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Sub-account's Status on Margin/Futures(For Master Account)
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-sub-account-39-s-status-on-margin-futures-for-master-account" /></para>
            </summary>
            <param name="email">Filter the list by email</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of sub accounts status</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.EnableMarginForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enables margin for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#enable-margin-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to enable margin for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin enable status</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountMarginDetailsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets margin details for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-detail-on-sub-account-39-s-margin-account-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to get margin details for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin details</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountsMarginSummaryAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets margin summary for sub accounts
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-summary-of-sub-account-39-s-margin-account-for-master-account" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin summary</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.EnableFuturesForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enables futures for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#enable-futures-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">The sub account email to enable futures for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Futures status</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountFuturesDetailsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures details for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-detail-on-sub-account-39-s-futures-account-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to get future details for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Futures details</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountFuturesDetailsAsync(HitoBit.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures details for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-detail-on-sub-account-39-s-futures-account-v2-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to get future details for</param>
            <param name="futuresType">The account type to get future details for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Futures details</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountsFuturesSummaryAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures summary for sub accounts
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-summary-of-sub-account-39-s-futures-account-for-master-account" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Futures summary</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountsFuturesPositionRiskAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures position risk for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-futures-position-risk-of-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Position risk</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountsFuturesPositionRiskAsync(HitoBit.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures position risk for a sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-futures-position-risk-of-sub-account-v2-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="futuresType">The account type to get future details for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Position risk</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.TransferSubAccountFuturesAsync(System.String,System.String,System.Decimal,HitoBit.Net.Enums.FuturesTransferType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers from or to a futures sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#futures-transfer-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="type">The type of the transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.TransferSubAccountMarginAsync(System.String,System.String,System.Decimal,HitoBit.Net.Enums.SubAccountMarginTransferType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers from or to a margin sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#margin-transfer-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="type">The type of the transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.TransferSubAccountToSubAccountAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers to another sub account of the same master
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#transfer-to-sub-account-of-same-master-for-sub-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.TransferSubAccountToMasterAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers to master account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#transfer-to-master-for-sub-account" /></para>
            </summary>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountTransferHistoryForSubAccountAsync(System.String,System.Nullable{HitoBit.Net.Enums.SubAccountTransferSubAccountType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the transfer history of a sub account (from the sub account)
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#sub-account-transfer-history-for-sub-account" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="type">Filter by type of transfer</param>
            <param name="startTime">Only return transfers later than this</param>
            <param name="endTime">Only return transfers before this</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer history</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetSubAccountBtcValuesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get BTC valued asset summary of subaccounts.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-sub-account-spot-assets-summary-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="page">The page</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Btc asset values</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.CreateVirtualSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Create a virtual sub account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#create-a-virtual-sub-account-for-master-account" /></para>
            </summary>
            <param name="subAccountString">String based with which a subaccount email will be generated. Should not contain special characters</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.EnableBlvtForSubAccountAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable or disable blvt
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#enable-leverage-token-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="enable">Enable or disable (only true for now)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetUniversalTransferHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of universal transfers
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-universal-transfer-history-for-master-account" /></para>
            </summary>
            <param name="fromEmail">Filter the list by from email (fromEmail and toEmail cannot be present at same time)</param>
            <param name="toEmail">Filter the list by to email (fromEmail and toEmail cannot be present at same time)</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">The page of the results</param>
            <param name="limit">The max amount of results to return (Default 500, max 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of universal transfers</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.UpdateIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Update the ip restriction for a sub-account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#update-ip-restriction-for-sub-account-api-key-for-master-account" /></para>
            </summary>
            <param name="email">The sub account email</param>
            <param name="apiKey">The sub account api key</param>
            <param name="ipRestrict">Enable or disable ip restrictions</param>
            <param name="ipAddresses">Addresses to whitelist</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.RemoveIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Remove the ip restriction for a sub-account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#delete-ip-list-for-a-sub-account-api-key-for-master-account" /></para>
            </summary>
            <param name="email">The sub account email</param>
            <param name="apiKey">The sub account api key</param>
            <param name="ipAddresses">Addresses to remove from whitelist</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the ip restriction for a sub-account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-ip-restriction-for-a-sub-account-api-key-for-master-account" /></para>
            </summary>
            <param name="email">The sub account email</param>
            <param name="apiKey">The sub account api key</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.GetFuturesAssetTransferHistoryAsync(System.String,HitoBit.Net.Enums.FuturesAccountType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get internal asset transfers for a sub account (for master account)
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-sub-account-futures-asset-transfer-history-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="accountType">Futures account type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">The page of the results</param>
            <param name="limit">The max amount of results to return (Default 50, max 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.GeneralApi.IHitoBitRestClientGeneralApiSubAccount.FuturesAssetTransferAsync(System.String,System.String,HitoBit.Net.Enums.FuturesAccountType,System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfer futures asset (for master account)
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#sub-account-futures-asset-transfer-for-master-account" /></para>
            </summary>
            <param name="fromEmail">From email</param>
            <param name="toEmail">To email</param>
            <param name="accountType">Futures account</param>
            <param name="asset">Asset</param>
            <param name="quantity">Quantity</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.IHitoBitRestClient">
            <summary>
            Client for accessing the HitoBit Rest API. 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.IHitoBitRestClient.GeneralApi">
            <summary>
            General API endpoints
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.IHitoBitRestClient.CoinFuturesApi">
            <summary>
            Coin futures API endpoints
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.IHitoBitRestClient.SpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.IHitoBitRestClient.UsdFuturesApi">
            <summary>
            Usd futures API endpoints
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.IHitoBitRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient">
            <summary>
            Client for accessing the HitoBit websocket API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient.CoinFuturesApi">
            <summary>
            Coin futures streams
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient.SpotApi">
            <summary>
            Spot streams and requests
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient.UsdFuturesApi">
            <summary>
            Usd futures streams
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApi">
            <summary>
            HitoBit Spot API endpoints
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApi.CommonSpotClient">
            <summary>
            DEPRECATED; use <see cref="T:CryptoExchange.Net.SharedApis.ISharedClient" /> instead for common/shared functionality. See <see href="https://majidbigdeli.github.io/CryptoExchange.Net/docs/index.html#shared" /> for more info.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount">
            <summary>
            HitoBit Spot account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetAccountInfoAsync(System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account information, including balances
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#account-information-user_data" /></para>
            </summary>
            <param name="omitZeroBalances">When true only return non-zero balances in the account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetDailySpotAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a daily account snapshot (balances)
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#daily-account-snapshot-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="limit">The amount of days to retrieve</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetDailyMarginAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a daily account snapshot (assets)
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#daily-account-snapshot-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="limit">The amount of days to retrieve</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetDailyFutureAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a daily account snapshot (assets and positions)
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#daily-account-snapshot-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="limit">The amount of days to retrieve</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetAccountStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the status of the account associated with the api key/secret
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#account-status-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Account status</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetFundingWalletAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding wallet assets
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#funding-wallet-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="needBtcValuation">Return BTC valuation</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of assets</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetAPIKeyPermissionsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get permission info for the current API key
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-api-key-permission-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Permission info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetUserAssetsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets information of assets for a user
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#all-coins-39-information-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Assets info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetBalancesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve balance info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#user-asset-user_data" /></para>
            </summary>
            <param name="asset">Return for this asset, for example `ETH`</param>
            <param name="needBtcValuation">Whether the response should include the BtcValuation. If false (default) BtcValuation will be 0.</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetWalletBalancesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Receive balances of the different user wallets
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-user-wallet-balance-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetAssetDividendRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get asset dividend records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#asset-dividend-record-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time from</param>
            <param name="endTime">Filter by end time till</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Dividend records</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.DisableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            This request will disable fastwithdraw switch under your account.
            You need to enable "trade" option for the api key which requests this endpoint.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#disable-fast-withdraw-switch-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.EnableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             This request will enable fastwithdraw switch under your account.
             You need to enable "trade" option for the api key which requests this endpoint.
            
             When Fast Withdraw Switch is on, transferring funds to a HitoBit account will be done instantly.
             There is no on-chain transaction, no transaction ID and no withdrawal fee.
             <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#enable-fast-withdraw-switch-user_data" /></para>
             </summary>
             <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
             <param name="ct">Cancellation token</param>
             <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetDustLogAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HitoBit.Net.Enums.AccountType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the history of dust conversions
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#dustlog-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="accountType">Spot or Margin account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The history of dust conversions</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetAssetsForDustTransferAsync(System.Nullable{HitoBit.Net.Enums.AccountType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get assets that can be converted to BNB
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-assets-that-can-be-converted-into-bnb-user_data" /></para>
            </summary>
            <param name="accountType">Spot or Margin account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.DustTransferAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{HitoBit.Net.Enums.AccountType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Converts dust (small amounts of) assets to BNB 
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#dust-transfer-user_data" /></para>
            </summary>
            <param name="assets">The assets to convert to BNB, for example `ETH`</param>
            <param name="accountType">Spot or Margin account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Dust transfer result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetBnbBurnStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the status of the BNB burn switch for spot trading and margin interest
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-bnb-burn-status-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.SetBnbBurnStatusAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sets the status of the BNB burn switch for spot trading and margin interest
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#toggle-bnb-burn-on-spot-trade-and-margin-interest-user_data" /></para>
            </summary>
            <param name="spotTrading">If BNB burning should be enabled for spot trading</param>
            <param name="marginInterest">If BNB burning should be enabled for margin interest</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.TransferAsync(HitoBit.Net.Enums.UniversalTransferType,System.String,System.Decimal,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers between accounts
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#user-universal-transfer-user_data" /></para>
            </summary>
            <param name="type">The type of transfer</param>
            <param name="asset">The asset to transfer, for example `ETH`</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="fromSymbol">From symbol when transfering from/to isolated margin</param>
            <param name="toSymbol">To symbol when transfering from/to isolated margin</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetTransfersAsync(HitoBit.Net.Enums.UniversalTransferType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get transfer history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-user-universal-transfer-history-user_data" /></para>
            </summary>
            <param name="type">The type of transfer</param>
            <param name="startTime">Filter by startTime</param>
            <param name="endTime">Filter by endTime</param>
            <param name="page">The page</param>
            <param name="pageSize">Results per page</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetFiatPaymentHistoryAsync(HitoBit.Net.Enums.OrderSide,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Fiat payment history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-fiat-payments-history-user_data" /></para>
            </summary>
            <param name="side">Filter by side</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Return a specific page</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetFiatDepositWithdrawHistoryAsync(HitoBit.Net.Enums.TransactionType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Fiat deposit/withdrawal history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#fiat-endpoints" /></para>
            </summary>
            <param name="side">Filter by side</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Return a specific page</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a user stream by requesting a listen key. This listen key can be used in subsequent requests to SubscribeToUserDataUpdates. The stream will close after 60 minutes unless a keep alive is send.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-spot" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream listen key to keep the stream from closing. Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-spot" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stops the current user stream
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-spot" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.WalletType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Withdraw assets from HitoBit to an address
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#withdraw-user_data" /></para>
            </summary>
            <param name="asset">The asset to withdraw, for example `ETH`</param>
            <param name="address">The address to send the funds to</param>
            <param name="addressTag">Secondary address identifier for assets like XRP,XMR etc.</param>
            <param name="withdrawOrderId">Custom client order id</param>
            <param name="transactionFeeFlag">When making internal transfer, true for returning the fee to the destination account; false for returning the fee back to the departure account. Default false.</param>
            <param name="quantity">The quantity to withdraw</param>
            <param name="network">The network to use</param>
            <param name="walletType">The wallet type for withdraw</param>
            <param name="name">Description of the address</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Withdrawal confirmation</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{HitoBit.Net.Enums.WithdrawalStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the withdrawal history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#withdraw-history-supporting-network-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="withdrawOrderId">Filter by withdraw order id</param>
            <param name="status">Filter by status</param>
            <param name="startTime">Filter start time from</param>
            <param name="endTime">Filter end time till</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <param name="limit">Add limit. Default: 1000, Max: 1000</param>
            <param name="offset">Add offset</param>
            <returns>List of withdrawals</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetWithdrawalAddressesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get list of withdrawal addresses
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#fetch-withdraw-address-list-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetDepositHistoryAsync(System.String,System.Nullable{HitoBit.Net.Enums.DepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the deposit history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#deposit-history-supporting-network-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="status">Filter by status</param>
            <param name="limit">Amount of results</param>
            <param name="offset">Offset the results</param>
            <param name="startTime">Filter start time from</param>
            <param name="endTime">Filter end time till</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="includeSource">Include source address to response</param>
            <param name="ct">Cancellation token</param>
            <returns>List of deposits</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit address for an asset
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#deposit-address-supporting-network-user_data" /></para>
            </summary>
            <param name="asset">Asset to get address for, for example `ETH`</param>
            <param name="network">Network</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Deposit address</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginLevelInformationAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get personal margin level information for your account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-summary-of-margin-account-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin Level Information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.MarginBorrowAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Borrow. Apply for a loan. 
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#margin-account-borrow-repay-margin" /></para>
            </summary>
            <param name="asset">The asset being borrow, for example `ETH`</param>
            <param name="quantity">The quantity to be borrow</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="symbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transaction Id</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.MarginRepayAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Repay loan for margin account.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#margin-account-borrow-repay-margin" /></para>
            </summary>
            <param name="asset">The asset being repay, for example `ETH`</param>
            <param name="quantity">The quantity to be borrow</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="symbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transaction Id</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginTransferHistoryAsync(HitoBit.Net.Enums.TransferDirection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of transfers
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-cross-margin-transfer-history-user_data" /></para>
            </summary>
            <param name="direction">The direction of the the transfers to retrieve</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of transfers</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginLoansAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query loan records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-borrow-repay-records-in-margin-account-user_data" /></para>
            </summary>
            <param name="asset">The records asset, for example `ETH`</param>
            <param name="transactionId">The id of loan transaction</param>
            <param name="startTime">Time to start getting records from</param>
            <param name="endTime">Time to stop getting records to</param>
            <param name="current">Number of page records</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">The records count size need show</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Loan records</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginRepaysAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query repay records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-borrow-repay-records-in-margin-account-user_data" /></para>
            </summary>
            <param name="asset">The records asset, for example `ETH`</param>
            <param name="transactionId">The id of repay transaction</param>
            <param name="startTime">Time to start getting records from</param>
            <param name="endTime">Time to stop getting records to</param>
            <param name="current">Filter by number</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="size">The records count size need show</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Repay records</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of interest
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-interest-history-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of interest events</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginInterestRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of interest rate
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-interest-rate-history-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="vipLevel">Vip level</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of interest rate</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetInterestMarginDataAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross margin interest data
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-cross-margin-fee-data-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="vipLevel">Vip level</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginForcedLiquidationHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of forced liquidations
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-force-liquidation-record-user_data" /></para>
            </summary>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of forced liquidations</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query margin account details
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-cross-margin-account-details-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The margin account information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginMaxBorrowAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query max borrow quantity
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-max-borrow-user_data" /></para>
            </summary>
            <param name="asset">The records asset, for example `ETH`</param>
            <param name="isolatedSymbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Max quantity</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginMaxTransferAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query max transfer-out quantity 
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-max-transfer-out-amount-user_data" /></para>
            </summary>
            <param name="asset">The records asset, for example `ETH`</param>
            <param name="isolatedSymbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Max quantity</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetIsolatedMarginTierDataAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin tier data
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-isolated-margin-tier-data-user_data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH`</param>
            <param name="tier">Tier</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetIsolatedMarginAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Isolated margin account info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-isolated-margin-account-info-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetEnabledIsolatedMarginAccountLimitAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get max number of enabled isolated margin accounts
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-enabled-isolated-margin-account-limit-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.EnableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable an isolated margin account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#enable-isolated-margin-account-trade" /></para>
            </summary>
            <param name="symbol">Symbol to enable isoldated margin account for, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.DisableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Disabled an isolated margin account info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#disable-isolated-margin-account-trade" /></para>
            </summary>
            <param name="symbol">Symbol to enable isoldated margin account for, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetMarginOrderRateLimitStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin order rate limits
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-current-margin-order-count-usage-trade" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.StartMarginUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a user stream by requesting a listen key. This listen key can be used in subsequent requests to HitoBitSocketClient.SpotApi.Account..SubscribeToUserDataUpdates. The stream will close after 60 minutes unless a keep alive is send.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-margin" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.KeepAliveMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream listen key to keep the stream from closing. Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-margin" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.StopMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stops the current user stream
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-margin" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.StartIsolatedMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Starts a user stream  for margin account by requesting a listen key. 
            This listen key can be used in subsequent requests to  HitoBitSocketClient.SpotApi.Account.SubscribeToUserDataUpdates  
            The stream will close after 60 minutes unless a keep alive is send.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-isolated-margin" /></para>
            </summary>
            <param name="symbol">The isolated symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.KeepAliveIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream for margin account listen key to keep the stream from closing. 
            Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-isolated-margin" /></para>
            </summary>
            <param name="symbol">The isolated symbol, for example `ETHUSDT`</param>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.CloseIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Close the user stream for margin account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#listen-key-isolated-margin" /></para>
            </summary>
            <param name="symbol">The isolated symbol, for example `ETHUSDT`</param>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the trading status for the current account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#account-api-trading-status-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The trading status of the account</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetOrderRateLimitStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the current used order rate limits
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-current-order-count-usage-trade" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetRebateHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get rebate history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-spot-rebate-history-records-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Results per page</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetLeveragedTokensUserLimitAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get leveraged tokens user limits
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-blvt-user-limit-info-user_data" /></para>
            </summary>
            <param name="tokenName">Filter by token name</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetPortfolioMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Portfolio margin account info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-classic-portfolio-margin-account-info-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetPortfolioMarginCollateralRateAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get portfolio margin account collateral rates
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#classic-portfolio-margin-collateral-rate-market_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetPortfolioMarginBankruptcyLoanAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get portfolio margin bankrupty loan amount
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-classic-portfolio-margin-bankruptcy-loan-amount-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.PortfolioMarginBankruptcyLoanRepayAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Repay portfolio margin bankruptcy loan
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#classic-portfolio-margin-bankruptcy-loan-repay" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetAutoConvertStableCoinConfigAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get auto conversion settings
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-auto-converting-stable-coins-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.SetAutoConvertStableCoinConfigAsync(System.String,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set auto conversion configuration
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-auto-converting-stable-coins-user_data" /></para>
            </summary>
            <param name="asset">Asset to configure (USDC, USDP or TUSD)</param>
            <param name="enable">Enable or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.ConvertBusdAsync(System.String,System.String,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Convert transfer, convert between BUSD and stablecoins.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#busd-convert-trade" /></para>
            </summary>
            <param name="clientTransferId">The unique user-defined transaction id, min length 20</param>
            <param name="asset">The current asset, for example `ETH`</param>
            <param name="quantity">Quantity</param>
            <param name="targetAsset">	Target asset you want to convert</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetBusdConvertHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Busd convert history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#busd-convert-history-user_data" /></para>
            </summary>
            <param name="transferId">Filter by transferId</param>
            <param name="clientTransferId">Filter by clientTransferId</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetCloudMiningHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the query of Cloud-Mining payment and refund history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-cloud-mining-payment-and-refund-history-user_data" /></para>
            </summary>
            <param name="transferId">Filter by transferId</param>
            <param name="clientTransferId">Filter by clientTransferId</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.CrossMarginAdjustMaxLeverageAsync(System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Adjust cross margin max leverage
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#adjust-cross-margin-max-leverage-user_data" /></para>
            </summary>
            <param name="maxLeverage">Max leverage, can only adjust 3 or 5</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetIsolatedMarginFeeDataAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin fee data collection with any vip level or user's current specific data as https://www.hitobit.com/en/margin-fee
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-isolated-margin-fee-data-user_data" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="vipLevel">User's current specific margin data will be returned if vipLevel is omitted</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetCrossMarginSmallLiabilityExchangeAssetsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query the coins which can be small liability exchange
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-small-liability-exchange-coin-list-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.CrossMarginSmallLiabilityExchangeAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Cross Margin Small Liability Exchange
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#small-liability-exchange-margin" /></para>
            </summary>
            <param name="assets">Assets, for example `ETH`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetCrossMarginSmallLiabilityExchangeHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Small liability Exchange History
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-small-liability-exchange-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by startTime</param>
            <param name="endTime">Filter by endTime</param>
            <param name="page">The page</param>
            <param name="limit">Results per page</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetTradeFeeAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the trade fee for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#trade-fee-user_data" /></para>
            </summary>
            <param name="symbol">Symbol to get withdrawal fee for, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Trade fees</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetAccountVipLevelAndStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get account VIP level and margin/futures enabled status
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#account-info-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiAccount.GetCommissionRatesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get current account commission rates.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-commission-rates-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData">
            <summary>
            HitoBit Spot exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetAssetDetailsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the withdraw/deposit details for an asset
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#asset-detail-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset detail</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetProductsAsync(System.Threading.CancellationToken)">
            <summary>
            Get general data for the products available on HitoBit
            NOTE: This is not an official endpoint and might be changed or removed at any point by HitoBit
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <summary>
            Pings the HitoBit API
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#test-connectivity" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>True if successful ping, false if no response</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Requests the server for the local time
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#check-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Server time</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.SymbolStatus},System.Threading.CancellationToken)">
            <summary>
            Gets information about the exchange including rate limits and symbol list
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="returnPermissionSets">Whether or not permission sets should be returned</param>
            <param name="symbolStatus">Filter by symbol status, Trading, Halt or Break</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="symbol">Symbol to get data for, for example `ETHUSDT`</param>
            <param name="returnPermissionSets">Whether or not permission sets should be returned</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.SymbolStatus},System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="symbols">Symbols to get data for, for example `ETHUSDT`</param>
            <param name="returnPermissionSets">Whether or not permission sets should be returned</param>
            <param name="symbolStatus">Filter by symbol status, Trading, Halt or Break</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(HitoBit.Net.Enums.AccountType,System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.SymbolStatus},System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbol based on an account permission
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="permission">account type</param>
            <param name="returnPermissionSets">Whether or not permission sets should be returned</param>
            <param name="symbolStatus">Filter by symbol status, Trading, Halt or Break</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetExchangeInfoAsync(HitoBit.Net.Enums.AccountType[],System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.SymbolStatus},System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbols based on account permissions
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="permissions">account type</param>
            <param name="returnPermissionSets">Whether or not permission sets should be returned</param>
            <param name="symbolStatus">Filter by symbol status, Trading, Halt or Break</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the status of the HitoBit platform
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#system-status-system" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>The system status</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the recent trades for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#recent-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get recent trades for, for example `ETHUSDT`</param>
            <param name="limit">Result limit</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the historical trades for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#old-trade-lookup-market_data" /></para>
            </summary>
            <param name="symbol">The symbol to get recent trades for, for example `ETHUSDT`</param>
            <param name="limit">Result limit</param>
            <param name="fromId">From which trade id on results should be retrieved</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets compressed, aggregate trades. Trades that fill at the same time, from the same order, with the same price will have the quantity aggregated.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#compressed-aggregate-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get the trades for, for example `ETHUSDT`</param>
            <param name="fromId">ID to get aggregate trades from INCLUSIVE.</param>
            <param name="startTime">Time to start getting trades from</param>
            <param name="endTime">Time to stop getting trades from</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The aggregated trades list for the symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#kline-candlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetUiKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol. Returns modified kline data, optimized for the presentation of candlestick charts
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#uiklines" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#order-book" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for, for example `ETHUSDT`</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetCurrentAvgPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets current average price for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#current-average-price" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="symbols">The symbols to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of data over the last 24 hours</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetTradingDayTickerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get price change stats for a trading day
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#trading-day-ticker" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="timeZone">The timezone offset, for example -3 for UTC-3 or 5 for UTC+5</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetTradingDayTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Get price change stats for a trading day
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#trading-day-ticker" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="timeZone">The timezone offset, for example -3 for UTC-3 or 5 for UTC+5</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetRollingWindowTickerAsync(System.String,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Get data based on the last x time, specified as windowSize
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#rolling-window-price-change-statistics" /></para>
            </summary>
            <param name="symbol">The symbol to get data for, for example `ETHUSDT`</param>
            <param name="windowSize">The window size to use</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetRollingWindowTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Get data based on the last x time, specified as windowSize
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#rolling-window-price-change-statistics" /></para>
            </summary>
            <param name="symbols">The symbols to get data for, for example `ETHUSDT`</param>
            <param name="windowSize">The window size to use</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#rolling-window-price-change-statistics" /></para>
            </summary>
            <param name="symbol">Symbol to get book price for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetBookPricesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="symbols">Symbols to get book price for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for all symbols.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the price of a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to get the price for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Price of symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetPricesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
             Gets the prices of symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="symbols">The symbols to get the price for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of the prices of all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetMarginAssetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all assets available for margin trading
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-all-margin-assets-market_data" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin assets</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetMarginSymbolsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all asset pairs available for margin trading
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-all-cross-margin-pairs-market_data" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin pairs</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetMarginPriceIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get margin price index
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-priceindex-market_data" /></para>
            </summary>
            <param name="symbol">The symbol to get, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin price index</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetIsolatedMarginSymbolsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Isolated margin symbol info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-all-isolated-margin-symbol-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetLeveragedTokenInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get blvt info
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-blvt-info-market_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetLeveragedTokensHistoricalKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get's historical klines
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#historical-blvt-nav-kline-candlestick" /></para>
            </summary>
            <param name="symbol">The token</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by startTime</param>
            <param name="endTime">Filter by endTime</param>
            <param name="limit">Number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetCrossMarginCollateralRatioAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin collateral ratio
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#cross-margin-collateral-ratio-market_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetFutureHourlyInterestRateAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get futures hourly interest rate
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-a-future-hourly-interest-rate-user_data" /></para>
            </summary>
            <param name="assets">Assets, for example `ETH`</param>
            <param name="isolated">Isolated or cross</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetMarginDelistScheduleAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross and isolated delist schedule
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-tokens-or-symbols-delist-schedule-for-cross-margin-and-isolated-margin-market_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetConvertListAllPairsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get list all convert pairs
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#list-all-convert-pairs" /></para>
            </summary>
            <param name="quoteAsset">Quote asset, for example `ETH`</param>
            <param name="baseAsset">Base asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetConvertQuantityPrecisionPerAssetAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get quantity precision per asset
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-order-quantity-precision-per-asset-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiExchangeData.GetDelistScheduleAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get spot symbols delist schedule
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-symbols-delist-schedule-for-spot-market_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiShared">
            <summary>
            Shared interface for Spot rest API usage
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading">
            <summary>
            HitoBit Spot trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceTestOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new test order. Test orders are not actually being executed and just test the functionality.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#test-new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type (limit/market)</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="quoteQuantity">The quantity of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQty">User for iceberg orders</param>
            <param name="orderResponseType">Used for the response JSON</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="strategyId">Strategy id</param>
            <param name="strategyType">Strategy type</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="computeFeeRates">Whether fee rates should be calculated or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Fee info if computeCommissionRates was set to true, else empty</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="quoteQuantity">The quantity of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQty">Used for iceberg orders</param>
            <param name="orderResponseType">Used for the response JSON</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="strategyId">Strategy id</param>
            <param name="strategyType">Strategy type</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{HitoBit.Net.Enums.CancelRestriction},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#cancel-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="newClientOrderId">Unique identifier for this cancel</param>
            <param name="cancelRestriction">Restrict cancellation based on order state</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels all open orders on a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#cancel-all-open-orders-on-a-symbol-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.ReplaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.CancelReplaceMode,System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.CancelRestriction},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Cancel an existing order and place a new order on the same symbol
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="cancelReplaceMode">Replacement behavior</param>
            <param name="cancelOrderId">The order id to cancel. Either this or cancelClientOrderId should be provided</param>
            <param name="cancelClientOrderId">The client order id to cancel. Either this or cancelOrderId should be provided</param>
            <param name="newCancelClientOrderId">New client order id for the canceled order</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="quoteQuantity">The quantity of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQty">Used for iceberg orders</param>
            <param name="orderResponseType">Used for the response JSON</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="strategyId">Strategy id</param>
            <param name="strategyType">Strategy type</param>
            <param name="cancelRestriction">Restrict cancellation based on order state</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of open orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#current-open-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get open orders for, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of open orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all orders for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#all-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for, for example `ETHUSDT`</param>
            <param name="orderId">If set, only orders with an order id higher than the provided will be returned</param>
            <param name="startTime">If set, only orders placed after this time will be returned</param>
            <param name="endTime">If set, only orders placed before this time will be returned</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceOcoOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            DEPRECATED, USE PlaceOcoOrderListAsync INSTEAD
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#new-oco-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="stopLimitTimeInForce">Lifetime of the stop order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="price">The price to use</param>
            <param name="stopPrice">The stop price</param>
            <param name="stopLimitPrice">The price for the stop limit order</param>
            <param name="stopClientOrderId">Client id for the stop order</param>
            <param name="limitClientOrderId">Client id for the limit order</param>
            <param name="listClientOrderId">Client id for the order list</param>
            <param name="limitIcebergQuantity">Iceberg quantity for the limit order</param>
            <param name="stopIcebergQuantity">Iceberg quantity for the stop order</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="limitStrategyId">Strategy id of the limit order</param>
            <param name="limitStrategyType">Strategy type of the limit order</param>
            <param name="stopStrategyId">Strategy id of the stop order</param>
            <param name="stopStrategyType">Strategy type of the stop order</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Order list info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceOcoOrderListAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.SpotOrderType,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place a new OCO order. An OCO has 2 legs called the above leg and below leg. One of the legs must be a LimitMaker order and the other leg must be StopLoss or StopLossLimit order.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#new-order-list-oco-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="aboveOrderType">The above leg order type</param>
            <param name="belowOrderType">The below leg order type</param>
            <param name="aboveClientOrderId">Client order id for the above leg</param>
            <param name="aboveIcebergQuantity">Ice berg quantity for the above leg</param>
            <param name="abovePrice">Limit price for the above leg</param>
            <param name="aboveStopPrice">Stop price for the above leg</param>
            <param name="aboveTrailingDelta">Trailing delta for the above leg</param>
            <param name="aboveTimeInForce">Time in force for the above leg</param>
            <param name="aboveStrategyId">Strategy id for the above leg</param>
            <param name="aboveStrategyType">Strategy type for the above leg</param>
            <param name="belowClientOrderId">Client order id for the below leg</param>
            <param name="belowIcebergQuantity">Ice berg quantity for the below leg</param>
            <param name="belowPrice">Limit price for the below leg</param>
            <param name="belowStopPrice">Stop price for the below leg</param>
            <param name="belowTrailingDelta">Trailing delta for the below leg</param>
            <param name="belowTimeInForce">Time in force for the below leg</param>
            <param name="belowStrategyId">Strategy id for the below leg</param>
            <param name="belowStrategyType">Strategy type for the below leg</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.CancelOcoOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending oco order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#cancel-oco-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderListId">The id of the order list to cancel</param>
            <param name="listClientOrderId">The client order id of the order list to cancel</param>
            <param name="newClientOrderId">The new client order list id for the order list</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetOcoOrderAsync(System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific oco order. Either orderListId or listClientOrderId should be provided.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-oco-user_data" /></para>
            </summary>
            <param name="orderListId">The list order id of the order</param>
            <param name="listClientOrderId">The client order id of the list order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order list</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetOcoOrdersAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of oco orders matching the parameters
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-all-oco-user_data" /></para>
            </summary>
            <param name="fromId">Only return oco orders with id higher than this</param>
            <param name="startTime">Only return oco orders placed later than this. Only valid if fromId isn't provided</param>
            <param name="endTime">Only return oco orders placed before this. Only valid if fromId isn't provided</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Order lists matching the parameters</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetOpenOcoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of open oco orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-open-oco-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Open order lists</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceOtoOrderListAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Decimal,System.Decimal,System.Decimal,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.String,System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place a new OTOCO (One Triggers Other) order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#new-order-list-oco-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="workingOrderType">Working order type, either Limit or LimitMaker</param>
            <param name="workingSide">Working order side</param>
            <param name="workingQuantity">Working order quantity</param>
            <param name="workingPrice">Working order price</param>
            <param name="pendingQuantity">Pending order quantity</param>
            <param name="pendingSide">Pending order side</param>
            <param name="pendingOrderType">Pending order type</param>
            <param name="listClientOrderId">Arbitrary unique ID among open order lists. Automatically generated if not sent.</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="workingClientOrderId">Working order client order id</param>
            <param name="workingIcebergQuantity">Working order iceberg quantity</param>
            <param name="workingTimeInForce">Working order time in force</param>
            <param name="workingStrategyId">Working order strategy id</param>
            <param name="workingStrategyType">Working order strategy type</param>
            <param name="pendingClientOrderId">Pending order client order id</param>
            <param name="pendingPrice">Pending order price</param>
            <param name="pendingStopPrice">Pending order stop price</param>
            <param name="pendingTrailingDelta">Pending order trailing delta</param>
            <param name="pendingIcebergQuantity">Pending order iceberg quantity</param>
            <param name="pendingTimeInForce">Pending order time in force</param>
            <param name="pendingStrategyId">Pending order strategy id</param>
            <param name="pendingStrategyType">Pending order strategy type</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceOtocoOrderListAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Decimal,System.Decimal,System.Decimal,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.SpotOrderType,System.String,System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place a new OTOCO (One Triggers One Cancels The Other) order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#new-order-list-otoco-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="workingOrderType">Working order type, either Limit or LimitMaker</param>
            <param name="workingSide">Working order side</param>
            <param name="workingQuantity">Working order quantity</param>
            <param name="workingPrice">Working order price</param>
            <param name="pendingQuantity">Pending order quantity</param>
            <param name="pendingSide">Pending order side</param>
            <param name="pendingAboveOrderType">Pending above order type, LimitMaker, StopLoss or StopLossLimit</param>
            <param name="pendingBelowOrderType">Pending below order type, LimitMaker, StopLoss or StopLossLimit</param>
            <param name="listClientOrderId">Arbitrary unique ID among open order lists. Automatically generated if not sent.</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="workingClientOrderId">Working order client order id</param>
            <param name="workingIcebergQuantity">Working order iceberg quantity</param>
            <param name="workingTimeInForce">Working order time in force</param>
            <param name="workingStrategyId">Working order strategy id</param>
            <param name="workingStrategyType">Working order strategy type</param>
            <param name="pendingAboveClientOrderId">Pending above order client order id</param>
            <param name="pendingAbovePrice">Pending above order price</param>
            <param name="pendingAboveStopPrice">Pending above order stop price</param>
            <param name="pendingAboveTrailingDelta">Pending above order trailing delta</param>
            <param name="pendingAboveIcebergQuantity">Pending above order iceberg quantity</param>
            <param name="pendingAboveTimeInForce">Pending above order time in force</param>
            <param name="pendingAboveStrategyId">Pending above order strategy id</param>
            <param name="pendingAboveStrategyType">Pending above order strategy type</param>
            <param name="pendingBelowClientOrderId">Pending below order client order id</param>
            <param name="pendingBelowPrice">Pending below order price</param>
            <param name="pendingBelowStopPrice">Pending below order stop price</param>
            <param name="pendingBelowTrailingDelta">Pending below order trailing delta</param>
            <param name="pendingBelowIcebergQuantity">Pending below order iceberg quantity</param>
            <param name="pendingBelowTimeInForce">Pending below order time in force</param>
            <param name="pendingBelowStrategyId">Pending below order strategy id</param>
            <param name="pendingBelowStrategyType">Pending below order strategy type</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets user trades for provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#account-trade-list-user_data" /></para>
            </summary>
            <param name="symbol">Symbol to get trades for, for example `ETHUSDT`</param>
            <param name="orderId">Get trades for this order id</param>
            <param name="limit">The max number of results</param>
            <param name="fromId">TradeId to fetch from. Default gets most recent trades</param>
            <param name="startTime">Orders newer than this date will be retrieved</param>
            <param name="endTime">Orders older than this date will be retrieved</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of trades</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceMarginOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.SideEffectType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Margin account new order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#margin-account-new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="quoteQuantity">The quantity of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQuantity">Used for iceberg orders</param>
            <param name="sideEffectType">Side effect type for this order</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderResponseType">Used for the response JSON</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="autoRepayAtCancel">Only when MARGIN_BUY or AUTO_BORROW_REPAY order takes effect, true means that the debt generated by the order needs to be repay after the order is cancelled. The default is true</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.CancelMarginOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel an active order for margin account
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#margin-account-cancel-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderId">The order id of the order</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="newClientOrderId">Unique identifier for this cancel</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.CancelAllMarginOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel all active orders for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#margin-account-cancel-all-open-orders-on-a-symbol-trade" /></para>
            </summary>
            <param name="symbol">The symbol the to cancel orders for, for example `ETHUSDT`</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetMarginOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific margin account order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific margin account order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetOpenMarginOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of open margin account orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-open-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get open orders for, for example `ETHUSDT`</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of open margin account orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetMarginOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all margin account orders for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-all-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for, for example `ETHUSDT`</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderId">If set, only orders with an order id higher than the provided will be returned</param>
            <param name="startTime">If set, only orders placed after this time will be returned</param>
            <param name="endTime">If set, only orders placed before this time will be returned</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin account orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetMarginUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets all user margin account trades for provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-trade-list-user_data" /></para>
            </summary>
            <param name="symbol">Symbol to get trades for, for example `ETHUSDT`</param>
            <param name="limit">The max number of results</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="startTime">Orders newer than this date will be retrieved</param>
            <param name="endTime">Orders older than this date will be retrieved</param>
            <param name="fromId">TradeId to fetch from. Default gets most recent trades</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin account trades</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceMarginOCOOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.SideEffectType},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new margin OCO(One cancels other) order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#margin-account-new-oco-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="stopLimitTimeInForce">Lifetime of the stop order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="price">The price to use</param>
            <param name="stopPrice">The stop price</param>
            <param name="stopLimitPrice">The price for the stop limit order</param>
            <param name="stopClientOrderId">Client id for the stop order</param>
            <param name="limitClientOrderId">Client id for the limit order</param>
            <param name="listClientOrderId">Client id for the order list</param>
            <param name="limitIcebergQuantity">Iceberg quantity for the limit order</param>
            <param name="sideEffectType">Side effect type</param>
            <param name="isIsolated">Is isolated</param>
            <param name="orderResponseType">Order response type</param>
            <param name="stopIcebergQuantity">Iceberg quantity for the stop order</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="autoRepayAtCancel">Only when MARGIN_BUY or AUTO_BORROW_REPAY order takes effect, true means that the debt generated by the order needs to be repay after the order is cancelled. The default is true</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Order list info</returns>        
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.CancelMarginOcoOrderAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending margin oco order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#margin-account-cancel-oco-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderListId">The id of the order list to cancel</param>
            <param name="listClientOrderId">The client order id of the order list to cancel</param>
            <param name="newClientOrderId">The new client order list id for the order list</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetMarginOcoOrderAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific margin oco order. Either orderListId or listClientOrderId should be provided.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-oco-user_data" /></para>
            </summary>
            <param name="symbol">Mandatory for isolated margin, not supported for cross margin, for example `ETHUSDT`</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderListId">The list order id of the order</param>
            <param name="origClientOrderId">Either orderListId or listClientOrderId must be provided</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order list</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetMarginOcoOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of margin oco orders matching the parameters
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-all-oco-user_data" /></para>
            </summary>
            <param name="symbol">Mandatory for isolated margin, not supported for cross margin, for example `ETHUSDT`</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="fromId">Only return oco orders with id higher than this</param>
            <param name="startTime">Only return oco orders placed later than this. Only valid if fromId isn't provided</param>
            <param name="endTime">Only return oco orders placed before this. Only valid if fromId isn't provided</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Order lists matching the parameters</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetMarginOpenOcoOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of open margin oco orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-open-oco-user_data" /></para>
            </summary>
            <param name="symbol">Mandatory for isolated margin, not supported for cross margin, for example `ETHUSDT`</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Open order lists</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.SubscribeLeveragedTokenAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Subscribe to a token
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#subscribe-blvt-user_data" /></para>
            </summary>
            <param name="tokenName">Name of the token to subscribe to</param>
            <param name="cost">Cost of the subscription</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetLeveragedTokensSubscriptionRecordsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get subscription records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-subscription-record-user_data" /></para>
            </summary>
            <param name="tokenName">Filter by token</param>
            <param name="id">Filter by id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.RedeemLeveragedTokenAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Redeem a token
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#redeem-blvt-user_data" /></para>
            </summary>
            <param name="tokenName">Name of the token to redeem</param>
            <param name="quantity">Quantity to redeem</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetLeveragedTokensRedemptionRecordsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get redemption records
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-redemption-record-user_data" /></para>
            </summary>
            <param name="tokenName">Filter by token</param>
            <param name="id">Filter by id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetC2CTradeHistoryAsync(HitoBit.Net.Enums.OrderSide,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get Customer to Customer trade history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-c2c-trade-history-user_data" /></para>
            </summary>
            <param name="side">Trade side</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">The page</param>
            <param name="pageSize">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetPayTradeHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get pay trade history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-pay-trade-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.ConvertQuoteRequestAsync(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.WalletType},System.Nullable{HitoBit.Net.Enums.ValidTime},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Request a quote for convert asset (selling asset) for base asset (buying asset)
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#send-quote-request-user_data" /></para>
            </summary>
            <param name="quoteAsset">Quote asset, for example `ETH`</param>
            <param name="baseAsset">Base asset, for example `ETH`</param>
            <param name="quoteQuantity">Quote quantity</param>
            <param name="baseQuantity">Quote quantity</param>
            <param name="walletType">The wallet type for convert</param>
            <param name="validTime">The valid time for quote</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.ConvertAcceptQuoteAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Accept the previously requested quote
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#accept-quote-trade" /></para>
            </summary>
            <param name="quoteId">The quote id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetConvertOrderStatusAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get convert order status
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#order-status-user_data" /></para>
            </summary>
            <param name="orderId">The order id of the order</param>
            <param name="quoteId">The quote id of the order</param>
            <param name="receiveWindow"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetConvertTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get convert trade history
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#get-convert-trade-history-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetPreventedTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get prevented matches because of self trade prevention
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-prevented-matches-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="preventedMatchId">Filter by prevented match id</param>
            <param name="orderId">Filter by order id</param>
            <param name="fromPreventedMatchId">Filter by min prevented match id</param>
            <param name="limit">Max results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.PlaceTimeWeightedAveragePriceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Int32,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Place a new spot time weighted average price order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#time-weighted-average-price-twap-new-order-trade-2" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="quantity">Order quantity</param>
            <param name="duration">Duration in seconds. 300 - 86400</param>
            <param name="clientOrderId">Client order id</param>
            <param name="limitPrice">Limit price of the order. If null will use market price</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.CancelAlgoOrderAsync(System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel a spot algo order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#cancel-algo-order-trade-2" /></para>
            </summary>
            <param name="algoOrderId">Algo order id to cancel</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetOpenAlgoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get all open spot algo orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-current-algo-open-orders-user_data-2" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetClosedAlgoOrdersAsync(System.String,System.Nullable{HitoBit.Net.Enums.OrderSide},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get list of closed algo orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-historical-algo-orders-user_data-2" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="side">Filter by side</param>
            <param name="startTime">Fitler by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="limit">Max results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitRestClientSpotApiTrading.GetAlgoSubOrdersAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get algo sub orders overview
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-historical-algo-orders-user_data-2" /></para>
            </summary>
            <param name="algoId">Algo id</param>
            <param name="page">Page</param>
            <param name="limit">Max results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApi">
            <summary>
            Spot API socket subscriptions and requests
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApi.Account">
            <summary>
            Account streams and queries
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApi.ExchangeData">
            <summary>
            Exchange data streams and queries
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApi.Trading">
            <summary>
            Trading data and queries
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount">
            <summary>
            HitoBit Spot Account socket requests and subscriptions
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.GetAccountInfoAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets account information, including balances
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#account-information-user_data" /></para>
            </summary>
            <param name="omitZeroBalances">When true only return non-zero balances in the account</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.GetOrderRateLimitsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get order rate limit status
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#account-order-rate-limits-user_data" /></para>
            </summary>
            <param name="symbols">Filter by symbols, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream listen key to keep the stream from closing. Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#ping-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">Listen key</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a user stream by requesting a listen key. This listen key can be used in a subsequent request to <see cref="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamPositionsUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Threading.CancellationToken)">SubscribeToUserDataUpdatesAsync</see>. The stream will close after 60 minutes unless <see cref="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">KeepAliveUserStreamAsync</see> is called.
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#start-user-data-stream-user_stream" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stops the current user stream
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#stop-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">Listen key</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamPositionsUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the account update stream. Prior to using this, the <see cref="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">StartUserStreamAsync</see> method should be called to start the stream and obtaining a listen key.
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#user-data-streams" /></para>
            </summary>
            <param name="listenKey">Listen key retrieved by the <see cref="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">StartUserStreamAsync</see> method</param>
            <param name="onOrderUpdateMessage">The event handler for whenever an order status update is received</param>
            <param name="onOcoOrderUpdateMessage">The event handler for whenever an oco order status update is received</param>
            <param name="onAccountPositionMessage">The event handler for whenever an account position update is received. Account position updates are a list of changed funds</param>
            <param name="onAccountBalanceUpdate">The event handler for whenever a deposit or withdrawal has been processed and the account balance has changed</param>
            <param name="onListenKeyExpired">The event handler for when the listen key has expired. No events will be send anymore after this</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData">
            <summary>
            HitoBit Spot Exchange Data socket requests and subscriptions
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <summary>
            Ping to test connection
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#test-connectivity" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server time
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#check-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetExchangeInfoAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets information about the exchange including rate limits and symbol list
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#exchange-information" /></para>
            </summary>
            <param name="symbols">Filter by symbols, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets compressed, aggregate trades. Trades that fill at the same time, from the same order, with the same price will have the quantity aggregated.
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#aggregate-trades" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="fromId">Filter by from trade id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetBookTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="symbols">Filter by symbols, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetCurrentAvgPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets current average price for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#current-average-price" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#klines" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#order-book" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="limit">Number of entries</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the recent trades for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#recent-trades" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetRollingWindowTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get data based on the last x time, specified as windowSize
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#rolling-window-price-change-statistics" /></para>
            </summary>
            <param name="symbols">Filter by symbols, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="symbols">Filter by symbols, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the historical trades for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#historical-trades" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="fromId">Filter by from trade id</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.GetUIKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol. Returns modified kline data, optimized for the presentation of candlestick charts
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#ui-klines" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBitMiniTick}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#all-market-mini-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToAllRollingWindowTickerUpdatesAsync(System.TimeSpan,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to rolling window ticker updates stream for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#all-market-rolling-window-statistics-streams" /></para>
            </summary>
            <param name="windowSize">Window size, either 1 hour or 4 hours</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBitTick}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#all-market-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToBlvtInfoUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to leveraged token info updates
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#blvt-info-streams" /></para>
            </summary>
            <param name="tokens">The tokens to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToBlvtInfoUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to leveraged token info updates
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#blvt-info-streams" /></para>
            </summary>
            <param name="token">The token to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToBlvtKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to leveraged token kline updates
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#blvt-nav-kline-candlestick-streams" /></para>
            </summary>
            <param name="tokens">The tokens to subscribe to</param>
            <param name="interval">The kline interval</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToBlvtKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to leveraged token kline updates
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#blvt-nav-kline-candlestick-streams" /></para>
            </summary>
            <param name="token">The token to subscribe to</param>
            <param name="interval">The kline interval</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the book ticker update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the book ticker update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols and intervals
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol and intervals
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for a list of symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe to, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#diff-depth-stream" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="updateInterval">Update interval in milliseconds</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the order book updates for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#diff-depth-stream" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="updateInterval">Update interval in milliseconds</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth updates for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe on, for example `ETHUSDT`</param>
            <param name="levels">The amount of entries to be returned in the update of each symbol, 5, 10 or 20</param>
            <param name="updateInterval">Update interval in milliseconds, 1000ms or 100ms</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth updates for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe on, for example `ETHUSDT`</param>
            <param name="levels">The amount of entries to be returned in the update, 5, 10 or 20</param>
            <param name="updateInterval">Update interval in milliseconds, 1000ms or 100ms</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToRollingWindowTickerUpdatesAsync(System.String,System.TimeSpan,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to rolling window ticker updates stream for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#individual-symbol-rolling-window-statistics-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="windowSize">Window size, either 1 hour or 4 hours</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe to, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the trades update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#trade-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiExchangeData.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the trades update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#trade-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiShared">
            <summary>
            Shared interface for Spot socket API usage
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading">
            <summary>
            HitoBit Spot Trading socket requests
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel all open orders for the symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#cancel-open-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.CancelOcoOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an Oco order by either orderId or clientOrderId
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#cancel-oco-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="newClientOrderId">New client order id for the order</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order by either orderId or clientOrderId
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#cancel-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="newClientOrderId">New client order id for the order</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.GetOcoOrderAsync(System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            Get an oco order by either orderId or clientOrderId
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#account-oco-history-user_data" /></para>
            </summary>
            <param name="orderId">Order id, for example `ETHUSDT`</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.GetOcoOrdersAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Oco order history
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#query-oco-user_data" /></para>
            </summary>
            <param name="fromOrderId">Filter from order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.GetOpenOcoOrdersAsync(System.Threading.CancellationToken)">
            <summary>
            Get open Oco orders
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#current-open-ocos-user_data" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get open orders
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#current-open-orders-user_data" /></para>
            </summary>
            <param name="symbol">Filter by symbols, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            Get order by either orderId or clientOrderId
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#query-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#account-order-history-user_data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="fromOrderId">Filter from order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.GetPreventedTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get prevented trades because of self trade prevention
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#account-prevented-matches-user_data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="preventedTradeId">Filter by prevented trade id</param>
            <param name="orderId">Filter by order id</param>
            <param name="fromPreventedTradeId">Filter from prevented id</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets user trades for provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#account-trade-history-user_data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="fromOrderId">Filter from order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.PlaceOcoOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <summary>
            DEPRECATED, USE PlaceOcoOrderListAsync INSTEAD
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#place-new-oco-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="stopLimitTimeInForce">Lifetime of the stop order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="price">The price to use</param>
            <param name="stopPrice">The stop price</param>
            <param name="stopLimitPrice">The price for the stop limit order</param>
            <param name="stopClientOrderId">Client id for the stop order</param>
            <param name="limitClientOrderId">Client id for the limit order</param>
            <param name="listClientOrderId">Client id for the order list</param>
            <param name="limitIcebergQuantity">Iceberg quantity for the limit order</param>
            <param name="stopIcebergQuantity">Iceberg quantity for the stop order</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="limitStrategyId">Strategy id of the limit order</param>
            <param name="limitStrategyType">Strategy type of the limit order</param>
            <param name="stopStrategyId">Strategy id of the stop order</param>
            <param name="stopStrategyType">Strategy type of the stop order</param>
            <param name="limitIcebergQty">Iceberg quantity of the limit order</param>
            <param name="stopIcebergQty">Iceberg quantity of the stop order</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="ct">Cancellation token</param>
            <returns>Order list info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.PlaceOcoOrderListAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.SpotOrderType,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <summary>
            Place a new OCO order. An OCO has 2 legs called the above leg and below leg. One of the legs must be a LimitMaker order and the other leg must be StopLoss or StopLossLimit order.
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#place-new-order-list-oco-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="aboveOrderType">The above leg order type</param>
            <param name="belowOrderType">The below leg order type</param>
            <param name="aboveClientOrderId">Client order id for the above leg</param>
            <param name="aboveIcebergQuantity">Ice berg quantity for the above leg</param>
            <param name="abovePrice">Limit price for the above leg</param>
            <param name="aboveStopPrice">Stop price for the above leg</param>
            <param name="aboveTrailingDelta">Trailing delta for the above leg</param>
            <param name="aboveTimeInForce">Time in force for the above leg</param>
            <param name="aboveStrategyId">Strategy id for the above leg</param>
            <param name="aboveStrategyType">Strategy type for the above leg</param>
            <param name="belowClientOrderId">Client order id for the below leg</param>
            <param name="belowIcebergQuantity">Ice berg quantity for the below leg</param>
            <param name="belowPrice">Limit price for the below leg</param>
            <param name="belowStopPrice">Stop price for the below leg</param>
            <param name="belowTrailingDelta">Trailing delta for the below leg</param>
            <param name="belowTimeInForce">Time in force for the below leg</param>
            <param name="belowStrategyId">Strategy id for the below leg</param>
            <param name="belowStrategyType">Strategy type for the below leg</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <summary>
            Places a new order
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#place-new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="quoteQuantity">The quantity of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQty">Used for iceberg orders</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="strategyId">Strategy id</param>
            <param name="strategyType">Strategy type</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.PlaceTestOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <summary>
            Places a new test order. Test orders are not actually being executed and just test the functionality.
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#test-new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type (limit/market)</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="quoteQuantity">The quantity of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQty">User for iceberg orders</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="strategyId">Strategy id</param>
            <param name="strategyType">Strategy type</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed test order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.SpotApi.IHitoBitSocketClientSpotApiTrading.ReplaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.SpotOrderType,HitoBit.Net.Enums.CancelReplaceMode,System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Cancel an existing order and place a new order on the same symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/websocket_api/en/#cancel-and-replace-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="cancelReplaceMode">Replacement behavior</param>
            <param name="cancelOrderId">The order id to cancel. Either this or cancelClientOrderId should be provided</param>
            <param name="cancelClientOrderId">The client order id to cancel. Either this or cancelOrderId should be provided</param>
            <param name="newCancelClientOrderId">New client order id for the canceled order</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="quoteQuantity">The quantity of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQty">Used for iceberg orders</param>
            <param name="orderResponseType">Used for the response JSON</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="strategyId">Strategy id</param>
            <param name="strategyType">Strategy type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApi">
            <summary>
            HitoBit USD futures API endpoints
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApi.CommonFuturesClient">
            <summary>
            DEPRECATED; use <see cref="T:CryptoExchange.Net.SharedApis.ISharedClient" /> instead for common/shared functionality. See <see href="https://majidbigdeli.github.io/CryptoExchange.Net/docs/index.html#shared" /> for more info.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount">
            <summary>
            HitoBit USD-M futures account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetPositionInformationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            DEPRECATED; USE Trading.GetPositionsAsync INSTEAD
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#position-information-v2-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of Positions</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.ModifyPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change user's position mode (Hedge Mode or One-way Mode ) on EVERY symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#change-position-mode-trade" /></para>
            </summary>
            <param name="dualPositionSide">User position mode</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user's position mode (Hedge Mode or One-way Mode ) on EVERY symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-current-position-mode-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.ChangeInitialLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Requests to change the initial leverage of the given symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#change-initial-leverage-trade" /></para>
            </summary>
            <param name="symbol">Symbol to change the initial leverage for, for example `ETHUSDT`</param>
            <param name="leverage">The amount of initial leverage to change to</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Result of the initial leverage change request</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.ChangeMarginTypeAsync(System.String,HitoBit.Net.Enums.FuturesMarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change the margin type for an open position
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#change-margin-type-trade" /></para>
            </summary>
            <param name="symbol">Symbol to change the position type for, for example `ETHUSDT`</param>
            <param name="marginType">The type of margin to use</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.ModifyPositionMarginAsync(System.String,System.Decimal,HitoBit.Net.Enums.FuturesMarginChangeDirectionType,System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change the margin on an open position
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#modify-isolated-position-margin-trade" /></para>
            </summary>
            <param name="symbol">Symbol to adjust the position margin for, for example `ETHUSDT`</param>
            <param name="amount">The amount of margin to be used</param>
            <param name="type">Whether to reduce or add margin to the position</param>
            <param name="positionSide">Default BOTH for One-way Mode ; LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The new position margin</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetMarginChangeHistoryAsync(System.String,System.Nullable{HitoBit.Net.Enums.FuturesMarginChangeDirectionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Requests the margin change history for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-position-margin-change-history-trade" /></para>
            </summary>
            <param name="symbol">Symbol to get margin history for, for example `ETHUSDT`</param>
            <param name="type">Filter the history by the direction of margin change</param>
            <param name="startTime">Margin changes newer than this date will be retrieved</param>
            <param name="endTime">Margin changes older than this date will be retrieved</param>
            <param name="limit">The max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of all margin changes for the symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the income history for the futures account
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-income-history-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get income history from, for example `ETHUSDT`</param>
            <param name="incomeType">The income type filter to apply to the request</param>
            <param name="startTime">Time to start getting income history from</param>
            <param name="endTime">Time to stop getting income history from</param>
            <param name="limit">Max number of results</param>
            <param name="page">Page number</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The income history for the futures account</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets Notional and Leverage Brackets.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#notional-and-leverage-brackets-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Notional and Leverage Brackets</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get position ADL quantile estimations
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#position-adl-quantile-estimation-user_data" /></para>
            </summary>
            <param name="symbol">Only get for this symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetAccountInfoV2Async(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get account information, including position and balances
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/account/rest-api/Account-Information-V2" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetAccountInfoV3Async(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get account information, including position and balances
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/account/rest-api/Account-Information-V3" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account balances
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#futures-account-balance-v2-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetMultiAssetsModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user's Multi-Assets mode (Multi-Assets Mode or Single-Asset Mode) on Every symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-current-multi-assets-mode-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Multi asset mode</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.SetMultiAssetsModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set user's Multi-Assets mode (Multi-Assets Mode or Single-Asset Mode) on Every symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#change-multi-assets-mode-trade" /></para>
            </summary>
            <param name="enabled">Enabled or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Succes</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the current status of the trading rules for the account
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#futures-trading-quantitative-rules-indicators-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of trading rules status per symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account commission rates
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#user-commission-rate-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>User commission rate information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Start a user stream. The resulting listen key can be used to subscribe to the user stream using the socket client. The stream will close after 60 minutes unless <see cref="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">KeepAliveUserStreamAsync</see> is called.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#start-user-data-stream-user_stream" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Keep alive the user stream. This should be called every 30 minutes to prevent the user stream being stopped
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#keepalive-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stop the user stream, no updates will be send anymore
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#close-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to stop</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForTransactionHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get download id for downloading transaction history
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-download-id-for-futures-transaction-history-user_data" /></para>
            </summary>
            <param name="startTime">Start time of the data to download</param>
            <param name="endTime">End time of the data to download</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadLinkForTransactionHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the download link for transaction history by download id
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-futures-transaction-history-download-link-by-id-user_data" /></para>
            </summary>
            <param name="downloadId">The download id as requested by <see cref="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForTransactionHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)" /></param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get download id for downloading order history
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-download-id-for-futures-order-history-user_data" /></para>
            </summary>
            <param name="startTime">Start time of the data to download</param>
            <param name="endTime">End time of the data to download</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadLinkForOrderHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the download link for order history by download id
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-futures-order-history-download-link-by-id-user_data" /></para>
            </summary>
            <param name="downloadId">The download id as requested by <see cref="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)" /></param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get download id for downloading trade history
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-download-id-for-futures-trade-history-user_data" /></para>
            </summary>
            <param name="startTime">Start time of the data to download</param>
            <param name="endTime">End time of the data to download</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadLinkForTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the download link for order history by download id
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-futures-trade-download-link-by-id-user_data" /></para>
            </summary>
            <param name="downloadId">The download id as requested by <see cref="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetDownloadIdForTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)" /></param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetOrderRateLimitAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the order rate limits
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#query-user-rate-limit-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetBnbBurnStatusAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get BNB burn for fee discount status
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-bnb-burn-status-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.SetBnbBurnStatusAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set BNB burn for fee discount status
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#toggle-bnb-burn-on-futures-trade-trade" /></para>
            </summary>
            <param name="feeBurn">Fee burn status</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetSymbolConfigurationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user symbol configuration
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/account/rest-api/Symbol-Config" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.GetAccountConfigurationAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user account configuration
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/account/rest-api/Account-Config" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData">
            <summary>
            HitoBit USD-M futures exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <summary>
            Pings the HitoBit Futures API
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#test-connectivity" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>True if successful ping, false if no response</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetServerTimeAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Requests the server for the local time. This function also determines the offset between server and local time and uses this for subsequent API calls
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#check-server-time" /></para>
            </summary>
            <param name="resetAutoTimestamp">Whether the response should be used for a new auto timestamp calculation</param>
            <param name="ct">Cancellation token</param>
            <returns>Server time</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and symbol list
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#exchange-information" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get klines for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#kline-candlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">The kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetPremiumIndexKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get premium index klines for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#premium-index-kline-data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">The kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetFundingInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get funding rate info for symbols that had FundingRateCap/ FundingRateFloor / fundingIntervalHours adjustment
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-funding-rate-info" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-funding-rate-history" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="startTime">Start time to get funding rate history</param>
            <param name="endTime">End time to get funding rate history</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The funding rate history for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetTopLongShortAccountRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Top Trader Long/Short Ratio (Accounts)
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#top-trader-long-short-ratio-accounts" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get top trader long/short ratio (accounts)</param>
            <param name="endTime">End time to get top trader long/short ratio (accounts)</param>
            <param name="ct">Cancellation token</param>
            <returns>Top Trader Long/Short Ratio (Accounts) info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetTopLongShortPositionRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Top Trader Long/Short Ratio (Positions)
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#top-trader-long-short-ratio-positions" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get top trader long/short ratio (positions)</param>
            <param name="endTime">End time to get top trader long/short ratio (positions)</param>
            <param name="ct">Cancellation token</param>
            <returns>Top Trader Long/Short Ratio (Positions) info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetGlobalLongShortAccountRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Global Long/Short Ratio (Accounts)
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#long-short-ratio" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get global long/short ratio (accounts)</param>
            <param name="endTime">End time to get global long/short ratio (accounts)</param>
            <param name="ct">Cancellation token</param>
            <returns>Global Long/Short Ratio (Accounts) info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Kline/candlestick bars for the mark price of a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#mark-price-kline-candlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol get the data for, for example `ETHUSDT`</param>
            <param name="interval">The interval of the klines</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#order-book" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for, for example `ETHUSDT`</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the most recent trades for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#recent-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get trades for, for example `ETHUSDT`</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get trade history for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#old-trades-lookup-market_data" /></para>
            </summary>
            <param name="symbol">The symbol to get trades for, for example `ETHUSDT`</param>
            <param name="limit">The max amount of results</param>
            <param name="fromId">Retrun trades after this trade id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Mark Price and Funding Rate for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#mark-price" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetMarkPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Get Mark Price and Funding Rate for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#mark-price" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours change
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours change
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="symbol">Symbol to get book price for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get present open interest of a specific symbol.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#open-interest" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Open Interest info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetOpenInterestHistoryAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Open Interest History
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#open-interest-statistics" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get open interest history</param>
            <param name="endTime">End time to get open interest history</param>
            <param name="ct">Cancellation token</param>
            <returns>Open Interest History info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetTakerBuySellVolumeRatioAsync(System.String,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Taker Buy/Sell Volume Ratio
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#taker-buy-sell-volume" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get taker buy/sell volume ratio</param>
            <param name="endTime">End time to get taker buy/sell volume ratio</param>
            <param name="ct">Cancellation token</param>
            <returns>Taker Buy/Sell Volume Ratio info</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetCompositeIndexInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets composite index info
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#composite-index-symbol-information" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the price of a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to get the price for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Price of symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of the prices of all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetContinuousContractKlinesAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided pair
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#continuous-contract-kline-candlestick-data" /></para>
            </summary>
            <param name="pair">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Kline/candlestick data for the index price of a pair.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#index-price-kline-candlestick-data" /></para>
            </summary>
            <param name="pair">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetAssetIndexesAsync(System.Threading.CancellationToken)">
            <summary>
            Get asset indexex for Multi-Assets mode for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#multi-assets-mode-asset-index" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetAssetIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get asset index for Multi-Assets mode for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#multi-assets-mode-asset-index" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets compressed, aggregate trades. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#compressed-aggregate-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get the trades for, for example `ETHUSDT`</param>
            <param name="fromId">ID to get aggregate trades from INCLUSIVE.</param>
            <param name="startTime">Time to start getting trades from</param>
            <param name="endTime">Time to stop getting trades from</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The aggregated trades list for the symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetBasisAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get basis data
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#basis" /></para>
            </summary>
            <param name="symbol">The pair to get the data for, for example `ETHUSDT`</param>
            <param name="contractType">The contract type</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiExchangeData.GetConvertSymbolsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of convert symbols
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/convert" /></para>
            </summary>
            <param name="fromAsset">From asset</param>
            <param name="toAsset">To asset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiShared">
            <summary>
            Shared interface for USD-M Futures rest API usage
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading">
            <summary>
            HitoBit USD-M futures trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.PriceMatch},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new order
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the base symbol</param>
            <param name="positionSide">The position side</param>
            <param name="reduceOnly">Specify as true if the order is intended to only reduce the position</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="activationPrice">Used with TRAILING_STOP_MARKET orders, default as the latest price（supporting different workingType)</param>
            <param name="callbackRate">Used with TRAILING_STOP_MARKET orders</param>
            <param name="workingType">stopPrice triggered by: "MARK_PRICE", "CONTRACT_PRICE"</param>
            <param name="closePosition">Close-All，used with STOP_MARKET or TAKE_PROFIT_MARKET.</param>
            <param name="orderResponseType">The response type. Default Acknowledge</param>
            <param name="priceProtect">If true when price reaches stopPrice, difference between "MARK_PRICE" and "CONTRACT_PRICE" cannot be larger than "triggerProtect" of the symbol.</param>
            <param name="priceMatch">Only avaliable for Limit/Stop/TakeProfit order</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="goodTillDate">Order cancel time for timeInForce GoodTillDate</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders in one call
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#place-multiple-orders-trade" /></para>
            </summary>
            <param name="orders">The orders to place</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Returns a list of call results, one for each order. The order the results are in is the order the orders were sent</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#query-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending order
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#cancel-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels all open orders
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel all open orders of the specified symbol at the end of the specified countdown. This rest endpoint means to ensure your open orders are canceled in case of an outage. The endpoint should be called repeatedly as heartbeats
            so that the existing countdown time can be canceled and replaced by a new one.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#auto-cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="countDownTime">The time after which all open orders should cancel, or 0 to cancel an existing timer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Countdown result</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels muliple orders
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#cancel-multiple-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderIdList">The list of order ids to cancel</param>
            <param name="origClientOrderIdList">The list of client order ids to cancel</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.EditOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Edit an existing order
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#modify-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="quantity">New quantity</param>
            <param name="price">New price</param>
            <param name="orderId">Order id of the order to edit</param>
            <param name="origClientOrderId">Client order id of the order to edit</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.EditMultipleOrdersAsync(System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Edit multiple existing orders
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#modify-multiple-orders-trade" /></para>
            </summary>
            <param name="orders">The order info</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetOrderEditHistoryAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get order edit history
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#get-order-modify-history-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="startTime">If set, only orders edited after this time will be returned</param>
            <param name="endTime">If set, only orders edited before this time will be returned</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetOpenOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific open order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#query-current-open-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of open orders
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#current-all-open-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get open orders for, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of open orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all orders for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#all-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for, for example `ETHUSDT`</param>
            <param name="orderId">If set, only orders with an order id higher than the provided will be returned</param>
            <param name="startTime">If set, only orders placed after this time will be returned</param>
            <param name="endTime">If set, only orders placed before this time will be returned</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{HitoBit.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of users forced orders
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#user-39-s-force-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get forced orders for, for example `ETHUSDT`</param>
            <param name="closeType">Filter by reason for close</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of forced orders</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets all user trades for provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#account-trade-list-user_data" /></para>
            </summary>
            <param name="symbol">Symbol to get trades for, for example `ETHUSDT`</param>
            <param name="limit">The max number of results</param>
            <param name="orderId">Get the trades for a specific order</param>
            <param name="fromId">TradeId to fetch from. Default gets most recent trades</param>
            <param name="startTime">Orders newer than this date will be retrieved</param>
            <param name="endTime">Orders older than this date will be retrieved</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of trades</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.PlaceVolumeParticipationOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,HitoBit.Net.Enums.OrderUrgency,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Place a new Volume Participation order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#volume-participation-vp-new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="quantity">Order quantity</param>
            <param name="urgency">Represent the relative speed of the current execution</param>
            <param name="clientOrderId">Client order id</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="limitPrice">Limit price of the order. If null will use market price</param>
            <param name="positionSide">Position side</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.PlaceTimeWeightedAveragePriceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Place a new Time Weighted Average Price order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#time-weighted-average-price-twap-new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="quantity">Order quantity</param>
            <param name="duration">Duration in seconds. Less than 5 minutes will be defaulted to 5 minutes, more than 24 hours will be defaulted to 24 hours.</param>
            <param name="clientOrderId">Client order id</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="limitPrice">Limit price of the order. If null will use market price</param>
            <param name="positionSide">Position side</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.CancelAlgoOrderAsync(System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel an algo order
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#cancel-algo-order-trade" /></para>
            </summary>
            <param name="algoOrderId">Algo id to cancel</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetOpenAlgoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get list of open algo orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-current-algo-open-orders-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetClosedAlgoOrdersAsync(System.String,System.Nullable{HitoBit.Net.Enums.OrderSide},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get list of closed algo orders
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-historical-algo-orders-user_data" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="side">Filter by side</param>
            <param name="startTime">Fitler by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="limit">Max results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetAlgoSubOrdersAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get algo sub orders overview
            <para><a href="https://hitobit-docs.github.io/apidocs/spot/en/#query-sub-orders-user_data" /></para>
            </summary>
            <param name="algoId">Algo id</param>
            <param name="page">Page</param>
            <param name="limit">Max results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetPositionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get position information
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/trade/rest-api/Position-Information-V3" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.ConvertQuoteRequestAsync(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.ValidTime},System.Threading.CancellationToken)">
            <summary>
            Get a convert quote
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/convert/Send-quote-request" /></para>
            </summary>
            <param name="fromAsset">The from asset, for example `ETH`</param>
            <param name="toAsset">The to asset, for example `USD`</param>
            <param name="fromQuantity">The from asset quantity, either this or toQuantity should be provided</param>
            <param name="toQuantity">The to asset quantity, either this or fromQuantity should be provided</param>
            <param name="validTime">The time the quote should be valid for</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.ConvertAcceptQuoteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Accept a convert quote
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/convert/Accept-Quote" /></para>
            </summary>
            <param name="quoteId">Quote id previously requested</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiTrading.GetConvertOrderStatusAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get status of a convert order
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/convert/Order-Status" /></para>
            </summary>
            <param name="quoteId">The quote id. Either this or orderId should be provided</param>
            <param name="orderId">The order id. Either this or quoteId should be provided</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApi">
            <summary>
            HitoBit USD futures streams
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApi.Account">
            <summary>
            Account streams and queries
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApi.ExchangeData">
            <summary>
            Exchange data streams and queries
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApi.Trading">
            <summary>
            Trading data and queries
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiAccount">
            <summary>
            HitoBit USD futures account websocket API
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account balances
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#futures-account-balance-v2-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get account information, including position and balances
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/account/rest-api/Account-Information-V3" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiAccount.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerRejectUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the account update stream. Prior to using this, the <see cref="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">restClient.UsdFuturesApi.Account.StartUserStreamAsync</see> method should be called to start the stream and obtaining a listen key.
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#user-data-streams" /></para>
            </summary>
            <param name="listenKey">Listen key retrieved by the <see cref="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitRestClientUsdFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">restClient.UsdFuturesApi.Account.StartUserStreamAsync</see> method</param>
            <param name="onLeverageUpdate">The event handler for leverage changed update</param>
            <param name="onMarginUpdate">The event handler for whenever a margin has changed</param>
            <param name="onAccountUpdate">The event handler for whenever an account update is received</param>
            <param name="onOrderUpdate">The event handler for whenever an order status update is received</param>
            <param name="onTradeUpdate">The event handler for whenever an trade status update is received</param>
            <param name="onListenKeyExpired">Responds when the listen key for the stream has expired. Initiate a new instance of the stream here</param>
            <param name="onStrategyUpdate">The event handler for whenever a strategy update is received</param>
            <param name="onGridUpdate">The event handler for whenever a grid update is received</param>
            <param name="onConditionalOrderTriggerRejectUpdate">The event handler for whenever a trigger order failed to place an order</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData">
            <summary>
            HitoBit USD futures exchange data websocket API
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for the provided symbol
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/market-data/websocket-api" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for, for example `ETHUSDT`</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the price of a symbol
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/market-data/websocket-api/Symbol-Price-Ticker" /></para>
            </summary>
            <param name="symbol">The symbol to get the price for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>Price of symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the price of all symbols
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/market-data/websocket-api/Symbol-Price-Ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Price of symbol</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/market-data/websocket-api/Symbol-Order-Book-Ticker" /></para>
            </summary>
            <param name="symbol">Symbol to get book price for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for all symbols.
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/market-data/websocket-api/Symbol-Order-Book-Ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Subscribe to individual trade update. NOTE: This endpoint stream isn't document and therefor might be changed or removed without prior notice
            </summary>
            <param name="symbol">Symbol to subscribe, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="filterOutNonTradeUpdates">Filter out any update which isn't a trade. Occasionally different updates (like INSURANCE_FUND updates) will occur on this stream. By default these are ignored</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade}},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Subscribe to individual trade update. NOTE: This endpoint stream isn't document and therefor might be changed or removed without prior notice
            </summary>
            <param name="symbols">Symbols to subscribe, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="filterOutNonTradeUpdates">Filter out any update which isn't a trade. Occasionally different updates (like INSURANCE_FUND updates) will occur on this stream. By default these are ignored</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesUsdtStreamMarkPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Mark price update stream for a single symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#mark-price-stream" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesUsdtStreamMarkPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Mark price update stream for a list of symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#mark-price-stream" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol and intervals
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{HitoBit.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols and intervals
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToContinuousContractKlineUpdatesAsync(System.String,HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamContinuousKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the continuous contract candlestick update stream for the provided pair
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#continuous-contract-kline-candlestick-streams" /></para>
            </summary>
            <param name="pair">The pair, for example `ETHUSDT`</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToContinuousContractKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},HitoBit.Net.Enums.ContractType,HitoBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamContinuousKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the continuous contract candlestick update stream for the provided pairs
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#continuous-contract-kline-candlestick-streams" /></para>
            </summary>
            <param name="pairs">The pairs, for example `ETHUSDT`</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitMiniTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for a list of symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe to, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBitMiniTick}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#all-market-mini-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBit24HPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBit24HPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe to, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Interfaces.IHitoBit24HPrice}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#all-market-tickers-streams" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to all book ticker update streams
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#all-book-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the book ticker update stream for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the book ticker update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to specific symbol forced liquidations stream
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#liquidation-order-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to list of symbol forced liquidations stream
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#liquidation-order-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to all forced liquidations stream
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#all-market-liquidation-order-streams" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth updates for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe on, for example `ETHUSDT`</param>
            <param name="levels">The amount of entries to be returned in the update, 5, 10 or 20</param>
            <param name="updateInterval">Update interval in milliseconds, 100, 250 or 500</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth updates for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe on, for example `ETHUSDT`</param>
            <param name="levels">The amount of entries to be returned in the update of each symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 500. Defaults to 250</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the order book updates for the provided symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#diff-book-depth-streams" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="updateInterval">Update interval in milliseconds, either 0 or 100, 500 or 1000, depending on endpoint</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth update stream for the provided symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#diff-book-depth-streams" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="updateInterval">Update interval in milliseconds, either 0 or 100, 500 or 1000, depending on endpoint</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToSymbolUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to contract/symbol updates
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAllMarkPriceUpdatesAsync(System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesUsdtStreamMarkPrice}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Mark price update stream for a all symbols
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#mark-price-stream-for-all-market" /></para>
            </summary>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToCompositeIndexUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndex}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to composite index updates stream for a symbol
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#composite-index-symbol-information-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAssetIndexUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to asset index updates stream
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#multi-assets-mode-asset-index-2" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiExchangeData.SubscribeToAssetIndexUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to asset index updates for a single
            <para><a href="https://hitobit-docs.github.io/apidocs/futures/en/#multi-assets-mode-asset-index-2" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiShared">
            <summary>
            Shared interface for USD-M Futures socket API usage
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiTrading">
            <summary>
            HitoBit USD futures trading websocket API
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiTrading.PlaceOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,HitoBit.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.PositionSide},System.Nullable{HitoBit.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HitoBit.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{HitoBit.Net.Enums.PriceMatch},System.Nullable{HitoBit.Net.Enums.SelfTradePreventionMode},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/trade/websocket-api" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the base symbol</param>
            <param name="positionSide">The position side</param>
            <param name="reduceOnly">Specify as true if the order is intended to only reduce the position</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="activationPrice">Used with TRAILING_STOP_MARKET orders, default as the latest price（supporting different workingType)</param>
            <param name="callbackRate">Used with TRAILING_STOP_MARKET orders</param>
            <param name="workingType">stopPrice triggered by: "MARK_PRICE", "CONTRACT_PRICE"</param>
            <param name="closePosition">Close-All，used with STOP_MARKET or TAKE_PROFIT_MARKET.</param>
            <param name="orderResponseType">The response type. Default Acknowledge</param>
            <param name="priceProtect">If true when price reaches stopPrice, difference between "MARK_PRICE" and "CONTRACT_PRICE" cannot be larger than "triggerProtect" of the symbol.</param>
            <param name="priceMatch">Only avaliable for Limit/Stop/TakeProfit order</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="goodTillDate">Order cancel time for timeInForce GoodTillDate</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiTrading.EditOrderAsync(System.String,HitoBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Edit an existing order
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/trade/websocket-api/Modify-Order" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="quantity">New quantity</param>
            <param name="price">New price</param>
            <param name="orderId">Order id of the order to edit</param>
            <param name="origClientOrderId">Client order id of the order to edit</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending order
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/trade/websocket-api/Cancel-Order" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/trade/websocket-api/Query-Order" /></para>
            </summary>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.Clients.UsdFuturesApi.IHitoBitSocketClientUsdFuturesApiTrading.GetPositionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get position information
            <para><a href="https://developers.hitobit.com/docs/derivatives/usds-margined-futures/trade/websocket-api/Position-Info-V2" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBit24HPrice">
            <summary>
            24 hour price stats
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.PriceChange">
            <summary>
            The actual price change in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.PriceChangePercent">
            <summary>
            The price change in percentage in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.WeightedAveragePrice">
            <summary>
            The weighted average price in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.LastQuantity">
            <summary>
            The most recent trade quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.OpenTime">
            <summary>
            Time at which this 24 hours opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.CloseTime">
            <summary>
            Time at which this 24 hours closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.FirstTradeId">
            <summary>
            The first trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.LastTradeId">
            <summary>
            The last trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBit24HPrice.TotalTrades">
            <summary>
            The amount of trades made in the last 24 hours
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitAggregatedTrade">
            <summary>
            Compressed aggregated trade information. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitAggregatedTrade.Id">
            <summary>
            The id of this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitAggregatedTrade.Price">
            <summary>
            The price of trades in this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitAggregatedTrade.Quantity">
            <summary>
            The total quantity of trades in the aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitAggregatedTrade.FirstTradeId">
            <summary>
            The first trade id in this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitAggregatedTrade.LastTradeId">
            <summary>
            The last trade id in this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitAggregatedTrade.TradeTime">
            <summary>
            The timestamp of the trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitAggregatedTrade.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitBalance">
            <summary>
            Balance data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBalance.Available">
            <summary>
            The quantity that isn't locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBalance.Locked">
            <summary>
            The quantity that is currently locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBalance.Total">
            <summary>
            The total balance of this asset (Free + Locked)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitBookPrice">
            <summary>
            Book tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBookPrice.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBookPrice.BestBidPrice">
            <summary>
            Price of the best bid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBookPrice.BestBidQuantity">
            <summary>
            Quantity of the best bid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBookPrice.BestAskPrice">
            <summary>
            Price of the best ask
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitBookPrice.BestAskQuantity">
            <summary>
            Quantity of the best ask
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation">
            <summary>
            Forced liquidation info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.LastQuantityFilled">
            <summary>
            Total quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.QuantityFilled">
            <summary>
            The executed quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.Type">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesLiquidation.Timestamp">
            <summary>
            Forced time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitFuturesMarkPrice">
            <summary>
            Mark Price and Funding Rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesMarkPrice.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesMarkPrice.MarkPrice">
            <summary>
            The current market price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesMarkPrice.FundingRate">
            <summary>
            The last funding rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesMarkPrice.NextFundingTime">
            <summary>
            The time the funding rate is applied
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitKline">
            <summary>
            Kline data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.OpenTime">
            <summary>
            The time this candlestick opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.OpenPrice">
            <summary>
            The price at which this candlestick opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.HighPrice">
            <summary>
            The highest price in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.LowPrice">
            <summary>
            The lowest price in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.ClosePrice">
            <summary>
            The price at which this candlestick closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.Volume">
            <summary>
            The volume traded during this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.QuoteVolume">
            <summary>
            The volume traded during this candlestick in the asset form
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.TradeCount">
            <summary>
            The amount of trades in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.TakerBuyBaseVolume">
            <summary>
            Taker buy base asset volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitKline.TakerBuyQuoteVolume">
            <summary>
            Taker buy quote asset volume
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitMiniTick">
            <summary>
            MiniTick info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitMiniTick.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitMiniTick.LastPrice">
            <summary>
            Close Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitMiniTick.OpenPrice">
            <summary>
            Open Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitMiniTick.HighPrice">
            <summary>
            High
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitMiniTick.LowPrice">
            <summary>
            Low
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitMiniTick.Volume">
            <summary>
            Total traded volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitMiniTick.QuoteVolume">
            <summary>
            Total traded alternate asset volume
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitOrderBook">
            <summary>
            The order book for a asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitOrderBook.Symbol">
            <summary>
            The symbol of the order book (only filled from stream updates)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitOrderBook.LastUpdateId">
            <summary>
            The ID of the last update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitOrderBook.Bids">
            <summary>
            The list of bids
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitOrderBook.Asks">
            <summary>
            The list of asks
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitEventOrderBook">
            <summary>
            Order book update event
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitEventOrderBook.FirstUpdateId">
            <summary>
            The ID of the first update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitEventOrderBook.EventTime">
            <summary>
            Timestamp of the event
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook">
            <summary>
            Futures order book update event
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitFuturesEventOrderBook.LastUpdateIdStream">
            <summary>
            Last update id of the previous update
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitOrderBookFactory">
            <summary>
            HitoBit order book factory
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitOrderBookFactory.Spot">
            <summary>
            Spot order book factory methods
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitOrderBookFactory.UsdFutures">
            <summary>
            USD Futures order book factory methods
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitOrderBookFactory.CoinFutures">
            <summary>
            Coin Futures order book factory methods
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.IHitoBitOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.IHitoBitOrderBookFactory.CreateSpot(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <summary>
            Create a Spot SymbolOrderBook
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.IHitoBitOrderBookFactory.CreateUsdtFutures(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <summary>
            Create a Usdt Futures SymbolOrderBook
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.IHitoBitOrderBookFactory.CreateCoinFutures(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <summary>
            Create a Coin Futures SymbolOrderBook
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitRecentTrade">
            <summary>
            Recent trade data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitRecentTrade.OrderId">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitRecentTrade.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitRecentTrade.BaseQuantity">
            <summary>
            The base quantity of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitRecentTrade.QuoteQuantity">
            <summary>
            The quote quantity of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitRecentTrade.TradeTime">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitRecentTrade.BuyerIsMaker">
            <summary>
            Whether the buyer is maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitRecentTrade.IsBestMatch">
            <summary>
            Whether the trade was made at the best match
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitStreamKlineData">
            <summary>
            Stream kline data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitStreamKlineData.Symbol">
            <summary>
            The symbol the data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitStreamKlineData.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitStreamKline">
            <summary>
            Stream kline data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitStreamKline.Interval">
            <summary>
            Interval
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitStreamKline.Final">
            <summary>
            Is this kline final
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitStreamKline.FirstTrade">
            <summary>
            Id of the first trade in this kline
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitStreamKline.LastTrade">
            <summary>
            Id of the last trade in this kline
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitTick">
            <summary>
            Price statistics of the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTick.PrevDayClosePrice">
            <summary>
            The close price 24 hours ago
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTick.BestBidPrice">
            <summary>
            The best bid price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTick.BestBidQuantity">
            <summary>
            The quantity of the best bid price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTick.BestAskPrice">
            <summary>
            The best ask price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTick.BestAskQuantity">
            <summary>
            The quantity of the best ask price in the order book
            </summary>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitTrackerFactory">
            <summary>
            Tracker factory
            </summary>
        </member>
        <member name="M:HitoBit.Net.Interfaces.IHitoBitTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new kline tracker
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">Kline interval</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="M:HitoBit.Net.Interfaces.IHitoBitTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new trade tracker for a symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Interfaces.IHitoBitTrade">
            <summary>
            Information about a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTrade.Symbol">
            <summary>
            The symbol the trade is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTrade.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTrade.Quantity">
            <summary>
            The quantity of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTrade.TradeTime">
            <summary>
            The time the trade was made
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTrade.BuyerIsMaker">
            <summary>
            Whether account was the buyer in the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Interfaces.IHitoBitTrade.IsBestMatch">
            <summary>
            Whether trade was made with the best match
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.HitoBitApiAddresses">
            <summary>
            Api addresses
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.RestClientAddress">
            <summary>
            The address used by the HitoBitClient for the Spot API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.SocketClientStreamAddress">
            <summary>
            The address used by the HitoBitSocketClient for the Spot streams
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.SocketClientApiAddress">
            <summary>
            The address used by the HitoBitSocketClient for the Spot API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.BlvtSocketClientAddress">
            <summary>
            The address used by the HitoBitSocketClient for connecting to the BLVT streams
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.UsdFuturesRestClientAddress">
            <summary>
            The address used by the HitoBitClient for the USD futures API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.UsdFuturesSocketClientAddress">
            <summary>
            The address used by the HitoBitSocketClient for the USD futures streams
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.UsdFuturesSocketApiClientAddress">
            <summary>
            The address used by the HitoBitSocketClient for the USD futures API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.CoinFuturesRestClientAddress">
            <summary>
            The address used by the HitoBitClient for the COIN futures API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitApiAddresses.CoinFuturesSocketClientAddress">
            <summary>
            The address used by the HitoBitSocketClient for the Coin futures API
            </summary>
        </member>
        <member name="F:HitoBit.Net.Objects.HitoBitApiAddresses.Default">
            <summary>
            The default addresses to connect to the hitobit.com API
            </summary>
        </member>
        <member name="F:HitoBit.Net.Objects.HitoBitApiAddresses.TestNet">
            <summary>
            The addresses to connect to the hitobit testnet
            </summary>
        </member>
        <member name="F:HitoBit.Net.Objects.HitoBitApiAddresses.Us">
            <summary>
            The addresses to connect to hitobit.us. (hitobit.us futures not are not available)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.HitoBitRateLimitError">
            <summary>
            HitoBit rate limit error
            </summary>
        </member>
        <member name="M:HitoBit.Net.Objects.HitoBitRateLimitError.#ctor(System.String)">
            <summary>
            ctor
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HitoBit.Net.Objects.HitoBitRateLimitError.#ctor(System.Nullable{System.Int32},System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="T:HitoBit.Net.Objects.HitoBitResponse">
            <summary>
            HitoBit response
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponse.Id">
            <summary>
            Identifier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponse.Status">
            <summary>
            Result status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponse.Error">
            <summary>
            Error info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponse.Ratelimits">
            <summary>
            Rate limit info
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.HitoBitResponse`1">
            <summary>
            HitoBit response
            </summary>
            <typeparam name="T">Type of the data</typeparam>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponse`1.Result">
            <summary>
            Data result
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.HitoBitResponseError">
            <summary>
            HitoBit error response
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponseError.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponseError.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponseError.Data">
            <summary>
            Error data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.HitoBitResponseErrorData">
            <summary>
            Error data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponseErrorData.ServerTime">
            <summary>
            Server time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.HitoBitResponseErrorData.RetryAfter">
            <summary>
            Retry after time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrders">
            <summary>
            Algo orders
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrders.Total">
            <summary>
            Total items
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrders.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder">
            <summary>
            Algo order info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.AlgoId">
            <summary>
            Algo id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.TotalQuantity">
            <summary>
            Total quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.ExecutedQuantity">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.ExecutedAmount">
            <summary>
            exceuted amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.ClientAlgoId">
            <summary>
            Client algo id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.BookTime">
            <summary>
            Book time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.EndTime">
            <summary>
            End time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.AlgoStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.AlgoType">
            <summary>
            Algo type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrder.Urgency">
            <summary>
            Urgency
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrderResult">
            <summary>
            Algo order result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrderResult.ClientAlgoId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoOrderResult.Success">
            <summary>
            Successful
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoResult">
            <summary>
            Algo order result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoResult.AlgoId">
            <summary>
            Algo order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoResult.Success">
            <summary>
            Successful
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrderList">
            <summary>
            Sub order list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrderList.Total">
            <summary>
            Amount of sub orders
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrderList.ExecutedQuantity">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrderList.ExecutedAmount">
            <summary>
            Executed amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrderList.SubOrders">
            <summary>
            Sub orders
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder">
            <summary>
            Algo sub order info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.AlgoId">
            <summary>
            Algo id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.ExecutedQuantity">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.ExecutedAmount">
            <summary>
            Exceuted amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.FeeAmount">
            <summary>
            Fee amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.BookTime">
            <summary>
            Book time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.SubId">
            <summary>
            Sub id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.AlgoOrders.HitoBitAlgoSubOrder.OriginalQuantity">
            <summary>
            Original quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitBnbBurnStatus">
            <summary>
            BNB burn for fee reduction status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitBnbBurnStatus.FeeBurn">
            <summary>
            Fee burn status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset">
            <summary>
            Information about an account asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.InitialMargin">
            <summary>
            Initial Margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.MaintMargin">
            <summary>
            Maint Margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.MarginBalance">
            <summary>
            Margin Balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.MaxWithdrawQuantity">
            <summary>
            Maximum Withdraw Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.OpenOrderInitialMargin">
            <summary>
            Open Order Initial Margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.PositionInitialMargin">
            <summary>
            Position Initial Margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.UnrealizedPnl">
            <summary>
            Unrealized Profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.WalletBalance">
            <summary>
            Wallet Balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.CrossWalletBalance">
            <summary>
            Crossed Wallet Balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.CrossUnrealizedPnl">
            <summary>
            Unrealized profit of crossed positions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.MarginAvailable">
            <summary>
            Whether the asset can be used as margin in Multi-Assets mode
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountAsset.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountBalance">
            <summary>
            Information about an account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountBalance.AccountAlias">
            <summary>
            Account alias
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountBalance.WalletBalance">
            <summary>
            The total balance of this asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountBalance.CrossWalletBalance">
            <summary>
            Crossed wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountBalance.CrossUnrealizedPnl">
            <summary>
            Unrealized profit of crossed positions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountBalance.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountBalance.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitUsdFuturesAccountBalance">
            <summary>
            Usd futures account balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitUsdFuturesAccountBalance.MaxWithdrawQuantity">
            <summary>
            Maximum quantity for transfer out
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitUsdFuturesAccountBalance.MarginAvailable">
            <summary>
            Whether the asset can be used as margin in Multi-Assets mode
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitCoinFuturesAccountBalance">
            <summary>
            Coin futures account balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitCoinFuturesAccountBalance.WithdrawAvailable">
            <summary>
            Available for withdraw
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration">
            <summary>
            Account configuration
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration.FeeTier">
            <summary>
            Fee tier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration.CanTrade">
            <summary>
            Can trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration.CanDeposit">
            <summary>
            Can deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration.CanWithdraw">
            <summary>
            Can withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration.DualSidePosition">
            <summary>
            Dual side position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration.MultiAssetsMargin">
            <summary>
            Multi assets margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountConfiguration.TradeGroupId">
            <summary>
            Trade group id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo">
            <summary>
            Information about an account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.Assets">
            <summary>
            Information about an account assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.CanDeposit">
            <summary>
            Boolean indicating if this account can deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.CanTrade">
            <summary>
            Boolean indicating if this account can trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.CanWithdraw">
            <summary>
            Boolean indicating if this account can withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.MultiAssetsMargin">
            <summary>
            Boolean indicating if this account is in multi asset mode
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TradeGroupId">
            <summary>
            Trade group id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.FeeTier">
            <summary>
            Fee tier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.MaxWithdrawQuantity">
            <summary>
            Maximum withdraw quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.Positions">
            <summary>
            Information about an account positions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalMaintMargin">
            <summary>
            Total maint margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalOpenOrderInitialMargin">
            <summary>
            Total open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalPositionInitialMargin">
            <summary>
            Total positional initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalUnrealizedProfit">
            <summary>
            Total unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalWalletBalance">
            <summary>
            Total wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalCrossWalletBalance">
            <summary>
            Total crossed wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.TotalCrossUnPnl">
            <summary>
            Unrealized profit of crossed positions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfo.UpdateTime">
            <summary>
            The time of account info was updated
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalMaintenanceMargin">
            <summary>
            Total maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalWalletBalance">
            <summary>
            Total wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalUnrealizedProfit">
            <summary>
            Total unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalPositionInitialMargin">
            <summary>
            Total position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalOpenOrderInitialMargin">
            <summary>
            Total open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalCrossWalletBalance">
            <summary>
            Total cross wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.TotalCrossUnrealizedPnl">
            <summary>
            Total cross unrealized profit and loss
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.MaxWithdrawQuantity">
            <summary>
            Max withdraw quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoV3.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset">
            <summary>
            Asset information
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.PositionInitialMargin">
            <summary>
            Position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.OpenOrderInitialMargin">
            <summary>
            Open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.CrossWalletBalance">
            <summary>
            Cross wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.CrossUnrealizedPnl">
            <summary>
            Cross unrealized profit and loss
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.MaxWithdrawQuantity">
            <summary>
            Max withdraw quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoAsset.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.PositionAmount">
            <summary>
            Position amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.Notional">
            <summary>
            Notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.IsolatedWallet">
            <summary>
            Isolated wallet
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountInfoPosition.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountUserCommissionRate">
            <summary>
            User commission rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountUserCommissionRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountUserCommissionRate.MakerCommissionRate">
            <summary>
            Maker commission rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAccountUserCommissionRate.TakerCommissionRate">
            <summary>
            Taker commission rate
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex">
            <summary>
            Futures asset index
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.BidBuffer">
            <summary>
            Bid buffer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.AskBuffer">
            <summary>
            Ask buffer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.BidPrice">
            <summary>
            Bid price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.AskPrice">
            <summary>
            Ask price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.AutoExchangeBidBuffer">
            <summary>
            Auto exchange bid buffer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.AutoExchangeAskBuffer">
            <summary>
            Auto exchange ask buffer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.AutoExchangeBidPrice">
            <summary>
            Auto exchange bid price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAssetIndex.AutoExchangeAskPrice">
            <summary>
            Auto exchange ask price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis">
            <summary>
            Basis info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis.Pair">
            <summary>
            The pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis.FuturesPrice">
            <summary>
            Futures price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis.Basis">
            <summary>
            Basis
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis.BasisRate">
            <summary>
            Basis rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis.AnnualizedBasisRate">
            <summary>
            Annualized basis rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBasis.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder">
            <summary>
            Parameters for editing an order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder.OrderId">
            <summary>
            Id of the order to edit. This or ClientOrderId should be provided
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder.ClientOrderId">
            <summary>
            Client id of the order to edit. This or OrderId should be provided
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder.Symbol">
            <summary>
            Symbol of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder.Side">
            <summary>
            Side of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchEditOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder">
            <summary>
            Parameters for a new futures batch order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.Symbol">
            <summary>
            Symbol of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.Side">
            <summary>
            Side of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.PositionSide">
            <summary>
            Default Both for One-way Mode ; Long or Short for Hedge Mode. It must be sent with Hedge Mode.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.ReduceOnly">
            <summary>
            Reduce only, default false
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.NewClientOrderId">
            <summary>
            A unique id among open orders. Automatically generated if not sent.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.StopPrice">
            <summary>
            Used with Stop/StopMarket or TakeProfit/TakeProfitMarket orders.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.ActivationPrice">
            <summary>
            Used with TrailingStopMarket orders, default as the latest price（supporting different workingType)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.CallbackRate">
            <summary>
            Used with TrailingStopMarket orders, min 0.1, max 4 where 1 for 1%
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.WorkingType">
            <summary>
            Stop price triggered by: Mark or Contract. Default Contract
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.PriceProtect">
            <summary>
            Used with Stop/StopMarket or TakeProfit/TakeProfitMarket orders.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.PriceMatch">
            <summary>
            Price match
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBatchOrder.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBookPrice">
            <summary>
            Book price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBookPrice.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBuySellVolumeRatio">
            <summary>
            Buy Sell Volume Ratio Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBuySellVolumeRatio.BuySellRatio">
            <summary>
            buy/sell ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBuySellVolumeRatio.BuyVolume">
            <summary>
            buy volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBuySellVolumeRatio.SellVolume">
            <summary>
            sell volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBuySellVolumeRatio.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCancelAllOrders">
            <summary>
            The result of cancel all orders
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCancelAllOrders.Code">
            <summary>
            The execution code
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCancelAllOrders.Message">
            <summary>
            The execution message
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesChangeMarginTypeResult">
            <summary>
            Result from a change margin type request
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesChangeMarginTypeResult.Code">
            <summary>
            Response code
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesChangeMarginTypeResult.Message">
            <summary>
            Response message
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoin24HPrice">
            <summary>
            Price statistics of the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoin24HPrice.Pair">
            <summary>
            The pair the price is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoin24HPrice.Volume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoin24HPrice.QuoteVolume">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo.CanDeposit">
            <summary>
            Can deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo.CanTrade">
            <summary>
            Can trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo.CanWithdraw">
            <summary>
            Can withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo.FeeTier">
            <summary>
            Fee tier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo.UpdateTier">
            <summary>
            Update tier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo.Assets">
            <summary>
            Account assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo.Positions">
            <summary>
            Account positions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinAccountInfo.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinBuySellVolumeRatio">
            <summary>
            Buy/sell volume ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinBuySellVolumeRatio.Pair">
            <summary>
            The pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinBuySellVolumeRatio.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinBuySellVolumeRatio.TakerBuyVolume">
            <summary>
            The taker buy volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinBuySellVolumeRatio.TakerSellVolume">
            <summary>
            The taker sell volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinBuySellVolumeRatio.TakerBuyVolumeValue">
            <summary>
            The taker buy value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinBuySellVolumeRatio.TakerSellVolumeValue">
            <summary>
            The taker sell value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinBuySellVolumeRatio.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinKline">
            <summary>
            Candlestick information for symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinKline.Volume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinKline.QuoteVolume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinKline.TakerBuyBaseVolume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinKline.TakerBuyQuoteVolume">
            <inheritdoc/>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterestHistory">
            <summary>
            Open Interest History info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterestHistory.Pair">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterestHistory.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterestHistory.SumOpenInterest">
            <summary>
            Total open interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterestHistory.SumOpenInterestValue">
            <summary>
            Total open interest value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterestHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfo">
            <summary>
            Index info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfo.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfo.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfo.Component">
            <summary>
            Component asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfo.BaseAssets">
            <summary>
            Base asset list
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfoAsset">
            <summary>
            Composite index asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfoAsset.BaseAsset">
            <summary>
            Base asset name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfoAsset.QuoteAsset">
            <summary>
            Quote asset name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfoAsset.WeightInQuantity">
            <summary>
            Weight in quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCompositeIndexInfoAsset.WeightInPercentage">
            <summary>
            Weight in percentage
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertQuote">
            <summary>
            Convert quote info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertQuote.QuoteId">
            <summary>
            Quote id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertQuote.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertQuote.InverseRatio">
            <summary>
            Inverse ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertQuote.ValidTimestamp">
            <summary>
            Until when the quote is valid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertQuote.ToQuantity">
            <summary>
            To quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertQuote.FromQuantity">
            <summary>
            From quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus">
            <summary>
            Convert order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.FromAsset">
            <summary>
            From asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.FromQuantity">
            <summary>
            Quantity in the from asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.ToAsset">
            <summary>
            To asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.ToQuantity">
            <summary>
            Quantity in the to asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.InverseRatio">
            <summary>
            Inverse ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertStatus.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertSymbol">
            <summary>
            Convert symbol info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertSymbol.FromAsset">
            <summary>
            From asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertSymbol.ToAsset">
            <summary>
            To asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertSymbol.FromAssetMinQuantity">
            <summary>
            Minimal convert from asset quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertSymbol.FromAssetMaxQuantity">
            <summary>
            Maximal convert from asset quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertSymbol.ToAssetMinQuantity">
            <summary>
            Minimal convert to asset quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesConvertSymbol.ToAssetMaxQuantity">
            <summary>
            Maximal convert to asset quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCountDownResult">
            <summary>
            Result of setting a countdown timer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCountDownResult.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCountDownResult.CountDownTime">
            <summary>
            Count down time in milliseconds
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadIdInfo">
            <summary>
            Transaction download info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadIdInfo.AverageCostTimestampOfLast30Days">
            <summary>
            Average time taken for data download in the past 30 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadIdInfo.DownloadId">
            <summary>
            Download id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadLink">
            <summary>
            Transaction download info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadLink.DownloadId">
            <summary>
            Download id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadLink.Status">
            <summary>
            Is ready to download
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadLink.Url">
            <summary>
            Download url
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadLink.ExpirationTime">
            <summary>
            Link expiration time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesDownloadLink.IsExpired">
            <summary>
            Is expired
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesExchangeInfo">
            <summary>
            Exchange info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesExchangeInfo.TimeZone">
            <summary>
            The timezone the server uses
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesExchangeInfo.ServerTime">
            <summary>
            The current server time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesExchangeInfo.RateLimits">
            <summary>
            The rate limits used
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesExchangeInfo.ExchangeFilters">
            <summary>
            Filters
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtExchangeInfo">
            <summary>
            Exchange info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtExchangeInfo.Symbols">
            <summary>
            All symbols supported
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtExchangeInfo.Assets">
            <summary>
            All assets
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinExchangeInfo">
            <summary>
            Exchange info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinExchangeInfo.Symbols">
            <summary>
            All symbols supported
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingInfo">
            <summary>
            Funding rate information for Futures trading
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingInfo.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingInfo.AdjustedFundingRateCap">
            <summary>
            Adjusted funding rate cap
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingInfo.AdjustedFundingRateFloor">
            <summary>
            Adjusted funding rate floor
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingInfo.FundingIntervalHours">
            <summary>
            Funding interval in hours
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingRateHistory">
            <summary>
            Funding rate information for Futures trading
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingRateHistory.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingRateHistory.FundingRate">
            <summary>
            The finding rate for the given symbol and time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingRateHistory.FundingTime">
            <summary>
            The time the funding rate is applied
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesFundingRateHistory.MarkPrice">
            <summary>
            The mark price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory">
            <summary>
            Futures income history result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory.Symbol">
            <summary>
            Symbol for the resulting income history, may be null if not associated with a trading pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory.IncomeType">
            <summary>
            Type of income as string
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory.Income">
            <summary>
            Quantity of income
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory.Asset">
            <summary>
            Base asset for the income
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory.Info">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory.Timestamp">
            <summary>
            Time of the income
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory.TransactionId">
            <summary>
            Transaction id if relevant
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesIncomeHistory.TradeId">
            <summary>
            Trade id if existing
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesInitialLeverageChangeResult">
            <summary>
            Response to the change in initial leverage request
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesInitialLeverageChangeResult.Leverage">
            <summary>
            New leverage multiplier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesInitialLeverageChangeResult.MaxNotionalValue">
            <summary>
            Maximum value that can be held
            NOTE: string type, because the value van be 'inf' (infinite)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesInitialLeverageChangeResult.MaxQuantity">
            <summary>
            Max quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesInitialLeverageChangeResult.Symbol">
            <summary>
            Symbol the request is for
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesLongShortRatio">
            <summary>
            Long Short Ratio Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesLongShortRatio.SymbolPair">
            <summary>
            The symbol or pair the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesLongShortRatio.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesLongShortRatio.LongShortRatio">
            <summary>
            long/short ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesLongShortRatio.LongAccount">
            <summary>
            longs percentage (in decimal form)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesLongShortRatio.ShortAccount">
            <summary>
            shorts percentage (in decimal form)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesLongShortRatio.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarginChangeHistoryResult">
            <summary>
            Result of the margin change history request
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarginChangeHistoryResult.Quantity">
            <summary>
            Request quantity of margin used
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarginChangeHistoryResult.Asset">
            <summary>
            Base asset used for margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarginChangeHistoryResult.Symbol">
            <summary>
            Symbol margin is placed on
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarginChangeHistoryResult.DeltaType">
            <summary>
            Delta type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarginChangeHistoryResult.Timestamp">
            <summary>
            Time of the margin change request
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarginChangeHistoryResult.Type">
            <summary>
            Direction of the margin change request
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarginChangeHistoryResult.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice">
            <summary>
            Mark Price and Funding Rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice.MarkPrice">
            <summary>
            The current market price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice.IndexPrice">
            <summary>
            The current index price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice.FundingRate">
            <summary>
            The last funding rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice.NextFundingTime">
            <summary>
            The time the funding rate is applied
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice.EstimatedSettlePrice">
            <summary>
            Estimated settle price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMarkPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinMarkPrice">
            <summary>
            Mark price for Coin-M future
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinMarkPrice.Pair">
            <summary>
            The pair
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMultiAssetMode">
            <summary>
            Multi asset mode info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMultiAssetMode.MultiAssetMode">
            <summary>
            Is multi assets mode enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMultipleOrderCancelResult">
            <summary>
            Extension to be able to deserialize an error response as well
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitUsdFuturesMultipleOrderCancelResult">
            <summary>
            Extension to be able to deserialize an error response as well
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesMultipleOrderPlaceResult">
            <summary>
            Extension to be able to deserialize an error response as well
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitUsdFuturesMultipleOrderPlaceResult">
            <summary>
            Extension to be able to deserialize an error response as well
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterest.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterest.OpenInterest">
            <summary>
            Open Interest info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterest.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterest.Pair">
            <summary>
            The pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinOpenInterest.ContractType">
            <summary>
            The contract type
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterestHistory">
            <summary>
            Open Interest History info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterestHistory.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterestHistory.SumOpenInterest">
            <summary>
            Total open interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterestHistory.SumOpenInterestValue">
            <summary>
            Total open interest value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOpenInterestHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder">
            <summary>
            The result of query order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.Id">
            <summary>
            The order id as assigned by HitoBit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.ClientOrderId">
            <summary>
            The order id as assigned by the client
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.AveragePrice">
            <summary>
            The average price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.QuantityFilled">
            <summary>
            Quantity that has been filled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.CummulativeQuantity">
            <summary>
            Cumulative quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.QuoteQuantityFilled">
            <summary>
            Cumulative quantity in quote asset ( for USD futures )
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.BaseQuantityFilled">
            <summary>
            Cumulative quantity in quote asset ( for Coin futures )
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.Quantity">
            <summary>
            The original quantity of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.ReduceOnly">
            <summary>
            Reduce Only
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.ClosePosition">
            <summary>
            If order is for closing a position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.Status">
            <summary>
            The current status of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.StopPrice">
            <summary>
            Stop price for the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.TimeInForce">
            <summary>
            For what time the order lasts
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.OriginalType">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.ActivatePrice">
            <summary>
            Activation price, only return with TRAILING_STOP_MARKET order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.CallbackRate">
            <summary>
            Callback rate, only return with TRAILING_STOP_MARKET order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.UpdateTime">
            <summary>
            The time the order was updated
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.CreateTime">
            <summary>
            The time the order was created
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.WorkingType">
            <summary>
            The working type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.PositionSide">
            <summary>
            The position side of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.PriceProtect">
            <summary>
            Price protect
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.PriceMatch">
            <summary>
            Price match type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrder.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitUsdFuturesOrder">
            <summary>
            Usdt futures order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitUsdFuturesOrder.GoodTillDate">
            <summary>
            Auto cancel at this date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderBook">
            <summary>
            The order book for a asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderBook.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderBook.Symbol">
            <summary>
            The symbol of the order book 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderBook.MessageTime">
            <summary>
            The symbol of the order book 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderBook.TransactionTime">
            <summary>
            The ID of the last update
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory">
            <summary>
            The history of order edits
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory.AmendmentId">
            <summary>
            The id of the amendment
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory.Id">
            <summary>
            The order id as assigned by HitoBit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory.ClientOrderId">
            <summary>
            The order id as assigned by the client
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory.Timestamp">
            <summary>
            Edit time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory.EditInfo">
            <summary>
            Edit info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderEditHistory.PriceMatch">
            <summary>
            Price match
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderChanges">
            <summary>
            Order changes
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderChanges.Price">
            <summary>
            Price change
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderChanges.Quantity">
            <summary>
            Quantity change
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderChanges.EditCount">
            <summary>
            Amount of times changed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderChange">
            <summary>
            Change info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderChange.Before">
            <summary>
            Before edit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesOrderChange.After">
            <summary>
            After edit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesPositionMarginResult">
            <summary>
            Result of the requested margin amount change
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesPositionMarginResult.Amount">
            <summary>
            New margin amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesPositionMarginResult.Code">
            <summary>
            Request response code
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesPositionMarginResult.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesPositionMarginResult.MaxNotionalValue">
            <summary>
            Maximum margin value
            NOTE: string type, because the value van be 'inf' (infinite)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesPositionMarginResult.Type">
            <summary>
            Direction of the requested margin change
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesPositionMode">
            <summary>
            User's position mode
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesPositionMode.IsHedgeMode">
            <summary>
            true": Hedge Mode mode; "false": One-way Mode
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesQuantileEstimation">
            <summary>
            Quantile estimation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesQuantileEstimation.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesQuantileEstimation.AdlQuantile">
            <summary>
            Quantile
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAdlQuantile">
            <summary>
            Quantile info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAdlQuantile.Long">
            <summary>
            Long position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAdlQuantile.Short">
            <summary>
            Short position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAdlQuantile.Hedge">
            <summary>
            Hedge
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesAdlQuantile.Both">
            <summary>
            Hedge
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesQuoteResult">
            <summary>
            Convert quote result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesQuoteResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesQuoteResult.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesQuoteResult.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol">
            <summary>
            Information about a futures symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.Filters">
            <summary>
            Filters for order on this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.MaintMarginPercent">
            <summary>
            The maintenance margin percent
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.PricePrecision">
            <summary>
            The price Precision
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.QuantityPrecision">
            <summary>
            The quantity precision
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.RequiredMarginPercent">
            <summary>
            The required margin percentage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.BaseAsset">
            <summary>
            The base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.QuoteAsset">
            <summary>
            The quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.BaseAssetPrecision">
            <summary>
            The precision of the base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.QuoteAssetPrecision">
            <summary>
            The precision of the quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.OrderTypes">
            <summary>
            Allowed order types
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.Name">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.DeliveryDate">
            <summary>
            Delivery Date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.ListingDate">
            <summary>
            Delivery Date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.TriggerProtect">
            <summary>
            Trigger protect
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.UnderlyingType">
            <summary>
            Currently Empty
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.UnderlyingSubType">
            <summary>
            Sub types
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.LiquidationFee">
            <summary>
            Liquidation fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.MarketTakeBound">
            <summary>
            The max price difference rate (from mark price) a market order can make
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.TimeInForce">
            <summary>
            Allowed order time in force
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.PriceFilter">
            <summary>
            Filter for the max accuracy of the price for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.LotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.MarketLotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol, specifically for market orders
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.MaxOrdersFilter">
            <summary>
            Filter for max number of orders for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.MaxAlgoOrdersFilter">
            <summary>
            Filter for max number of orders for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.PricePercentFilter">
            <summary>
            Filter for the maximum deviation of the price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbol.MinNotionalFilter">
            <summary>
            Filter for the maximum deviation of the price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtSymbol">
            <summary>
            Information about a futures symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtSymbol.Status">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtSymbol.SettlePlan">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinSymbol">
            <summary>
            Information about a futures symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinSymbol.Status">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinSymbol.ContractSize">
            <summary>
            Contract size
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinSymbol.EqualQuantityPrecision">
            <summary>
            Equal quantity precision
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbolBracket">
            <summary>
            Notional and Leverage Brackets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbolBracket.Symbol">
            <summary>
            Symbol or pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbolBracket.NotionalCoef">
            <summary>
            //user symbol bracket multiplier, only appears when user's symbol bracket is adjusted 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesSymbolBracket.Brackets">
            <summary>
            Brackets
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBracket">
            <summary>
            Bracket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBracket.Bracket">
            <summary>
            Bracket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBracket.InitialLeverage">
            <summary>
            Max initial leverage for this bracket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBracket.Cap">
            <summary>
            Cap of this bracket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBracket.Floor">
            <summary>
            Floor of this bracket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBracket.MaintenanceMarginRatio">
            <summary>
            Maintenance ratio for this bracket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesBracket.MaintAmount">
            <summary>
            Auxiliary number for quick calculation 
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Buyer">
            <summary>
            Is buyer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Fee">
            <summary>
            Paid fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.FeeAsset">
            <summary>
            Asset the fee is paid in
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Maker">
            <summary>
            Is maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.RealizedPnl">
            <summary>
            Realized pnl
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtTrade">
            <summary>
            Trade details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtTrade.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinTrade">
            <summary>
            Trade details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinTrade.Pair">
            <summary>
            The pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinTrade.MarginAsset">
            <summary>
            The margin asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesCoinTrade.BaseQuantity">
            <summary>
            Base quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatus">
            <summary>
            Trading rules status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatus.Indicators">
            <summary>
            The trading rule indicators
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatus.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatusIndicator">
            <summary>
            Indicator details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatusIndicator.IsLocked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatusIndicator.PlannedRecoveryTime">
            <summary>
            Planned time when indicator is unlocked
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatusIndicator.Indicator">
            <summary>
            The indicator name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatusIndicator.Value">
            <summary>
            Current value of the indicator
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesTradingStatusIndicator.TriggerValue">
            <summary>
            The trigger value of the indicator
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtAsset.Asset">
            <summary>
            Name of the asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtAsset.MarginAvailable">
            <summary>
            Whether the asset can be used as margin in Multi-Assets mode
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtAsset.AutoAssetExchange">
            <summary>
            Auto-exchange threshold in Multi-Assets margin mode
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtKline">
            <summary>
            Candlestick information for symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtKline.Volume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtKline.QuoteVolume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtKline.TakerBuyBaseVolume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitFuturesUsdtKline.TakerBuyQuoteVolume">
            <inheritdoc/>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitPositionBase">
            <summary>
            Base position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionBase.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionBase.EntryPrice">
            <summary>
            Entry price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionBase.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionBase.UnrealizedPnl">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionBase.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoBase">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoBase.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoBase.MaintMargin">
            <summary>
            Maint margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoBase.PositionInitialMargin">
            <summary>
            Position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoBase.OpenOrderInitialMargin">
            <summary>
            Open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoBase.Isolated">
            <summary>
            Isolated
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoBase.Quantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoBase.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoUsdt">
            <summary>
            Usdt position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoUsdt.MaxNotional">
            <summary>
            Max notional
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoCoin">
            <summary>
            Coin position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoCoin.BreakEvenPrice">
            <summary>
            Break even price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionInfoCoin.MaxQuantity">
            <summary>
            Max quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase">
            <summary>
            Base position details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase.MarginType">
            <summary>
            Margin type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase.IsAutoAddMargin">
            <summary>
            Is auto add margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase.Quantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase.BreakEvenPrice">
            <summary>
            Break even price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsBase.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsUsdt">
            <summary>
            Usdt position details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsUsdt.MaxNotional">
            <summary>
            Max notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsUsdt.Notional">
            <summary>
            Notional value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsUsdt.IsolatedWallet">
            <summary>
            Isolated wallet
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsCoin">
            <summary>
            Coin position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsCoin.NotionalValue">
            <summary>
            Notional value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionDetailsCoin.MaxQuantity">
            <summary>
            Max quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3">
            <summary>
            Position information
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.PositionAmt">
            <summary>
            Position amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.EntryPrice">
            <summary>
            Entry price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.BreakEvenPrice">
            <summary>
            Break even price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.Notional">
            <summary>
            Notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.IsolatedWallet">
            <summary>
            Isolated wallet
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.PositionInitialMargin">
            <summary>
            Position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.OpenOrderInitialMargin">
            <summary>
            Open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.Adl">
            <summary>
            Auto deleverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.BidNotional">
            <summary>
            Bid notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.AskNotional">
            <summary>
            Ask notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.MaxNotionalValue">
            <summary>
            Max notional value of the position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.MarginType">
            <summary>
            Max notional value of the position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitPositionV3.IsAutoAddMargin">
            <summary>
            Is auto add margin enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.HitoBitSymbolConfiguration">
            <summary>
            Symbol configuration
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitSymbolConfiguration.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitSymbolConfiguration.MarginType">
            <summary>
            Margin type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitSymbolConfiguration.IsAutoAddMargin">
            <summary>
            Is auto add margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitSymbolConfiguration.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.HitoBitSymbolConfiguration.MaxNotionalValue">
            <summary>
            Max notional value
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerRejectUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerRejectUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerRejectUpdate.RejectInfo">
            <summary>
            Reject info
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerReject">
            <summary>
            Reject info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerReject.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerReject.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerReject.Reason">
            <summary>
            Reject reason
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate">
            <summary>
            Account update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate.UpdateData">
            <summary>
            The update data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdateData">
            <summary>
            Account update data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdateData.Reason">
            <summary>
            Account update reason type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdateData.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdateData.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBalance">
            <summary>
            Information about an asset balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBalance.WalletBalance">
            <summary>
            The quantity that isn't locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBalance.CrossWalletBalance">
            <summary>
            The quantity that is locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBalance.BalanceChange">
            <summary>
            The balance change except PnL and commission
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition">
            <summary>
            Information about an asset position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.Symbol">
            <summary>
            The symbol this balance is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.Quantity">
            <summary>
            The quantity of the position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.EntryPrice">
            <summary>
            The entry price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.BreakEvenPrice">
            <summary>
            The break even price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.RealizedPnl">
            <summary>
            The accumulated realized PnL
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.UnrealizedPnl">
            <summary>
            The Unrealized PnL
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.MarginType">
            <summary>
            The margin type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.IsolatedMargin">
            <summary>
            The isolated wallet (if isolated position)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamPosition.PositionSide">
            <summary>
            Position Side
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate">
            <summary>
            Futures stream symbol update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.BidBuffer">
            <summary>
            Bid buffer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.AskBuffer">
            <summary>
            Ask buffer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.BidRate">
            <summary>
            Bid rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.AskRate">
            <summary>
            Ask rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.AutoExchangeBidBuffer">
            <summary>
            Auto exchange bid buffer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.AutoExchangeAskBuffer">
            <summary>
            Auto exchange ask buffer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.AutoExchangeBidRate">
            <summary>
            Auto exchange bid rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAssetIndexUpdate.AutoExchangeAskRate">
            <summary>
            Auto exchange ask rate
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice">
            <summary>
            Futures book price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice.TransactionTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice.EventTime">
            <summary>
            The time the event happened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamBookPrice.Event">
            <summary>
            The type of the event
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKlineData">
            <summary>
            Wrapper for kline information for a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKlineData.Symbol">
            <summary>
            The symbol the data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKlineData.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline">
            <summary>
            The kline data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.OpenTime">
            <summary>
            The open time of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.Volume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.QuoteVolume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.Symbol">
            <summary>
            The symbol this candlestick is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.Interval">
            <summary>
            The interval of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.FirstTrade">
            <summary>
            The first trade id in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.LastTrade">
            <summary>
            The last trade id in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.OpenPrice">
            <summary>
            The open price of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.ClosePrice">
            <summary>
            The close price of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.HighPrice">
            <summary>
            The highest price of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.LowPrice">
            <summary>
            The lowest price of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.TradeCount">
            <summary>
            The amount of trades in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.TakerBuyBaseVolume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.TakerBuyQuoteVolume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.Final">
            <summary>
            Boolean indicating whether this candlestick is closed
            </summary>
        </member>
        <member name="M:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCoinKline.ToKline">
            <summary>
            Casts this object to a <see cref="T:HitoBit.Net.Objects.Models.Spot.HitoBitSpotKline"/> object
            </summary>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndex">
            <summary>
            Composite index info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndex.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndex.Price">
            <summary>
            The price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndex.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndex.Composition">
            <summary>
            Composition
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndexAsset">
            <summary>
            Composite index asset info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndexAsset.Asset">
            <summary>
            Base asset name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndexAsset.QuoteAsset">
            <summary>
            Quote asset name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndexAsset.WeightInQuantity">
            <summary>
            Weight in quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndexAsset.WeightInPercentage">
            <summary>
            Weight in percentage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamCompositeIndexAsset.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate">
            <summary>
            Information about leverage of symbol changed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate.LeverageUpdateData">
            <summary>
            Leverage Update data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate.ConfigUpdateData">
            <summary>
            Position mode Update data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLeverageUpdateData">
            <summary>
            Config update data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLeverageUpdateData.Symbol">
            <summary>
            The symbol this balance is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLeverageUpdateData.Leverage">
            <summary>
            The symbol this leverage is for
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdateData">
            <summary>
            Position mode update data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdateData.MultiAssetMode">
            <summary>
            Multi-Assets Mode
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamContinuousKlineData">
            <summary>
            Wrapper for continuous kline information for a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamContinuousKlineData.Symbol">
            <summary>
            The symbol the data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamContinuousKlineData.ContractType">
            <summary>
            The contract type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamContinuousKlineData.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData">
            <summary>
            Wrapper for kline information for a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData.Symbol">
            <summary>
            The symbol the data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStreamIndexKlineData.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline">
            <summary>
            Index kline
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.CloseTime">
            <summary>
            Close time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Ignore1">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Interval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Ignore2">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Ignore3">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.OpenPrice">
            <summary>
            Open price of the kline
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.ClosePrice">
            <summary>
            Close price of the kline
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.HighPrice">
            <summary>
            High price of the kline
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.LowPrice">
            <summary>
            Low price of the kline
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Ignore4">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.NumberOfBasicData">
            <summary>
            Number of basic data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Closed">
            <summary>
            Is the kline closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Ignore5">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Ignore6">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Ignore7">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexKline.Ignore8">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexPrice">
            <summary>
            Index price update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexPrice.Pair">
            <summary>
            The pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamIndexPrice.IndexPrice">
            <summary>
            The index price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidationData">
            <summary>
            A event received by a HitoBit websocket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidationData.Data">
            <summary>
            The data of the event
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.Side">
            <summary>
            Liquidation Sided
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.Type">
            <summary>
            Liquidation order type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.TimeInForce">
            <summary>
            Liquidation Time in Force
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.Quantity">
            <summary>
            Liquidation Original Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.Price">
            <summary>
            Liquidation order price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.AveragePrice">
            <summary>
            Liquidation Average Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.Status">
            <summary>
            Liquidation Order Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.LastQuantityFilled">
            <summary>
            Liquidation Last Filled Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.QuantityFilled">
            <summary>
            Liquidation Accumulated fill quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamLiquidation.Timestamp">
            <summary>
            Liquidation Trade Time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate">
            <summary>
            Margin update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate.CrossWalletBalance">
            <summary>
            Cross Wallet Balance. Only pushed with crossed position margin call
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition">
            <summary>
            Update data about an margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition.PositionSide">
            <summary>
            Position Side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition.PositionQuantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition.MarginType">
            <summary>
            Margin type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition.IsolatedWallet">
            <summary>
            Isolated Wallet (if isolated position)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition.MarkPrice">
            <summary>
            Mark Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition.UnrealizedPnl">
            <summary>
            Unrealized PnL
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginPosition.MaintMargin">
            <summary>
            Maintenance Margin Required
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarkPrice">
            <summary>
            Mark price update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarkPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarkPrice.MarkPrice">
            <summary>
            Mark Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarkPrice.EstimatedSettlePrice">
            <summary>
            Estimated Settle Price, only useful in the last hour before the settlement starts
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarkPrice.FundingRate">
            <summary>
            Next Funding Rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarkPrice.NextFundingTime">
            <summary>
            Next Funding Time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesUsdtStreamMarkPrice">
            <summary>
            Mark price update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesUsdtStreamMarkPrice.IndexPrice">
            <summary>
            Mark Price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice">
            <summary>
            Mark price update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice.EstimatedSettlePrice">
            <summary>
            Mark Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesCoinStreamMarkPrice.IndexPrice">
            <summary>
            Mark Price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderBookDepth">
            <summary>
            The order book for a asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderBookDepth.Symbol">
            <summary>
            The symbol of the order book (only filled from stream updates)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderBookDepth.TransactionTime">
            <summary>
            The time the event happened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderBookDepth.FirstUpdateId">
            <summary>
            The ID of the first update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderBookDepth.LastUpdateId">
            <summary>
            The ID of the last update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderBookDepth.LastUpdateIdStream">
            <summary>
            The ID of the last update Id in last stream
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderBookDepth.Bids">
            <summary>
            The list of diff bids
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderBookDepth.Asks">
            <summary>
            The list of diff asks
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate.UpdateData">
            <summary>
            Update data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData">
            <summary>
            Update data about an order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.ClientOrderId">
            <summary>
            The new client order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.TimeInForce">
            <summary>
            The timespan the order is active
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.AveragePrice">
            <summary>
            The average price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.StopPrice">
            <summary>
            The stop price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.ExecutionType">
            <summary>
            The execution type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.OrderId">
            <summary>
            The id of the order as assigned by HitoBit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.QuantityOfLastFilledTrade">
            <summary>
            The quantity of the last filled trade of this order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.AccumulatedQuantityOfFilledTrades">
            <summary>
            The quantity of all trades that were filled for this order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.PriceLastFilledTrade">
            <summary>
            The price of the last filled trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.Fee">
            <summary>
            The fee payed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.FeeAsset">
            <summary>
            The asset the fee was taken from
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.UpdateTime">
            <summary>
            The time of the update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.TradeId">
            <summary>
            The trade id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.BidNotional">
            <summary>
            Bid Notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.AskNotional">
            <summary>
            Ask Notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.BuyerIsMaker">
            <summary>
            Whether the buyer is the maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.IsReduce">
            <summary>
            Is this reduce only
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.StopPriceWorking">
            <summary>
            Stop price working type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.OriginalType">
            <summary>
            Original Order Type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.PushedConditionalOrder">
            <summary>
            If Close-All, only pushed with conditional order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.ActivationPrice">
            <summary>
            Activation Price, only pushed with TRAILING_STOP_MARKET order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.CallbackRate">
            <summary>
            Callback Rate, only pushed with TRAILING_STOP_MARKET order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.RealizedProfit">
            <summary>
            Realized profit of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.PriceProtection">
            <summary>
            Is price protection enable
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.SelfTradePrevention">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.PriceMatchMode">
            <summary>
            Price match mode
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdateData.GoodTillDate">
            <summary>
            The GoodTillDate if GTD time in force
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate">
            <summary>
            Futures stream symbol update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate.DeliveryDate">
            <summary>
            Delivery date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate.OnboardDate">
            <summary>
            Onboard date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate.Status">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamSymbolUpdate.Brackets">
            <summary>
            Brackets
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitBracketUpdate">
            <summary>
            Bracket update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitBracketUpdate.NotionalBracket">
            <summary>
            Notional bracket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitBracketUpdate.FloorNotional">
            <summary>
            Floor notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitBracketUpdate.MaxNotional">
            <summary>
            Max notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitBracketUpdate.MaintenanceRatio">
            <summary>
            Maintenance ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitBracketUpdate.MinLeverage">
            <summary>
            Min leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitBracketUpdate.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitBracketUpdate.Auxiliary">
            <summary>
            Auxiliary number for quick calculation
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate">
            <summary>
            Update data about a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.BuyerIsMaker">
            <summary>
            Whether the buyer is the maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.ClientOrderId">
            <summary>
            The new client order id
            </summary>
            <remarks>
            special client order id:
                starts with "autoclose-": liquidation order
                "adl_autoclose": ADL auto close order
                "settlement_autoclose-": settlement order for delisting or delivery
            </remarks>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.PriceLastFilledTrade">
            <summary>
            The price of the last filled trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.QuantityOfLastFilledTrade">
            <summary>
            The quantity of the last filled trade of this order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.TradeId">
            <summary>
            The trade id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate.OrderId">
            <summary>
            The id of the order as assigned by HitoBit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate">
            <summary>
            Strategy update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate.GridUpdate">
            <summary>
            Update info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo">
            <summary>
            Strategy update info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.StrategyId">
            <summary>
            The strategy id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.StrategyType">
            <summary>
            Strategy type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.StrategyStatus">
            <summary>
            Stategy status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.UnmatchedAveragePrice">
            <summary>
            Unmatched average price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.UnmatchedQuantity">
            <summary>
            Unmatched quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.UnmatchedFee">
            <summary>
            Unmatched fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridInfo.MatchedPnl">
            <summary>
            Matched profit and loss
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate">
            <summary>
            Strategy update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate.StrategyUpdate">
            <summary>
            Update info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyInfo">
            <summary>
            Strategy update info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyInfo.StrategyId">
            <summary>
            The strategy id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyInfo.StrategyType">
            <summary>
            Strategy type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyInfo.StrategyStatus">
            <summary>
            Stategy status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyInfo.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyInfo.OpCode">
            <summary>
            Op code
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBit24HPriceBase">
            <summary>
            24 hour rolling window price data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.Symbol">
            <summary>
            The symbol the price is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.PriceChange">
            <summary>
            The actual price change in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.PriceChangePercent">
            <summary>
            The price change in percentage in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.WeightedAveragePrice">
            <summary>
            The weighted average price in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.LastPrice">
            <summary>
            The most recent trade price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.LastQuantity">
            <summary>
            The most recent trade quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.OpenPrice">
            <summary>
            The open price 24 hours ago
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.HighPrice">
            <summary>
            The highest price in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.LowPrice">
            <summary>
            The lowest price in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.Volume">
            <summary>
            The base volume traded in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.QuoteVolume">
            <summary>
            The quote asset volume traded in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.OpenTime">
            <summary>
            Time at which this 24 hours opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.CloseTime">
            <summary>
            Time at which this 24 hours closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.FirstTradeId">
            <summary>
            The first trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.LastTradeId">
            <summary>
            The last trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBit24HPriceBase.TotalTrades">
            <summary>
            The amount of trades made in the last 24 hours
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitCombinedStream`1">
            <summary>
            Represents the hitobit result for combined data on a single socket connection
            See on https://github.com/hitobit-exchange/hitobit-official-api-docs/blob/master/web-socket-streams.md
            Combined streams
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitCombinedStream`1.Stream">
            <summary>
            The stream combined
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitCombinedStream`1.Data">
            <summary>
            The data of stream
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitKlineBase">
            <summary>
            Candlestick information for symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.OpenTime">
            <summary>
            The time this candlestick opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.OpenPrice">
            <summary>
            The price at which this candlestick opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.HighPrice">
            <summary>
            The highest price in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.LowPrice">
            <summary>
            The lowest price in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.ClosePrice">
            <summary>
            The price at which this candlestick closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.Volume">
            <summary>
            The volume traded during this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.QuoteVolume">
            <summary>
            The volume traded during this candlestick in the asset form
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.TradeCount">
            <summary>
            The amount of trades in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.TakerBuyBaseVolume">
            <summary>
            Taker buy base asset volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitKlineBase.TakerBuyQuoteVolume">
            <summary>
            Taker buy quote asset volume
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitOrderBase">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.Id">
            <summary>
            The order id generated by HitoBit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.OrderListId">
            <summary>
            Id of the order list this order belongs to
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.OriginalClientOrderId">
            <summary>
            Original order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.ClientOrderId">
            <summary>
            The order id as assigned by the client
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.Quantity">
            <summary>
            The original quantity of the order, as specified in the order parameters by the user
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.QuantityFilled">
            <summary>
            The currently executed quantity of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.QuoteQuantityFilled">
            <summary>
            The currently executed amount of quote asset. Amounts to Sum(quantity * price) of executed trades for this order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.QuoteQuantity">
            <summary>
            The original quote order quantity of the order, as specified in the order parameters by the user
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.TimeInForce">
            <summary>
            How long the order is active
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.StopPrice">
            <summary>
            The stop price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.IcebergQuantity">
            <summary>
            The iceberg quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.CreateTime">
            <summary>
            The time the order was submitted
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.UpdateTime">
            <summary>
            The time the order was last updated
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.TransactTime">
            <summary>
            The time the transaction was executed (when canceling order)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.WorkingTime">
            <summary>
            When the order started working
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.IsWorking">
            <summary>
            Is working
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.IsIsolated">
            <summary>
            If isolated margin (for margin account orders)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.QuantityRemaining">
            <summary>
            Quantity which is still open to be filled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.AverageFillPrice">
            <summary>
            The average price the order was filled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBase.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitOrderBookEntry">
            <summary>
            An entry in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBookEntry.Price">
            <summary>
            The price of this order book entry
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitOrderBookEntry.Quantity">
            <summary>
            The quantity of this price in the order book
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitQueryRecords`1">
            <summary>
            Query results
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitQueryRecords`1.Rows">
            <summary>
            The list records
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitQueryRecords`1.Total">
            <summary>
            The total count of the records
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitRateLimit">
            <summary>
            Rate limit info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitRateLimit.Interval">
            <summary>
            The interval the rate limit uses to count
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitRateLimit.Type">
            <summary>
            The type the rate limit applies to
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitRateLimit.IntervalNumber">
            <summary>
            The amount of calls the limit is
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitRateLimit.Limit">
            <summary>
            The amount of calls the limit is
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitResult">
            <summary>
            Query result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitResult.Code">
            <summary>
            Result code
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitResult.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitResult`1">
            <summary>
            Query result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitResult`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick">
            <summary>
            Rolling window tick info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.Symbol">
            <summary>
            The symbol this data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.LastPrice">
            <summary>
            The current close price. This is the latest price for this symbol.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.OpenPrice">
            <summary>
            Tick open price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.HighPrice">
            <summary>
            Tick high price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.LowPrice">
            <summary>
            Tick low price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.FirstTradeId">
            <summary>
            The first trade id of the tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.LastTradeId">
            <summary>
            The last trade id of the tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.TotalTrades">
            <summary>
            The total trades of id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.OpenTime">
            <summary>
            The open time of these stats
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.CloseTime">
            <summary>
            The close time of these stats
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitRollingWindowTick.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade">
            <summary>
            Aggregated information about trades for a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.Symbol">
            <summary>
            The symbol the trade was for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.Id">
            <summary>
            The id of this aggregated trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.Price">
            <summary>
            The price of the trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.Quantity">
            <summary>
            The combined quantity of the trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.FirstTradeId">
            <summary>
            The first trade id in this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.LastTradeId">
            <summary>
            The last trade id in this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.TradeTime">
            <summary>
            The time of the trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamAggregatedTrade.Ignore">
            <summary>
            Unused
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate">
            <summary>
            Update when asset is withdrawn/deposited 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate.Asset">
            <summary>
            The asset which changed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate.BalanceDelta">
            <summary>
            The balance delta
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate.ClearTime">
            <summary>
            The time the deposit/withdrawal was cleared
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice">
            <summary>
            Book tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice.UpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice.BestBidPrice">
            <summary>
            Price of the best bid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice.BestBidQuantity">
            <summary>
            Quantity of the best bid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice.BestAskPrice">
            <summary>
            Price of the best ask
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBookPrice.BestAskQuantity">
            <summary>
            Quantity of the best ask
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData">
            <summary>
            Wrapper for kline information for a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData.Symbol">
            <summary>
            The symbol the data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKlineData.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline">
            <summary>
            The kline data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.OpenTime">
            <summary>
            The open time of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.Volume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.QuoteVolume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.Symbol">
            <summary>
            The symbol this candlestick is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.Interval">
            <summary>
            The interval of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.FirstTrade">
            <summary>
            The first trade id in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.LastTrade">
            <summary>
            The last trade id in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.OpenPrice">
            <summary>
            The open price of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.ClosePrice">
            <summary>
            The close price of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.HighPrice">
            <summary>
            The highest price of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.LowPrice">
            <summary>
            The lowest price of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.TradeCount">
            <summary>
            The amount of trades in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.TakerBuyBaseVolume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.TakerBuyQuoteVolume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.Final">
            <summary>
            Boolean indicating whether this candlestick is closed
            </summary>
        </member>
        <member name="M:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamKline.ToKline">
            <summary>
            Casts this object to a <see cref="T:HitoBit.Net.Objects.Models.Spot.HitoBitSpotKline"/> object
            </summary>
            <returns></returns>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTickBase">
            <summary>
            MiniTick info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTickBase.Symbol">
            <summary>
            The symbol this data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTickBase.LastPrice">
            <summary>
            The current day close price. This is the latest price for this symbol.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTickBase.OpenPrice">
            <summary>
            Todays open price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTickBase.HighPrice">
            <summary>
            Todays high price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTickBase.LowPrice">
            <summary>
            Todays low price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTickBase.Volume">
            <summary>
            Total traded volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTickBase.QuoteVolume">
            <summary>
            Total traded quote volume
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTick">
            <summary>
            Stream mini tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTick.Volume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamMiniTick.QuoteVolume">
            <inheritdoc/>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamCoinMiniTick">
            <summary>
            Stream mini tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamCoinMiniTick.Volume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamCoinMiniTick.QuoteVolume">
            <inheritdoc/>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamCoinMiniTick.Pair">
            <summary>
            The pair
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList">
            <summary>
            Order list info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.Id">
            <summary>
            The id of the order list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.ContingencyType">
            <summary>
            The contingency type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.ListStatusType">
            <summary>
            The order list status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.ListOrderStatus">
            <summary>
            The order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.ListRejectReason">
            <summary>
            Rejection reason
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.ListClientOrderId">
            <summary>
            The client id of the order list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.TransactionTime">
            <summary>
            The transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.Symbol">
            <summary>
            The symbol of the order list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.Orders">
            <summary>
            The order in this list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderId">
            <summary>
            Order reference
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderId.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderId.OrderId">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderId.ClientOrderId">
            <summary>
            The client order id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate">
            <summary>
            Update data about an order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.Id">
            <summary>
            The id of the order as assigned by HitoBit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.ClientOrderId">
            <summary>
            The new client order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.TimeInForce">
            <summary>
            The timespan the order is active
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.StopPrice">
            <summary>
            The stop price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.TrailingDelta">
            <summary>
            The trailing delta of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.TrailingTime">
            <summary>
            Trailing Time; This is only visible if the trailing stop order has been activated.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.IcebergQuantity">
            <summary>
            The iceberg quantity of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.OriginalClientOrderId">
            <summary>
            The original client order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.ExecutionType">
            <summary>
            The execution type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.RejectReason">
            <summary>
            The reason the order was rejected
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.LastQuantityFilled">
            <summary>
            The quantity of the last filled trade of this order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.QuantityFilled">
            <summary>
            The quantity of all trades that were filled for this order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.LastPriceFilled">
            <summary>
            The price of the last filled trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.Fee">
            <summary>
            The fee payed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.FeeAsset">
            <summary>
            The asset the fee was taken from
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.UpdateTime">
            <summary>
            The time of the update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.TradeId">
            <summary>
            The trade id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.IsWorking">
            <summary>
            Is working
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.BuyerIsMaker">
            <summary>
            Whether the buyer is the maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.CreateTime">
            <summary>
            Time the order was created
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.QuoteQuantityFilled">
            <summary>
            Cummulative quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.QuoteQuantity">
            <summary>
            Quote order quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.LastQuoteQuantity">
            <summary>
            Last quote asset transacted quantity (i.e. LastPrice * LastQuantity)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.OrderListId">
            <summary>
            This id of the corresponding order list. (-1 if not part of an order list)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.ListenKey">
            <summary>
            The listen key for which the update was
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.I">
            <summary>
            Unused
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.M">
            <summary>
            Unused
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.TradeGroupId">
            <summary>
            Trade group id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.PreventedMatchId">
            <summary>
            Prevented match id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.CounterOrderId">
            <summary>
            Counter order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.PreventedQuantity">
            <summary>
            Prevented quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.LastPreventedQuantity">
            <summary>
            Last prevented quantiy
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.SelfTradePreventionMode">
            <summary>
            Prevented match id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate.WorkingTime">
            <summary>
            Working time; when it entered the order book
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamPositionsUpdate">
            <summary>
            Positions update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamPositionsUpdate.Timestamp">
            <summary>
            Time of last account update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamPositionsUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamPositionsUpdate.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalance">
            <summary>
            Information about an asset balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalance.Available">
            <summary>
            The quantity that isn't locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalance.Locked">
            <summary>
            The quantity that is currently locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalance.Total">
            <summary>
            The total balance of this asset (Free + Locked)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick">
            <summary>
            Rolling window tick info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.Symbol">
            <summary>
            The symbol this data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.PriceChange">
            <summary>
            The price change of this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.PriceChangePercent">
            <summary>
            The price change percentage of this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.WeightedAveragePrice">
            <summary>
            The weighted average
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.LastPrice">
            <summary>
            The current close price. This is the latest price for this symbol.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.OpenPrice">
            <summary>
            Tick open price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.HighPrice">
            <summary>
            Tick high price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.LowPrice">
            <summary>
            Tick low price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.FirstTradeId">
            <summary>
            The first trade id of the tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.LastTradeId">
            <summary>
            The last trade id of the tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.TotalTrades">
            <summary>
            The total trades of id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.OpenTime">
            <summary>
            The open time of these stats
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.CloseTime">
            <summary>
            The close time of these stats
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamRollingWindowTick.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase">
            <summary>
            Tick info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.Symbol">
            <summary>
            The symbol this data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.PriceChange">
            <summary>
            The price change of this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.PriceChangePercent">
            <summary>
            The price change percentage of this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.WeightedAveragePrice">
            <summary>
            The weighted average
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.PrevDayClosePrice">
            <summary>
            The close price of the previous day
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.LastPrice">
            <summary>
            The current day close price. This is the latest price for this symbol.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.LastQuantity">
            <summary>
            The most recent trade quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.BestBidPrice">
            <summary>
            The best bid price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.BestBidQuantity">
            <summary>
            The quantity of the best bid price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.BestAskPrice">
            <summary>
            The best ask price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.BestAskQuantity">
            <summary>
            The quantity of the best ask price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.OpenPrice">
            <summary>
            Todays open price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.HighPrice">
            <summary>
            Todays high price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.LowPrice">
            <summary>
            Todays low price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.Volume">
            <summary>
            Total traded volume in the base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.QuoteVolume">
            <summary>
            Total traded volume in the quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.FirstTradeId">
            <summary>
            The first trade id of today
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.LastTradeId">
            <summary>
            The last trade id of today
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.TotalTrades">
            <summary>
            The total trades of id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.OpenTime">
            <summary>
            The open time of these stats
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTickBase.CloseTime">
            <summary>
            The close time of these stats
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTick">
            <summary>
            Stream tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTick.Volume">
            <summary>
            Total traded volume in the base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTick.QuoteVolume">
            <summary>
            Total traded volume in the quote asset
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamCoinTick">
            <summary>
            Stream tick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamCoinTick.Volume">
            <summary>
            Total traded volume in the base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamCoinTick.QuoteVolume">
            <summary>
            Total traded volume in the quote asset
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade">
            <summary>
            Aggregated information about trades for a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.Symbol">
            <summary>
            The symbol the trade was for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.Id">
            <summary>
            The id of this trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.Price">
            <summary>
            The price of the trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.Quantity">
            <summary>
            The quantity of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.BuyerOrderId">
            <summary>
            The buyer order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.SellerOrderId">
            <summary>
            The sell order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.TradeTime">
            <summary>
            The time of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.IsBestMatch">
            <summary>
            Unused
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamTrade.Type">
            <summary>
            Update type
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestAssets">
            <summary>
            Auto invest assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestAssets.TargetAssets">
            <summary>
            Target assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestAssets.SourceAssets">
            <summary>
            Source assets
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestEditResult">
            <summary>
            Edit result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestEditResult.PlanId">
            <summary>
            Plan id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestEditResult.NextExecutionTime">
            <summary>
            Next execution date time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestEditStatusResult">
            <summary>
            Edit result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestEditStatusResult.PlanId">
            <summary>
            Plan id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestEditStatusResult.NextExecutionTime">
            <summary>
            Next execution date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestEditStatusResult.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndex">
            <summary>
            Auto invest index info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndex.IndexId">
            <summary>
            Index id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndex.IndexName">
            <summary>
            Index name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndex.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndex.AssetAllocation">
            <summary>
            Asset allocation
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexSUB">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexSUB.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexSUB.Allocation">
            <summary>
            Allocation
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPosition">
            <summary>
            Plan position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPosition.IndexId">
            <summary>
            Index id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPosition.TotalInvestedInUsd">
            <summary>
            Total invested in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPosition.CurrentInvestedInUsd">
            <summary>
            Current invested in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPosition.PnlInUsd">
            <summary>
            Pnl in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPosition.Roi">
            <summary>
            Roi
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPosition.AssetAllocation">
            <summary>
            Asset allocation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPosition.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionAllocation">
            <summary>
            Asset allocation info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionAllocation.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionAllocation.Allocation">
            <summary>
            Allocation percentage
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails">
            <summary>
            Position details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.AveragePriceInUsd">
            <summary>
            Average price in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.TotalInvestedInUsd">
            <summary>
            Total invested in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.CurrentInvestedInUsd">
            <summary>
            Current invested in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.PurchasedQuantity">
            <summary>
            Purchased quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.PnlInUsd">
            <summary>
            Pnl in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.Roi">
            <summary>
            Roi
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.Percentage">
            <summary>
            Percentage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.AvailableQuantity">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.RedeemedQuantity">
            <summary>
            Redeemed quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestIndexPlanPositionDetails.AssetValueInUsd">
            <summary>
            Asset value in USD
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestOneTimeTransactionStatus">
            <summary>
            Transaction status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestOneTimeTransactionStatus.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestOneTimeTransactionStatus.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlan">
            <summary>
            Invest plan info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlan.PlanValueInUsd">
            <summary>
            Plan value in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlan.PlanValueInBtc">
            <summary>
            Plan value in BTC
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlan.PnlInUsd">
            <summary>
            Profit and loss in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlan.Roi">
            <summary>
            Roi
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlan.Plans">
            <summary>
            Plans
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails">
            <summary>
            Plan info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.PlanId">
            <summary>
            Plan id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.EditAllowed">
            <summary>
            Edit allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.CreateTime">
            <summary>
            Creation date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.FirstExecutionTime">
            <summary>
            First execution date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.NextExecutionTime">
            <summary>
            Next execution date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.LastUpdateTime">
            <summary>
            Last updated date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.TotalTargetQuantity">
            <summary>
            Total target quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.SourceAsset">
            <summary>
            Source asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.TotalInvestedInUsd">
            <summary>
            Total invested in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.SubscriptionQuantity">
            <summary>
            Subscription quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.SubscriptionCycle">
            <summary>
            Subscription cycle
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.SubscriptionStartDay">
            <summary>
            Subscription start day
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.SubscriptionStartWeekday">
            <summary>
            Subscription start weekday
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.SubscriptionStartTime">
            <summary>
            Subscription start time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.SourceWallet">
            <summary>
            Source wallet
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.FlexibleAllowedToUse">
            <summary>
            Flexible allowed to use
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.PlanValueInUsd">
            <summary>
            Plan value in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.PnlInUsd">
            <summary>
            Pnl in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanDetails.Roi">
            <summary>
            Roi
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings">
            <summary>
            Plan holdings
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.PlanId">
            <summary>
            Plan id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.EditAllowed">
            <summary>
            Edit allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.FlexibleAllowedToUse">
            <summary>
            Flexible allowed to use
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.CreateTime">
            <summary>
            Creation date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.FirstExecutionTime">
            <summary>
            First execution date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.NextExecutionTime">
            <summary>
            Next execution date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.SourceAsset">
            <summary>
            Source asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.PlanValueInUsd">
            <summary>
            Plan value in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.PnlInUsd">
            <summary>
            Pnl in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.Roi">
            <summary>
            Roi
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.TotalInvestedInUsd">
            <summary>
            Total invested in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldings.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails">
            <summary>
            Holding details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.AveragePriceInUsd">
            <summary>
            Average price in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.TotalInvestedInUsd">
            <summary>
            Total invested in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.PurchasedQuantity">
            <summary>
            Purchased quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.PurchasedQuantityAsset">
            <summary>
            Purchased quantity asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.PnlInUsd">
            <summary>
            Pnl in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.Roi">
            <summary>
            Roi
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.Percentage">
            <summary>
            Percentage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.AssetStatus">
            <summary>
            Asset status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.AvailableQuantity">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.AvailableQuantityUnit">
            <summary>
            Available quantity unit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.RedeemedAmout">
            <summary>
            Redeemed amout
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.RedeemedAmoutAsset">
            <summary>
            Redeemed amout asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanHoldingDetails.AssetValueInUsd">
            <summary>
            Asset value in USD
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransactions">
            <summary>
            Transactions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransactions.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransactions.List">
            <summary>
            Results
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction">
            <summary>
            Plan transaction info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.PlanName">
            <summary>
            Plan name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.PlanId">
            <summary>
            Plan id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.TransactionStatus">
            <summary>
            Transaction status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.FailedType">
            <summary>
            Failed type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.SourceAsset">
            <summary>
            Source asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.SourceAssetQuantity">
            <summary>
            Source asset quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.TargetAssetQuantity">
            <summary>
            Target asset quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.SourceWallet">
            <summary>
            Source wallet
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.FlexibleUsed">
            <summary>
            Flexible used
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.Fee">
            <summary>
            Transaction fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.FeeAsset">
            <summary>
            Transaction fee unit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.ExecutionPrice">
            <summary>
            Execution price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.ExecutionType">
            <summary>
            Execution type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestPlanTransaction.SubscriptionCycle">
            <summary>
            Subscription cycle
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceInfo">
            <summary>
            Rebalance info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceInfo.IndexId">
            <summary>
            Index id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceInfo.IndexName">
            <summary>
            Index name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceInfo.RebalanceId">
            <summary>
            Rebalance id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceInfo.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceInfo.RebalanceFee">
            <summary>
            Rebalance fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceInfo.RebalanceFeeAsset">
            <summary>
            Rebalance fee unit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceInfo.TransactionDetails">
            <summary>
            Transaction details
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceDetails.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceDetails.TransactionTime">
            <summary>
            Transaction date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceDetails.RebalanceDirection">
            <summary>
            Rebalance direction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRebalanceDetails.RebalanceQuantity">
            <summary>
            Rebalance quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption">
            <summary>
            Redemption info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.IndexId">
            <summary>
            Index id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.IndexName">
            <summary>
            Index name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.RedemptionId">
            <summary>
            Redemption id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.RedeemTime">
            <summary>
            Redemption date time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.Fee">
            <summary>
            Transaction fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemption.FeeAsset">
            <summary>
            Transaction fee unit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemptionResult">
            <summary>
            Redemption result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRedemptionResult.RedemptionId">
            <summary>
            Redemption id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRoi">
            <summary>
            Auto invest ROI
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRoi.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestRoi.SimulateRoi">
            <summary>
            Simulate roi
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssets">
            <summary>
            Auto invest source asset info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssets.FeeRate">
            <summary>
            Fee rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssets.TaxRate">
            <summary>
            Tax rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssets.SourceAssets">
            <summary>
            Source assets
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssetInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssetInfo.SourceAsset">
            <summary>
            Source asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssetInfo.AssetMinQuantity">
            <summary>
            Asset min quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssetInfo.AssetMaxQuantity">
            <summary>
            Asset max quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssetInfo.Scale">
            <summary>
            Scale
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestSourceAssetInfo.FlexibleQuantity">
            <summary>
            Flexible quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAssets">
            <summary>
            Auto invest source asset info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAssets.TargetAssets">
            <summary>
            Target assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAssets.Assets">
            <summary>
            Target asset list
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAsset">
            <summary>
            Auto invest target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAsset.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAsset.Assets">
            <summary>
            Target asset list
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAssetRoi">
            <summary>
            Auto invest target asset roi
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAssetRoi.SimulateRoi">
            <summary>
            Simulate ROI
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAssetRoi.DimensionValue">
            <summary>
            The dimension
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTargetAssetRoi.DimensionUnit">
            <summary>
            The dimension unit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTradeResult">
            <summary>
            Trade result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTradeResult.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.AutoInvest.HitoBitAutoInvestTradeResult.WaitSecond">
            <summary>
            Wait seconds after which the status should be checked
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo">
            <summary>
            Leveraged token info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.TokenName">
            <summary>
            Name of the token
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.Description">
            <summary>
            Description of the token
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.Underlying">
            <summary>
            Underlying asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.TokenIssued">
            <summary>
            Token issued
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.Basket">
            <summary>
            Basket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.Nav">
            <summary>
            Nav
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.RealLeverage">
            <summary>
            Real leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.DailyManagementFee">
            <summary>
            Daily management fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.CurrentBaskets">
            <summary>
            Current baskets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.RedeemFeePercentage">
            <summary>
            Redeem fee percentage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.DailyRedeemLimit">
            <summary>
            Daily redeem limit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.PurchaseFeePercentage">
            <summary>
            Purchase fee percentage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.DailyPurchaseLimit">
            <summary>
            Daily purchase limit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfo.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.BlvtCurrentBasket">
            <summary>
            Basket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.BlvtCurrentBasket.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.BlvtCurrentBasket.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.BlvtCurrentBasket.NotionalValue">
            <summary>
            Notional value
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate">
            <summary>
            Blvt info update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate.TokenName">
            <summary>
            Token name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate.TokenIssued">
            <summary>
            Token issued
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate.Nav">
            <summary>
            Nav
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate.Baskets">
            <summary>
            Baskets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate.RealLeverage">
            <summary>
            Token issued
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate.TargetLeverage">
            <summary>
            Token issued
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtInfoUpdate.FundingRatio">
            <summary>
            Funding ratio
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.BlvtBasket">
            <summary>
            Basket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.BlvtBasket.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.BlvtBasket.Position">
            <summary>
            Position
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline">
            <summary>
            Blvt kline
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline.OpenTime">
            <summary>
            The time this candlestick opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline.OpenPrice">
            <summary>
            The price at which this candlestick opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline.HighPrice">
            <summary>
            The highest price in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline.LowPrice">
            <summary>
            The lowest price in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline.ClosePrice">
            <summary>
            The price at which this candlestick closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline.RealLeverage">
            <summary>
            Real leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline.CloseTime">
            <summary>
            The time this candlestick closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtKline.NavUpdates">
            <summary>
            Number of updates
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedeemResult">
            <summary>
            Redeem result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedeemResult.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedeemResult.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedeemResult.TokenName">
            <summary>
            Name of the token
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedeemResult.Quantity">
            <summary>
            Redemption value in usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedeemResult.RedeemQuantity">
            <summary>
            Redemption token quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedeemResult.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedemption">
            <summary>
            Redemption info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedemption.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedemption.TokenName">
            <summary>
            Token name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedemption.Quantity">
            <summary>
            Redemption quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedemption.Nav">
            <summary>
            NAV price of redemption
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedemption.Fee">
            <summary>
            Redemption fee in usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedemption.NetProceed">
            <summary>
            Net redemption value in usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtRedemption.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscribeResult">
            <summary>
            Subscribe result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscribeResult.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscribeResult.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscribeResult.TokenName">
            <summary>
            Name of the token
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscribeResult.Quantity">
            <summary>
            Subscribed token quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscribeResult.Cost">
            <summary>
            Subscription cost in usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscribeResult.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscription">
            <summary>
            Leveraged token subscription info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscription.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscription.TokenName">
            <summary>
            Token name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscription.Quantity">
            <summary>
            Subscription quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscription.Nav">
            <summary>
            NAV price of subscription
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscription.Fee">
            <summary>
            Subscription fee in usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscription.TotalCharge">
            <summary>
            Subscription cost in usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtSubscription.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtUserLimit">
            <summary>
            Leveraged tokens user limits
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtUserLimit.TokenName">
            <summary>
            Token name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtUserLimit.UserDailyTotalPurchaseLimit">
            <summary>
            Daily purchase limit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Blvt.HitoBitBlvtUserLimit.UserDailyTotalRedeemLimit">
            <summary>
            Daily redeem limit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAccountInfo">
            <summary>
            Account Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAccountInfo.MaxMakerCommission">
            <summary>
            Max Maker Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAccountInfo.MinMakerCommission">
            <summary>
            Min Maker Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAccountInfo.MaxTakerCommission">
            <summary>
            Max Taker Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAccountInfo.MinTakerCommission">
            <summary>
            Min Taker Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAccountInfo.SubAccountQuantity">
            <summary>
            Sub Account Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAccountInfo.MaxSubAccountQuantity">
            <summary>
            Max Sub Account Quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAddIpRestrictionResult">
            <summary>
            Add IP Restriction Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAddIpRestrictionResult.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAddIpRestrictionResult.ApiKey">
            <summary>
            Api key
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAddIpRestrictionResult.Ip">
            <summary>
            IP
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageAddIpRestrictionResult.UpdateDate">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageApiKeyCreateResult">
            <summary>
            Api Key Create Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageApiKeyCreateResult.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageApiKeyCreateResult.ApiKey">
            <summary>
            Api Key
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageApiKeyCreateResult.ApiSecret">
            <summary>
            Api Secret
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageApiKeyCreateResult.IsSpotTradingEnabled">
            <summary>
            Is Spot Trading Enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageApiKeyCreateResult.IsMarginTradingEnabled">
            <summary>
            Is Margin Trading Enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageApiKeyCreateResult.IsFuturesTradingEnabled">
            <summary>
            Is Futures Trading Enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageBnbBurnStatus">
            <summary>
            BNB Burn Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageBnbBurnStatus.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageBnbBurnStatus.IsSpotBnbBurn">
            <summary>
            Is Spot BNB Burn
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageBnbBurnStatus.IsInterestBnbBurn">
            <summary>
            Is Interest BNB Burn
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageChangeBnbBurnMarginInterestResult">
            <summary>
            Enable Or Disable BNB Burn Margin Interest Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageChangeBnbBurnMarginInterestResult.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageChangeBnbBurnMarginInterestResult.IsInterestBnbBurn">
            <summary>
            Is Interest BNB Burn
            </summary> 
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageChangeBnbBurnSpotAndMarginResult">
            <summary>
            Enable Or Disable BNB Burn Spot And Margin Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageChangeBnbBurnSpotAndMarginResult.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageChangeBnbBurnSpotAndMarginResult.IsSpotBnbBurn">
            <summary>
            Is Spot BNB Burn
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableFuturesResult">
            <summary>
            Enable Futures Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableFuturesResult.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableFuturesResult.IsFuturesEnabled">
            <summary>
            Is Futures Enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableFuturesResult.UpdateDate">
            <summary>
            Update Date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableLeverageTokenResult">
            <summary>
            Enable Leverage Token Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableLeverageTokenResult.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableLeverageTokenResult.IsLeverageTokenEnabled">
            <summary>
            Is Leverage Token Enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableMarginResult">
            <summary>
            Enable Margin Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableMarginResult.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableMarginResult.IsMarginEnabled">
            <summary>
            Is Margin Enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageEnableMarginResult.UpdateDate">
            <summary>
            Update Date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesAssetInfo">
            <summary>
            Futures Asset Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesAssetInfo.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesAssetInfo.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo">
            <summary>
            Account Futures Asset Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.IsFuturesEnable">
            <summary>
            Futures enable
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.TotalInitialMarginOfUsdt">
            <summary>
            Total Initial Margin Of Usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.TotalMaintenanceMarginOfUsdt">
            <summary>
            Total Maintenance Margin Of Usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.TotalWalletBalanceOfUsdt">
            <summary>
            Total Wallet Balance Of Usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.TotalUnrealizedProfitOfUsdt">
            <summary>
            Total Unrealized Profit Of Usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.TotalMarginBalanceOfUsdt">
            <summary>
            Total Margin Balance Of Usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.TotalPositionInitialMarginOfUsdt">
            <summary>
            Total Position Initial Margin Of Usdt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesAssetInfo.TotalOpenOrderInitialMarginOfUsdt">
            <summary>
            Total Open Order Initial Margin Of Usdt
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesRebate">
            <summary>
            Futures Commission Rebate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesRebate.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesRebate.Income">
            <summary>
            Income
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesRebate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesRebate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesRebate.TradeId">
            <summary>
            TradeId
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageFuturesRebate.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageIpRestrictionBase">
            <summary>
            IP Restriction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageIpRestrictionBase.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageIpRestrictionBase.ApiKey">
            <summary>
            Api key
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageIpRestrictionBase.IpList">
            <summary>
            IP list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageIpRestrictionBase.UpdateDate">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageIpRestriction">
            <summary>
            IP Restriction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageIpRestriction.IpRestrict">
            <summary>
            Ip Restrict
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageMarginAssetInfo">
            <summary>
            Margin Asset Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageMarginAssetInfo.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageMarginAssetInfo.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountMarginAssetInfo">
            <summary>
            Account Margin Asset Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountMarginAssetInfo.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountMarginAssetInfo.IsMarginEnable">
            <summary>
            Margin enable
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountMarginAssetInfo.TotalAssetOfBtc">
            <summary>
            Total Asset Of Btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountMarginAssetInfo.TotalLiabilityOfBtc">
            <summary>
            Total Liability Of Btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountMarginAssetInfo.TotalNetAssetOfBtc">
            <summary>
            Total Net Asset Of Btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountMarginAssetInfo.MarginLevel">
            <summary>
            Margin level
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageRebate">
            <summary>
            Brokerage Rebate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageRebate.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageRebate.Income">
            <summary>
            Income
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageRebate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageRebate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageRebate.TradeId">
            <summary>
            Trade Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageRebate.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSpotAssetInfo">
            <summary>
            Spot Asset Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSpotAssetInfo.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSpotAssetInfo.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountSpotAssetInfo">
            <summary>
            Account Spot Asset Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountSpotAssetInfo.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountSpotAssetInfo.TotalBalanceOfBtc">
            <summary>
            Total Balance Of Btc
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccount">
            <summary>
            Sub Account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccount.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccount.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccount.CreateDate">
            <summary>
            Create Date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountApiKey">
            <summary>
            Sub Account Api Key
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountApiKey.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountApiKey.ApiKey">
            <summary>
            Api Key
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountApiKey.IsSpotTradingEnabled">
            <summary>
            Is Spot Trading Enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountApiKey.IsMarginTradingEnabled">
            <summary>
            Is Margin Trading Enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountApiKey.IsFuturesTradingEnabled">
            <summary>
            Is Futures Trading Enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCoinFuturesCommission">
            <summary>
            Sub Account Coin Futures Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCoinFuturesCommission.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCoinFuturesCommission.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCoinFuturesCommission.MakerAdjustment">
            <summary>
            COIN-Ⓜ futures commission adjustment for maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCoinFuturesCommission.TakerAdjustment">
            <summary>
            COIN-Ⓜ futures commission adjustment for taker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCoinFuturesCommission.MakerCommission">
            <summary>
            COIN-Ⓜ futures commission (after adjusted) for maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCoinFuturesCommission.TakerCommission">
            <summary>
            COIN-Ⓜ futures commission (after adjusted) for taker
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCommission">
            <summary>
            Sub Account Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCommission.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCommission.MakerCommission">
            <summary>
            Maker Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCommission.TakerCommission">
            <summary>
            Taker Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCommission.MarginMakerCommission">
            <summary>
            Margin Maker Commission
            <para>If margin disabled, return -1</para>
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCommission.MarginTakerCommission">
            <summary>
            Margin Taker Commission
            <para>If margin disabled, return -1</para>
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCreateResult">
            <summary>
            Sub Account Create Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCreateResult.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCreateResult.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountCreateResult.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction">
            <summary>
            Sub Account Deposit Transaction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.AddressTag">
            <summary>
            Address Tag
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.Timestamp">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.TransactionId">
            <summary>
            Transaction Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.SourceAddress">
            <summary>
            Source Address
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountDepositTransaction.ConfirmTimes">
            <summary>
            Confirm Times
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesCommission">
            <summary>
            Sub Account Futures Commission
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesCommission.SubAccountId">
            <summary>
            Sub Account Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesCommission.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesCommission.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesCommission.MakerAdjustment">
            <summary>
            USDT-Ⓜ futures commission adjustment for maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesCommission.TakerAdjustment">
            <summary>
            USDT-Ⓜ futures commission adjustment for taker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesCommission.MakerCommission">
            <summary>
            USDT-Ⓜ futures commission (after adjusted) for maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageSubAccountFuturesCommission.TakerCommission">
            <summary>
            USDT-Ⓜ futures commission (after adjusted) for taker
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesResult">
            <summary>
            Transfer Futures Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesResult.Id">
            <summary>
            Transaction Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesResult.ClientTransferId">
            <summary>
            Client Transfer Id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransactions">
            <summary>
            Transfer Futures Transactions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransactions.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransactions.FuturesType">
            <summary>
            Futures type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransactions.Transactions">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransaction">
            <summary>
            Transfer Futures Transaction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransaction.FromId">
            <summary>
            From Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransaction.ToId">
            <summary>
            To Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransaction.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransaction.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransaction.Id">
            <summary>
            Transaction Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransaction.ClientTransferId">
            <summary>
            Client Transfer Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferFuturesTransaction.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferResult">
            <summary>
            Transfer Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferResult.Id">
            <summary>
            Transaction Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferResult.ClientTransferId">
            <summary>
            Client Transfer Id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction">
            <summary>
            Transfer Transaction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction.Id">
            <summary>
            Transaction Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction.ClientTransferId">
            <summary>
            Client Transfer Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction.FromId">
            <summary>
            From Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction.ToId">
            <summary>
            To Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransaction.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal">
            <summary>
            Transfer Transaction Universal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.Id">
            <summary>
            Transaction Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.ClientTransferId">
            <summary>
            Client Transfer Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.ToId">
            <summary>
            To id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.FromAccountType">
            <summary>
            From account type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.ToAccountType">
            <summary>
            To account type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Brokerage.SubAccountData.HitoBitBrokerageTransferTransactionUniversal.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord">
            <summary>
            Result of a convert transfer operation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.Status">
            <summary>
            Status of the transfer (definitions currently unknown)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.DeductedAsset">
            <summary>
            Deducted asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.DeductedQuantity">
            <summary>
            Deducted quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.TargetQuantity">
            <summary>
            Target quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferRecord.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferResult">
            <summary>
            Result of a convert transfer operation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferResult.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.ConvertTransfer.HitoBitConvertTransferResult.Status">
            <summary>
            Status of the transfer (definitions currently unknown)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertAssetPair">
            <summary>
            Convert Pairs
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertAssetPair.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertAssetPair.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertAssetPair.QuoteAssetMinQuantity">
            <summary>
            Quote asset min quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertAssetPair.QuoteAssetMaxQuantity">
            <summary>
            Quote asset max quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertAssetPair.BaseAssetMinQuantity">
            <summary>
            Base asset min quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertAssetPair.BaseAssetMaxQuantity">
            <summary>
            Base asset max quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus">
            <summary>
            Convert trade info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.BaseQuantity">
            <summary>
            Base quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.Ratio">
            <summary>
            Price ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.InverseRatio">
            <summary>
            Inverse price ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertOrderStatus.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuantityPrecisionAsset">
            <summary>
            Precision per asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuantityPrecisionAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuantityPrecisionAsset.Fraction">
            <summary>
            Fraction
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuote">
            <summary>
            Convert Quote
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuote.QuoteId">
            <summary>
            Quote id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuote.Ratio">
            <summary>
            Price ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuote.InverseRatio">
            <summary>
            Inverse price ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuote.ValidTimestamp">
            <summary>
            Valid Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuote.BaseQuantity">
            <summary>
            Base quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertQuote.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertResult">
            <summary>
            Convert Quote
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertResult.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertResult.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade">
            <summary>
            Convert trade info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.QuoteId">
            <summary>
            Quote id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.QuoteAsset">
            <summary>
            Quote asset 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.BaseQuantity">
            <summary>
            Base quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.Ratio">
            <summary>
            Price ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.InverseRatio">
            <summary>
            Inverse price ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Convert.HitoBitConvertTrade.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.CopyTrading.HitoBitCopyTradingLeadSymbol">
            <summary>
            Copy trading lead symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.CopyTrading.HitoBitCopyTradingLeadSymbol.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.CopyTrading.HitoBitCopyTradingLeadSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.CopyTrading.HitoBitCopyTradingLeadSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.CopyTrading.HitoBitCopyTradingUserStatus">
            <summary>
            Copy trading user status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.CopyTrading.HitoBitCopyTradingUserStatus.IsLeadTrader">
            <summary>
            Is lead trader
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.CopyTrading.HitoBitCopyTradingUserStatus.Timestamp">
            <summary>
            Time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBit24HPrice">
            <summary>
            Price statistics of the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBit24HPrice.PrevDayClosePrice">
            <summary>
            The close price 24 hours ago
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBit24HPrice.BestBidPrice">
            <summary>
            The best bid price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBit24HPrice.BestBidQuantity">
            <summary>
            The quantity of the best bid price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBit24HPrice.BestAskPrice">
            <summary>
            The best ask price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBit24HPrice.BestAskQuantity">
            <summary>
            The quantity of the best ask price in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBit24HPrice.Volume">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBit24HPrice.QuoteVolume">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo">
            <summary>
            Information about an account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.MakerFee">
            <summary>
            Fee percentage to pay when making trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.TakerFee">
            <summary>
            Fee percentage to pay when taking trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.BuyerFee">
            <summary>
            Fee percentage to pay when buying
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.SellerFee">
            <summary>
            Fee percentage to pay when selling
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.CanTrade">
            <summary>
            Boolean indicating if this account can trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.CanWithdraw">
            <summary>
            Boolean indicating if this account can withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.CanDeposit">
            <summary>
            Boolean indicating if this account can deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.Brokered">
            <summary>
            Account is brokered
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.RequireSelfTradePrevention">
            <summary>
            Require self trade prevention
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.PreventSmartOrderRouting">
            <summary>
            Prevent smart order routing
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.UpdateTime">
            <summary>
            The time of the update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.AccountType">
            <summary>
            The type of account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.Permissions">
            <summary>
            Permissions types
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountInfo.Balances">
            <summary>
            List of assets with their current balances
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitBalance">
            <summary>
            Information about an asset balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBalance.Available">
            <summary>
            The quantity that isn't locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBalance.Locked">
            <summary>
            The quantity that is currently locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBalance.Total">
            <summary>
            The total balance of this asset (Free + Locked)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitAccountStatus">
            <summary>
            Account status info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAccountStatus.Data">
            <summary>
            The result status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade">
            <summary>
            Compressed aggregated trade information. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade.Id">
            <summary>
            The id of this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade.Price">
            <summary>
            The price of trades in this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade.Quantity">
            <summary>
            The total quantity of trades in the aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade.FirstTradeId">
            <summary>
            The first trade id in this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade.LastTradeId">
            <summary>
            The last trade id in this aggregation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade.TradeTime">
            <summary>
            The timestamp of the trades
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAggregatedTrade.WasBestPriceMatch">
            <summary>
            Whether the trade was matched at the best price
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions">
            <summary>
            Permissions of the current API key
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.IpRestrict">
            <summary>
            Whether the key is restricted to certain IP's or not
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.CreateTime">
            <summary>
            Creation time of the key
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.EnableWithdrawals">
            <summary>
            This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.PermitsUniversalTransfer">
            <summary>
            This option authorizes this key to transfer funds between your master account and your sub account instantly
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.EnableInternalTransfer">
            <summary>
            Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business's own transfer API rights are not affected by this authorization
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.EnableVanillaOptions">
            <summary>
            Authorizes this key to Vanilla options trading
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.EnableReading">
            <summary>
            Authorizes the reading of account info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.EnableFutures">
            <summary>
            Authorizes futures trading. API Key created before your futures account opened does not support futures API service
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.EnableMargin">
            <summary>
            Authorizes margin. This option can be adjusted after the Cross Margin account transfer is completed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.EnableSpotAndMarginTrading">
            <summary>
            Spot and margin trading allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.EnablePortfolioMarginTrading">
            <summary>
            Portfolio margin trading enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAPIKeyPermissions.TradingAuthorityExpirationTime">
            <summary>
            Expiration time for spot and margin trading permission
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitAutoConversionSettings">
            <summary>
            User auto conversion settings
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAutoConversionSettings.ConvertEnabled">
            <summary>
            Is auto convert enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAutoConversionSettings.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAutoConversionSettings.ExchangeRates">
            <summary>
            Exchange rates
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitAveragePrice">
            <summary>
            Current average price details for a symbol.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAveragePrice.Minutes">
            <summary>
            Duration in minutes
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAveragePrice.Price">
            <summary>
            The average price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAveragePrice.LastTradeTime">
            <summary>
            The last trade time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitBnbBurnStatus">
            <summary>
            Bnb burn status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBnbBurnStatus.SpotBnbBurn">
            <summary>
            If spot trading BNB burn is enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBnbBurnStatus.InterestBnbBurn">
            <summary>
            If margin interest BNB burn is enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitBookPrice">
            <summary>
            Information about the best price/quantity available for a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBookPrice.LastUpdateId">
            <summary>
            Last trade update id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBookPrice.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBookPrice.BestBidPrice">
            <summary>
            The highest bid price for the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBookPrice.BestBidQuantity">
            <summary>
            The quantity of the highest bid price currently in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBookPrice.BestAskPrice">
            <summary>
            The lowest ask price for the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBookPrice.BestAskQuantity">
            <summary>
            The quantity of the lowest ask price currently in the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBookPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitBusdConvertResult">
            <summary>
            Convert result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdConvertResult.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdConvertResult.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory">
            <summary>
            Busd convert history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.DeductedAsset">
            <summary>
            Deducted asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.DeductedQuantity">
            <summary>
            Deducted quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.TargetQuantity">
            <summary>
            Target quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitBusdHistory.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade">
            <summary>
            C2C user trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.OrderNumber">
            <summary>
            Order number
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.AdvertNumber">
            <summary>
            Advert number
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.TradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.Asset">
            <summary>
            Crypto asset traded
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.Fiat">
            <summary>
            Fiat type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.FiatSymbol">
            <summary>
            Fiat symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.Quantity">
            <summary>
            Quantity traded
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.TotalPrice">
            <summary>
            Total price of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.UnitPrice">
            <summary>
            Price per unit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.Fee">
            <summary>
            Transaction fee in crypto
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.CounterPartNickName">
            <summary>
            Counter part nickname
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitC2CUserTrade.AdvertisementRole">
            <summary>
            Advertisement role
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitCloudMiningHistory">
            <summary>
            Cloud mining payment/refund history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCloudMiningHistory.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCloudMiningHistory.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCloudMiningHistory.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCloudMiningHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCloudMiningHistory.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCloudMiningHistory.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitCommissions">
            <summary>
            HitoBit commissions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCommissions.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCommissions.StandardCommissions">
            <summary>
            Standard commission rates on trades from the order.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCommissions.TaxCommissions">
            <summary>
            Tax commission rates for trades from the order.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCommissions.Discount">
            <summary>
            Discount commission when paying in BNB
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDiscountInfo">
            <summary>
            Commission info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDiscountInfo.Discount">
            <summary>
            Standard commission is reduced by this rate when paying commission in BNB.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDiscountInfo.EnabledForAccount">
            <summary>
            Enabled for account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDiscountInfo.EnabledForSymbol">
            <summary>
            Enabled for symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDiscountInfo.DiscountAsset">
            <summary>
            Discount asset
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitCommissionInfo">
            <summary>
            Commission info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCommissionInfo.Maker">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCommissionInfo.Taker">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCommissionInfo.Buyer">
            <summary>
            Buyer fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCommissionInfo.Sell">
            <summary>
            Seller fee
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDelistSchedule">
            <summary>
            Spot symbol delist info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDelistSchedule.DelistTime">
            <summary>
            Delist time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDelistSchedule.Symbols">
            <summary>
            Symbols being delisted
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDepositAddress.Address">
            <summary>
            The deposit address
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDepositAddress.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDepositAddress.Tag">
            <summary>
            Address tag
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDepositAddress.Asset">
            <summary>
            Asset the address is for
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit">
            <summary>
            Information about a deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.InsertTime">
            <summary>
            Time the deposit was added to HitoBit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.Quantity">
            <summary>
            The quantity deposited
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.Asset">
            <summary>
            The asset deposited
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.Address">
            <summary>
            The address of the deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.AddressTag">
            <summary>
            The tag of the address of the deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.Network">
            <summary>
            The network
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.Id">
            <summary>
            The  id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.TransactionId">
            <summary>
            The transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.Status">
            <summary>
            The status of the deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.TransferType">
            <summary>
            The transfer type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.Confirmations">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.ConfirmationsForUnlock">
            <summary>
            Network confirmations for unlocking
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.WalletType">
            <summary>
            The wallet type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDeposit.SourceAddress">
            <summary>
            Transaction source address. Note: Please note that the source address returned may not be accurate due to network-specific characteristics. If multiple source addresses found, only the first address will be returned
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDividendRecord">
            <summary>
            Dividend record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDividendRecord.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDividendRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDividendRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDividendRecord.Timestamp">
            <summary>
            Timestamp of the transaction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDividendRecord.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDividendRecord.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogList">
            <summary>
            Dust log response details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogList.Total">
            <summary>
            Total counts of exchange
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogList.UserAssetDribblets">
            <summary>
            Rows
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDustLog">
            <summary>
            Dust log details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLog.TransferredTotal">
            <summary>
            Total transferred
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLog.ServiceChargeTotal">
            <summary>
            Total service charge
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLog.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLog.Logs">
            <summary>
            Detail logs
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLog.OperateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogDetails">
            <summary>
            Dust log entry details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogDetails.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogDetails.ServiceChargeQuantity">
            <summary>
            Service charge
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogDetails.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogDetails.OperateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogDetails.TransferredQuantity">
            <summary>
            Transferred quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustLogDetails.FromAsset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResult">
            <summary>
            Result of dust transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResult.TotalServiceCharge">
            <summary>
            Total service charge
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResult.TotalTransferred">
            <summary>
            Total transferred
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResult.TransferResult">
            <summary>
            Transfer entries
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResultEntry">
            <summary>
            Dust transfer entry
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResultEntry.Quantity">
            <summary>
            Quantity of dust
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResultEntry.FromAsset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResultEntry.Timestamp">
            <summary>
            Timestamp of conversion
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResultEntry.ServiceChargeQuantity">
            <summary>
            Service charge
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResultEntry.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDustTransferResultEntry.TransferredQuantity">
            <summary>
            BNB result quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDusts">
            <summary>
            Asset dusts that can be converted to BNB
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDusts.TotalTransferBTC">
            <summary>
            Total BTC value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDusts.TotalTransferBNB">
            <summary>
            Total BNB value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDusts.FeePercentage">
            <summary>
            Commission fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDusts.Details">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDust">
            <summary>
            Asset which can be converted
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDust.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDust.AssetFullName">
            <summary>
            Full name of the asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDust.QuantityFree">
            <summary>
            Amount free
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDust.ToBTC">
            <summary>
            BTC value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDust.ToBNB">
            <summary>
            BNB value without fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDust.ToBNBOffExchange">
            <summary>
            BNB value with fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitElligableDust.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitEventOrderBook">
            <summary>
            Stream order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitEventOrderBook.FirstUpdateId">
            <summary>
            The id of this update, can be synced with HitoBitClient.Spot.GetOrderBook to update the order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitEventOrderBook.LastUpdateId">
            <summary>
            Setter for last update id, need for Json.Net
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitEventOrderBook.Symbol">
            <summary>
            The symbol of the order book 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitEventOrderBook.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitEventOrderBook.EventTime">
            <summary>
            Event time of the update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitEventOrderBook.Bids">
            <summary>
            The list of bids
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitEventOrderBook.Asks">
            <summary>
            The list of asks
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitExchangeInfo">
            <summary>
            Exchange info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitExchangeInfo.TimeZone">
            <summary>
            The timezone the server uses
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitExchangeInfo.ServerTime">
            <summary>
            The current server time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitExchangeInfo.RateLimits">
            <summary>
            The rate limits used
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitExchangeInfo.Symbols">
            <summary>
            All symbols supported
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitExchangeInfo.ExchangeFilters">
            <summary>
            Filters
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment">
            <summary>
            Fiat payment info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.OrderNumber">
            <summary>
            Order number
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.SourceQuantity">
            <summary>
            The input quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.FiatAsset">
            <summary>
            The fiat asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.ObtainQuantity">
            <summary>
            The output quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.CryptoAsset">
            <summary>
            The crypto asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.TotalFee">
            <summary>
            The total fee of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.PaymentMethod">
            <summary>
            The payment method
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatPayment.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit">
            <summary>
            Fiat payment info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.OrderNumber">
            <summary>
            Order number
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.FiatAsset">
            <summary>
            The used asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.IndicatedQuantity">
            <summary>
            The indicated quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.Method">
            <summary>
            The method
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.TotalFee">
            <summary>
            The total fee of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.Status">
            <summary>
            The status 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFiatWithdrawDeposit.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFundingAsset">
            <summary>
            Funding wallet asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFundingAsset.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFundingAsset.Available">
            <summary>
            Quantity available
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFundingAsset.Locked">
            <summary>
            Quantity locked
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFundingAsset.Freeze">
            <summary>
            Quantity frozen
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFundingAsset.Withdrawing">
            <summary>
            Quantity withdrawing
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFundingAsset.BtcValuation">
            <summary>
            Value in btc
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAccountSnapshot">
            <summary>
            Snapshot data of a futures account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAccountSnapshot.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAccountSnapshot.Type">
            <summary>
            Account type the data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAccountSnapshot.Data">
            <summary>
            Snapshot data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAccountSnapshotData">
            <summary>
            Data of the snapshot
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAccountSnapshotData.Assets">
            <summary>
            List of assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAccountSnapshotData.Position">
            <summary>
            List of positions
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAsset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAsset.Asset">
            <summary>
            Name of the asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesAsset.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesSnapshotPosition">
            <summary>
            Position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesSnapshotPosition.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesSnapshotPosition.EntryPrice">
            <summary>
            Entry price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesSnapshotPosition.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesSnapshotPosition.PositionAmt">
            <summary>
            Position amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesSnapshotPosition.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitIpRestriction">
            <summary>
            IP restriction info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitIpRestriction.IpRestricted">
            <summary>
            Is currently restricted
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitIpRestriction.IpList">
            <summary>
            Ip whitelist
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitIpRestriction.UpdateTime">
            <summary>
            Update Time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitIpRestriction.ApiKey">
            <summary>
            The API key
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitListResult`1">
            <summary>
            List result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitListResult`1.StartTime">
            <summary>
            Data start time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitListResult`1.EndTime">
            <summary>
            Emd to,e
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitListResult`1.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitListResult`1.MoreData">
            <summary>
            More data available
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitListResult`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitMarkIndexKline">
            <summary>
            Kline for mark or index price or Premium index
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitMarkIndexKline.OpenTime">
            <summary>
            The time this candlestick opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitMarkIndexKline.OpenPrice">
            <summary>
            The price at which this candlestick opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitMarkIndexKline.HighPrice">
            <summary>
            The highest price in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitMarkIndexKline.LowPrice">
            <summary>
            The lowest price in this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitMarkIndexKline.ClosePrice">
            <summary>
            The price at which this candlestick closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitMarkIndexKline.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitMarkIndexKline.BasicDataCount">
            <summary>
            Number of basic data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitOrder">
            <summary>
            Information regarding a specific order
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitOrderBook">
            <summary>
            The order book for a asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderBook.Symbol">
            <summary>
            The symbol of the order book 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderBook.LastUpdateId">
            <summary>
            The ID of the last update
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderBook.Bids">
            <summary>
            The list of bids
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderBook.Asks">
            <summary>
            The list of asks
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList">
            <summary>
            The result of placing a new OCO order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.Id">
            <summary>
            The id of the order list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.ContingencyType">
            <summary>
            The contingency type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.ListStatusType">
            <summary>
            The order list status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.ListOrderStatus">
            <summary>
            The order status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.ListClientOrderId">
            <summary>
            The client id of the order list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.TransactionTime">
            <summary>
            The transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.Symbol">
            <summary>
            The symbol of the order list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.Orders">
            <summary>
            The order in this list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderOcoList.OrderReports">
            <summary>
            The order details
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitOrderId">
            <summary>
            Order reference
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderId.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderId.OrderId">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderId.ClientOrderId">
            <summary>
            The client order id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitPlacedOcoOrder">
            <summary>
            The result of placing a new order
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitCurrentRateLimit">
            <summary>
            Rate limit info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitCurrentRateLimit.Count">
            <summary>
            The current used amount
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitOrderTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderTrade.Price">
            <summary>
            Price of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderTrade.Quantity">
            <summary>
            Quantity of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderTrade.Fee">
            <summary>
            Fee paid over this trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitOrderTrade.FeeAsset">
            <summary>
            The asset the fee is paid in
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade">
            <summary>
            HitoBit pay trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.Uid">
            <summary>
            Uid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.CounterPartyId">
            <summary>
            Counter party id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.TotalPaymentFee">
            <summary>
            Total fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.WalletType">
            <summary>
            Main wallet type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.Details">
            <summary>
            Fund details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.PayerInfo">
            <summary>
            Payer info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTrade.ReceiverInfo">
            <summary>
            Receiver info
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeDetails">
            <summary>
            Pay trade funds details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeDetails.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeDetails.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo">
            <summary>
            Pay trade receiver info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.Name">
            <summary>
            Nickname or merchant name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.Type">
            <summary>
            Account type，USER for personal，MERCHANT for merchant
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.HitoBitId">
            <summary>
            HitoBit uid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.AccountId">
            <summary>
            HitoBit pay id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.CountryCode">
            <summary>
            International area code
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.PhoneNumber">
            <summary>
            Phone number
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.MobileCode">
            <summary>
            Country code
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPayTradeParticipantInfo.UnmaskData">
            <summary>
            Unmask data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitPlacedOrder">
            <summary>
            The result of placing a new order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPlacedOrder.Trades">
            <summary>
            Trades for the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPlacedOrder.MarginBuyBorrowQuantity">
            <summary>
            Only present if a margin trade happened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPlacedOrder.MarginBuyBorrowAsset">
            <summary>
            Only present if a margin trade happened
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade">
            <summary>
            Prevented order info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.PreventedMatchId">
            <summary>
            Match id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.TakerOrderId">
            <summary>
            Taker order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.MakerOrderId">
            <summary>
            Maker order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.TradeGroupId">
            <summary>
            Trade group id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.MakerPreventedQuantity">
            <summary>
            Prevented quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPreventedTrade.TransactTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitPrice">
            <summary>
            The price of a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPrice.Symbol">
            <summary>
            The symbol the price is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPrice.Price">
            <summary>
            The price of the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesCoinPrice">
            <summary>
            Futures-Coin price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFuturesCoinPrice.Pair">
            <summary>
            Name of the pair
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitProduct">
            <summary>
            Info on a product
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Symbol">
            <summary>
            Name of the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Status">
            <summary>
            Status of the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.BaseAsset">
            <summary>
            Name of the base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.QuoteAsset">
            <summary>
            Name of the quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.BaseAssetChar">
            <summary>
            Char of the base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.QuoteAssetChar">
            <summary>
            Char of the quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.BaseAssetName">
            <summary>
            Base asset name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.QuoteAssetName">
            <summary>
            Quote asset name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Volume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.CirculatingSupply">
            <summary>
            Amount of coins in circulation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.LeveragedTokenTrading">
            <summary>
            Is Etf enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.I">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Ts">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.As">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Pn">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Pm">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Pom">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Pomt">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Lc">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.G">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Sd">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.R">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Hd">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Rb">
            <summary>
            
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitProduct.Ks">
            <summary>
            
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitRebateWrapper">
            <summary>
            Rebates page wrapper
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRebateWrapper.Page">
            <summary>
            The current page
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRebateWrapper.TotalRecords">
            <summary>
            Total number of records
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRebateWrapper.TotalPages">
            <summary>
            Total number of pages
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRebateWrapper.Data">
            <summary>
            Rebate data for this page
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitRebate">
            <summary>
            Rebate info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRebate.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRebate.Type">
            <summary>
            Type of rebate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRebate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRebate.UpdateTime">
            <summary>
            Last udpate time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTrade">
            <summary>
            Recent trade info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTrade.OrderId">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTrade.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTrade.BaseQuantity">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTrade.QuoteQuantity">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTrade.TradeTime">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTrade.BuyerIsMaker">
            <summary>
            Whether the buyer is maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTrade.IsBestMatch">
            <summary>
            Whether the trade was made at the best match
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTradeQuote">
            <summary>
            Recent trade with quote quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTradeQuote.QuoteQuantity">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTradeQuote.BaseQuantity">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTradeBase">
            <summary>
            Recent trade with base quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTradeBase.QuoteQuantity">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitRecentTradeBase.BaseQuantity">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceOrderResult">
            <summary>
            The result of replacing an order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceOrderResult.CancelResult">
            <summary>
            Cancel result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceOrderResult.NewOrderResult">
            <summary>
            New order result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceOrderResult.CancelResponse">
            <summary>
            Cancel order response. Make sure to check that the CancelResult is Success, else the CancelResponse.Message will contain more info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceOrderResult.NewOrderResponse">
            <summary>
            New order response. Make sure to check that the NewOrderResult is Success, else the NewOrderResponse.Message will contain more info
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceOrder">
            <summary>
            Replace order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceOrder.Message">
            <summary>
            Failure message
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceOrder.Code">
            <summary>
            Error code if not successful
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceCancelOrder">
            <summary>
            Replace cancel order info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceCancelOrder.Message">
            <summary>
            Failure message
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceCancelOrder.Code">
            <summary>
            Error code if not successful
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceResult">
            <summary>
            Replace result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceResult.Message">
            <summary>
            Failure message
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitReplaceResult.Code">
            <summary>
            Error code if not successful
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSpotAccountSnapshot">
            <summary>
            Snapshot data of a spot account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotAccountSnapshot.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotAccountSnapshot.Type">
            <summary>
            Account type the data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotAccountSnapshot.Data">
            <summary>
            Snapshot data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSpotAccountSnapshotData">
            <summary>
            Data of the snapshot
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotAccountSnapshotData.TotalAssetOfBtc">
            <summary>
            The total value of assets in btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotAccountSnapshotData.Balances">
            <summary>
            List of balances
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSpotFuturesTransfer">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotFuturesTransfer.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotFuturesTransfer.TransactionId">
            <summary>
            The transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotFuturesTransfer.Quantity">
            <summary>
            The quantity transferred
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotFuturesTransfer.Type">
            <summary>
            The transfer direction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotFuturesTransfer.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotFuturesTransfer.Status">
            <summary>
            The status of the transfer
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSpotKline">
            <summary>
            Candlestick information for symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotKline.Volume">
            <summary>
            The volume traded during this candlestick
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotKline.QuoteVolume">
            <summary>
            The volume traded during this candlestick in the asset form
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotKline.TakerBuyBaseVolume">
            <summary>
            Taker buy base asset volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotKline.TakerBuyQuoteVolume">
            <summary>
            Taker buy quote asset volume
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSpotKline.Ignore">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.Name">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.Status">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.BaseAsset">
            <summary>
            The base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.BaseAssetPrecision">
            <summary>
            The precision of the base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.QuoteAsset">
            <summary>
            The quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.QuoteAssetPrecision">
            <summary>
            The precision of the quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.OrderTypes">
            <summary>
            Allowed order types
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.IcebergAllowed">
            <summary>
            Iceberg orders allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.CancelReplaceAllowed">
            <summary>
            Cancel replace allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.IsSpotTradingAllowed">
            <summary>
            Spot trading orders allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.AllowTrailingStop">
            <summary>
            Trailling stop orders are allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.IsMarginTradingAllowed">
            <summary>
            Margin trading orders allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.OCOAllowed">
            <summary>
            If OCO(One Cancels Other) orders are allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.OTOAllowed">
            <summary>
            If OTO(One Triggers Other) orders are allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.QuoteOrderQuantityMarketAllowed">
            <summary>
            Whether or not it is allowed to specify the quantity of a market order in the quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.BaseFeePrecision">
            <summary>
            The precision of the base asset fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.QuoteFeePrecision">
            <summary>
            The precision of the quote asset fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.Permissions">
            <summary>
            Permissions types
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.PermissionSets">
            <summary>
            Permission sets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.Filters">
            <summary>
            Filters for order on this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.DefaultSelfTradePreventionMode">
            <summary>
            Default self trade prevention
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.AllowedSelfTradePreventionModes">
            <summary>
            Allowed self trade prevention modes
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.IceBergPartsFilter">
            <summary>
            Filter for max amount of iceberg parts for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.LotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.MarketLotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol, specifically for market orders
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.MaxOrdersFilter">
            <summary>
            Filter for max number of orders for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.MaxAlgorithmicOrdersFilter">
            <summary>
            Filter for max algorithmic orders for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.MinNotionalFilter">
            <summary>
            Filter for the minimal quote quantity of an order for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.NotionalFilter">
            <summary>
            Filter for the minimal quote quantity of an order for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.PriceFilter">
            <summary>
            Filter for the max accuracy of the price for this symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.PricePercentFilter">
            <summary>
            Filter for the maximum deviation of the price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.PricePercentByPriceFilter">
            <summary>
            Filter for the maximum deviation of the price per side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.MaxPositionFilter">
            <summary>
            Filter for the maximum position on a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbol.TrailingDeltaFilter">
            <summary>
            Filter for the trailing delta values
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolFilter">
            <summary>
            A filter for order placed on a symbol.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolFilter.FilterType">
            <summary>
            The type of this filter
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPriceFilter">
            <summary>
            Price filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPriceFilter.MinPrice">
            <summary>
            The minimal price the order can be for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPriceFilter.MaxPrice">
            <summary>
            The max price the order can be for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPriceFilter.TickSize">
            <summary>
            The tick size of the price. The price can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceFilter">
            <summary>
            Price percentage filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceFilter.MultiplierUp">
            <summary>
            The max factor the price can deviate up
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceFilter.MultiplierDown">
            <summary>
            The max factor the price can deviate down
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceFilter.MultiplierDecimal">
            <summary>
            The amount of minutes the average price of trades is calculated over. 0 means the last price is used
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over. 0 means the last price is used
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceBySideFilter">
            <summary>
            Price percentage filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceBySideFilter.BidMultiplierUp">
            <summary>
            The max factor the price can deviate up for buys
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceBySideFilter.AskMultiplierUp">
            <summary>
            The max factor the price can deviate up for sells
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceBySideFilter.BidMultiplierDown">
            <summary>
            The max factor the price can deviate down for buys
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceBySideFilter.AskMultiplierDown">
            <summary>
            The max factor the price can deviate down for sells
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolPercentPriceBySideFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over. 0 means the last price is used
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolLotSizeFilter">
            <summary>
            Lot size filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolLotSizeFilter.MinQuantity">
            <summary>
            The minimal quantity of an order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolLotSizeFilter.MaxQuantity">
            <summary>
            The maximum quantity of an order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolLotSizeFilter.StepSize">
            <summary>
            The tick size of the quantity. The quantity can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMarketLotSizeFilter">
            <summary>
            Market lot size filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMarketLotSizeFilter.MinQuantity">
            <summary>
            The minimal quantity of an order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMarketLotSizeFilter.MaxQuantity">
            <summary>
            The maximum quantity of an order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMarketLotSizeFilter.StepSize">
            <summary>
            The tick size of the quantity. The quantity can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMinNotionalFilter">
            <summary>
            Min notional filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMinNotionalFilter.MinNotional">
            <summary>
            The minimal total quote quantity of an order. This is calculated by Price * Quantity.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMinNotionalFilter.ApplyToMarketOrders">
            <summary>
            Whether or not this filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMinNotionalFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over for market orders. 0 means the last price is used
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolNotionalFilter">
            <summary>
            Notional filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolNotionalFilter.MinNotional">
            <summary>
            The minimal total quote quantity of an order. This is calculated by Price * Quantity.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolNotionalFilter.MaxNotional">
            <summary>
            The maximum total quote quantity of an order, This is calculated by Price * Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolNotionalFilter.ApplyMinToMarketOrders">
            <summary>
            Whether or not the min notional filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolNotionalFilter.ApplyMaxToMarketOrders">
            <summary>
            Whether or not the max notional filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolNotionalFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over for market orders. 0 means the last price is used
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMaxOrdersFilter">
             <summary>
            Max orders filter
             </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMaxOrdersFilter.MaxNumberOrders">
            <summary>
            The max number of orders for this symbol
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMaxAlgorithmicOrdersFilter">
            <summary>
            Max algo orders filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMaxAlgorithmicOrdersFilter.MaxNumberAlgorithmicOrders">
            <summary>
            The max number of Algorithmic orders for this symbol
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolIcebergPartsFilter">
            <summary>
            Max iceberg parts filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolIcebergPartsFilter.Limit">
            <summary>
            The max parts of an iceberg order for this symbol.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMaxPositionFilter">
            <summary>
            Max position filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolMaxPositionFilter.MaxPosition">
            <summary>
            The MaxPosition filter defines the allowed maximum position an account can have on the base asset of a symbol.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolTrailingDeltaFilter">
            <summary>
            Trailing delta filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolTrailingDeltaFilter.MinTrailingAboveDelta">
            <summary>
            The MinTrailingAboveDelta filter defines the minimum amount in Basis Point or BIPS above the price to activate the order.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolTrailingDeltaFilter.MaxTrailingAboveDelta">
            <summary>
            The MaxTrailingAboveDelta filter defines the maximum amount in Basis Point or BIPS above the price to activate the order.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolTrailingDeltaFilter.MinTrailingBelowDelta">
            <summary>
            The MinTrailingBelowDelta filter defines the minimum amount in Basis Point or BIPS below the price to activate the order.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSymbolTrailingDeltaFilter.MaxTrailingBelowDelta">
            <summary>
            The MaxTrailingBelowDelta filter defines the minimum amount in Basis Point or BIPS below the price to activate the order.
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitMaxNumberOfIcebergOrdersFilter">
            <summary>
            Max Iceberg Orders Filter
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitMaxNumberOfIcebergOrdersFilter.MaxNumIcebergOrders">
            <summary>
            Maximum number of iceberg orders for this symbol
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitSystemStatus">
            <summary>
            The status of HitoBit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSystemStatus.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitSystemStatus.Message">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitTestOrderCommission">
            <summary>
            Test order commission info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTestOrderCommission.StandardFeeForOrder">
            <summary>
            Standard fee rates on trades from the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTestOrderCommission.TaxFeeForOrder">
            <summary>
            Tax fee rates on trades from the order
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTestOrderCommission.Discount">
            <summary>
            Discount info
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitFee">
            <summary>
            Fee rates
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFee.Maker">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitFee.Taker">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitDiscount">
            <summary>
            Discount info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDiscount.EnabledForAccount">
            <summary>
            Is discount enabled for the account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDiscount.EnabledForSymbol">
            <summary>
            Is discount enabled for the symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDiscount.DiscountAsset">
            <summary>
            The discount asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitDiscount.Discount">
            <summary>
            Discount rate
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitTrade">
            <summary>
            Information about a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.Symbol">
            <summary>
            The symbol the trade is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.OrderId">
            <summary>
            The order id the trade belongs to
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.OrderListId">
            <summary>
            Id of the order list this order belongs to
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.Quantity">
            <summary>
            The quantity of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.QuoteQuantity">
            <summary>
            The quote quantity of the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.Fee">
            <summary>
            The fee paid for the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.FeeAsset">
            <summary>
            The asset the fee is paid in
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.Timestamp">
            <summary>
            The time the trade was made
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.IsBuyer">
            <summary>
            Whether account was the buyer in the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.IsMaker">
            <summary>
            Whether account was the maker in the trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.IsBestMatch">
            <summary>
            Whether trade was made with the best match
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTrade.IsIsolated">
            <summary>
            If isolated margin (for margin account orders)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitTradeFee">
            <summary>
            Trade fee info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradeFee.Symbol">
            <summary>
            The symbol this fee is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradeFee.MakerFee">
            <summary>
            The fee for trades where you're the maker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradeFee.TakerFee">
            <summary>
            The fee for trades where you're the taker
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker">
            <summary>
            Price change stats for the current trading day
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.Symbol">
            <summary>
            The symbol the price is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.PriceChange">
            <summary>
            The actual price change in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.PriceChangePercent">
            <summary>
            The price change in percentage in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.WeightedAveragePrice">
            <summary>
            The weighted average price in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.LastPrice">
            <summary>
            The most recent trade price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.OpenPrice">
            <summary>
            The open price 24 hours ago
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.HighPrice">
            <summary>
            The highest price in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.LowPrice">
            <summary>
            The lowest price in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.OpenTime">
            <summary>
            Time at which this stats opened
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.CloseTime">
            <summary>
            Time at which this stats closed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.FirstTradeId">
            <summary>
            The first trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.LastTradeId">
            <summary>
            The last trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingDayTicker.TotalTrades">
            <summary>
            The amount of trades made in the last 24 hours
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitTradingStatus">
            <summary>
            Trade status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingStatus.IsLocked">
            <summary>
            Is locked
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingStatus.PlannedRecoverTime">
            <summary>
            Planned time of recovery
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingStatus.TriggerConditions">
            <summary>
            Conditions
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingStatus.Indicators">
            <summary>
            Dictionary of indicator lists for symbols
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTradingStatus.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitIndicator">
            <summary>
            Indicator info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitIndicator.IndicatorType">
            <summary>
            Indicator name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitIndicator.Count">
            <summary>
            Count
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitIndicator.CurrentValue">
            <summary>
            Current value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitIndicator.TriggerValue">
            <summary>
            Trigger value
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitTransfer">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTransfer.Asset">
            <summary>
            The asset which was transfered
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTransfer.Quantity">
            <summary>
            Quantity transfered
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTransfer.Type">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTransfer.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTransfer.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitTransfer.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset">
            <summary>
            Information about an asset for a user
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Asset">
            <summary>
            Asset code
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.DepositAllEnable">
            <summary>
            Deposit all is enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Available">
            <summary>
            Quantity free
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Freeze">
            <summary>
            Quantity frozen
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Ipoable">
            <summary>
            Ipo-able
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Ipoing">
            <summary>
            Ipo-ing
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.IsLegalMoney">
            <summary>
            Is the asset legally money
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Locked">
            <summary>
            Quantity locked
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Storage">
            <summary>
            Storage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Trading">
            <summary>
            Is trading
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.WithdrawAllEnable">
            <summary>
            Withdraw all enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Name">
            <summary>
            Name of the asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.Withdrawing">
            <summary>
            Currently withdrawing
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserAsset.NetworkList">
            <summary>
            Networks
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork">
            <summary>
            Network for an asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.AddressRegex">
            <summary>
            Regex for an address on the network
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.DepositDescription">
            <summary>
            Deposit description
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.DepositEnabled">
            <summary>
            Deposit enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.IsDefault">
            <summary>
            Is default network
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.MemoRegex">
            <summary>
            Regex for a memo
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.MinConfirmations">
            <summary>
            Minimal confirmations for balance confirmation
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.SpecialTips">
            <summary>
            Tips
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.UnlockConfirm">
            <summary>
            Confirmation number for balance unlock
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.WithdrawDescription">
            <summary>
            Withdraw description
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.WithdrawEnabled">
            <summary>
            Withdraw is enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.WithdrawFee">
            <summary>
            Fee for withdrawing
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.WithdrawMin">
            <summary>
            Minimal withdraw quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.WithdrawIntegerMultiple">
            <summary>
            Min withdraw step
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.WithdrawMax">
            <summary>
            Max withdraw quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.SameAddress">
            <summary>
            If the asset needs to provide memo to withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.EstimatedArrivalTime">
            <summary>
            Estimated arrival time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitNetwork.Busy">
            <summary>
            Whether the network is busy
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitUserBalance">
            <summary>
            User balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserBalance.Freeze">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserBalance.Withdrawing">
            <summary>
            Currently withdrawing
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserBalance.Ipoable">
            <summary>
            Ipoable amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitUserBalance.BtcValuation">
            <summary>
            Value in btc
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitVipLevelAndStatus">
            <summary>
            VIP level and futures/margin enabled status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitVipLevelAndStatus.VipLevel">
            <summary>
            VIP level
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitVipLevelAndStatus.IsMarginEnabled">
            <summary>
            Is margin enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitVipLevelAndStatus.IsFuturesEnabled">
            <summary>
            Is futures enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitWalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWalletBalance.Active">
            <summary>
            Is the wallet activated
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWalletBalance.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWalletBalance.WalletName">
            <summary>
            Name of the wallet
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal">
            <summary>
            Information about a withdrawal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.Id">
            <summary>
            The id of the withdrawal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.WithdrawOrderId">
            <summary>
            Withdraw order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.ApplyTime">
            <summary>
            The time the withdrawal was applied for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.Quantity">
            <summary>
            The quantity of the withdrawal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.Address">
            <summary>
            The address the asset was withdrawn to
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.AddressTag">
            <summary>
            Tag for the address
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.TransactionId">
            <summary>
            The transaction id of the withdrawal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.TransactionFee">
            <summary>
            Transaction fee for the withdrawal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.Asset">
            <summary>
            The asset that was withdrawn
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.Network">
            <summary>
            Network that was used
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.ConfirmTimes">
            <summary>
            Confirm times for withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.Status">
            <summary>
            The status of the withdrawal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.TransferType">
            <summary>
            Transfer type: 1 for internal transfer, 0 for external transfer 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.TransactionKey">
            <summary>
            Transaction key
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.WalletType">
            <summary>
            The wallet type the withdrawal was from
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawal.CompleteTime">
            <summary>
            The time the withdrawal was completed
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress">
            <summary>
            Withdrawal address info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress.AddressTag">
            <summary>
            Address tag
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress.Origin">
            <summary>
            Origin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress.OriginType">
            <summary>
            Origin type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalAddress.Whitelisted">
            <summary>
            Is whitelisted
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitAssetDetails">
            <summary>
            Asset details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAssetDetails.MinimalWithdrawQuantity">
            <summary>
            Minimal quantity you can withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAssetDetails.DepositStatus">
            <summary>
            Whether deposits are enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAssetDetails.WithdrawStatus">
            <summary>
            Whether withdrawing is enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAssetDetails.WithdrawFee">
            <summary>
            Fee for withdrawing
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitAssetDetails.DepositTip">
            <summary>
            Status string for deposit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalPlaced">
            <summary>
            Result of placing a withdrawal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.HitoBitWithdrawalPlaced.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.CreateIsolatedMarginAccountResult">
            <summary>
            Result of creating isolated margin account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.CreateIsolatedMarginAccountResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.CreateIsolatedMarginAccountResult.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginSymbol">
            <summary>
            Isolated margin symbol info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginSymbol.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginSymbol.Base">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginSymbol.Quote">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginSymbol.IsMarginTrade">
            <summary>
            Margin trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginSymbol.IsBuyAllowed">
            <summary>
            Is buy allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginSymbol.IsSellAllowed">
            <summary>
            Is sell allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginSymbol.DelistTime">
            <summary>
            Time at which the symbol gets delisted
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginTransfer">
            <summary>
            Isolated margin transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginTransfer.Quantity">
            <summary>
            Quantity of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginTransfer.Asset">
            <summary>
            Transfer asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginTransfer.Status">
            <summary>
            Status of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginTransfer.Timestamp">
            <summary>
            Timestamp of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginTransfer.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginTransfer.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginTransfer.To">
            <summary>
            To
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccount">
            <summary>
            Isolated margin account info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccount.Assets">
            <summary>
            Account assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccount.TotalAssetOfBtc">
            <summary>
            Total btc asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccount.TotalLiabilityOfBtc">
            <summary>
            Total liability
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccount.TotalNetAssetOfBtc">
            <summary>
            Total net asset
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol">
            <summary>
            Isolated margin account symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.IsolatedCreated">
            <summary>
            Isolated created
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.MarginLevel">
            <summary>
            The margin level
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.MarginLevelStatus">
            <summary>
            Margin level status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.LiquidatePrice">
            <summary>
            Liquidate price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.LiquidateRate">
            <summary>
            Liquidate rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.TradeEnabled">
            <summary>
            If trading is enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountSymbol.Enabled">
            <summary>
            Account is enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset">
            <summary>
            Isolated margin account asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.BorrowEnabled">
            <summary>
            If borrow is enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.Borrowed">
            <summary>
            Borrowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.Free">
            <summary>
            Free
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.NetAsset">
            <summary>
            Net asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.NetAssetOfBtc">
            <summary>
            Net asset in btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.RepayEnabled">
            <summary>
            Is repay enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.HitoBitIsolatedMarginAccountAsset.TotalAsset">
            <summary>
            Total asset
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.IsolatedMarginAccountLimit">
            <summary>
            Enabled account limit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.IsolatedMarginAccountLimit.EnabledAccount">
            <summary>
            Current enabled accounts
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.IsolatedMargin.IsolatedMarginAccountLimit.MaxAccount">
            <summary>
            Max accounts
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset">
            <summary>
            Loanable asset info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.LoanAsset">
            <summary>
            Loan asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.HourlyInterest7Days">
            <summary>
            Hourly interest rate for 7 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.DailyInterest7Days">
            <summary>
            Daily interest rate for 7 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.HourlyInterest14Days">
            <summary>
            Hourly interest rate for 14 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.DailyInterest14Days">
            <summary>
            Daily interest rate for 14 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.HourlyInterest30Days">
            <summary>
            Daily interest rate for 30 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.DailyInterest30Days">
            <summary>
            Daily interest rate for 30 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.HourlyInterest90Days">
            <summary>
            Daily interest rate for 90 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.DailyInterest90Days">
            <summary>
            Daily interest rate for 90 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.HourlyInterest180Days">
            <summary>
            Daily interest rate for 180 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.DailyInterest180Days">
            <summary>
            Daily interest rate for 180 days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.MinLimit">
            <summary>
            Min limit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.MaxLimit">
            <summary>
            Min limit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanAsset.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrow">
            <summary>
            Borrow info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrow.LoanAsset">
            <summary>
            The loaning asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrow.CollateralAsset">
            <summary>
            The collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrow.LoanQuantity">
            <summary>
            The loan quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrow.CollateralQuantity">
            <summary>
            The collateral quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrow.HourlyInterestRate">
            <summary>
            Hourly interest rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrow.OrderId">
            <summary>
            Borrow order id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord">
            <summary>
            Borrow record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.LoanAsset">
            <summary>
            The loaning asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.CollateralAsset">
            <summary>
            The collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.InitialLoanQuantity">
            <summary>
            The loan quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.InitialCollateralQuantity">
            <summary>
            The collateral quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.HourlyInterestRate">
            <summary>
            Hourly interest rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.LoanTerm">
            <summary>
            Loan term
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.OrderId">
            <summary>
            Borrow order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.BorrowTime">
            <summary>
            Borrow timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanBorrowRecord.Status">
            <summary>
            Status of the order
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanCollateralAsset">
            <summary>
            Collateral asset info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanCollateralAsset.ColleteralAsset">
            <summary>
            Collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanCollateralAsset.InitialLtv">
            <summary>
            Initial ltv
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanCollateralAsset.MarginCallLtv">
            <summary>
            Margin call ltv
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanCollateralAsset.LiquidationLtv">
            <summary>
            Liquidation ltv
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanCollateralAsset.MaxLimit">
            <summary>
            Max limit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanCollateralAsset.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanIncome">
            <summary>
            Crypto loan income info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanIncome.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanIncome.Type">
            <summary>
            Income type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanIncome.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanIncome.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanIncome.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjust">
            <summary>
            Adjust info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjust.LoanAsset">
            <summary>
            The loaning asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjust.CollateralAsset">
            <summary>
            The collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjust.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjust.Quantity">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjust.CurrentLtv">
            <summary>
            Current ltv
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord">
            <summary>
            Ltv adjustment info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord.LoanAsset">
            <summary>
            The loaning asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord.CollateralAsset">
            <summary>
            The collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord.Quantity">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord.PreLtv">
            <summary>
            Pre adjust ltv
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord.AfterLtv">
            <summary>
            Post adjust ltv
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord.AdjustTime">
            <summary>
            Adjust time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanLtvAdjustRecord.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanMarginCallResult">
            <summary>
            Customize margin call result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanMarginCallResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanMarginCallResult.CollateralAsset">
            <summary>
            Collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanMarginCallResult.PreMarginCall">
            <summary>
            Pre margin call 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanMarginCallResult.AfterMarginCall">
            <summary>
            After margin call
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanMarginCallResult.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder">
            <summary>
            Open borrow order info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder.LoanAsset">
            <summary>
            The loaning asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder.CollateralAsset">
            <summary>
            The collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder.CollateralQuantity">
            <summary>
            The collateral quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder.OrderId">
            <summary>
            Borrow order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder.TotalDebt">
            <summary>
            Total debt
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder.ResidualInterest">
            <summary>
            Residual interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder.CurrentLTV">
            <summary>
            Current LTV
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanOpenBorrowOrder.ExpirationTime">
            <summary>
            Expiration time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepay">
            <summary>
            Repay info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepay.LoanAsset">
            <summary>
            The loaning asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepay.CollateralAsset">
            <summary>
            The collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepay.CurrentLTV">
            <summary>
            Current LTV
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepay.RemainingPrincipal">
            <summary>
            Remaining principal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepay.RepayStatus">
            <summary>
            Repay status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepay.RemainingCollateral">
            <summary>
            Remaining collateral
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepay.RemainingInterest">
            <summary>
            Remaining interest
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRate">
            <summary>
            Repay rate info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRate.LoanAsset">
            <summary>
            Loan asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRate.CollateralAsset">
            <summary>
            Collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRate.RepayQuantity">
            <summary>
            Repay quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRate.Rate">
            <summary>
            Rate
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord">
            <summary>
            Repay record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.LoanAsset">
            <summary>
            The loaning asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.CollateralAsset">
            <summary>
            The collateral asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.OrderId">
            <summary>
            Borrow order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.RepayTime">
            <summary>
            Repay timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.RepayStatus">
            <summary>
            Status of the repay
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.CollateralReturn">
            <summary>
            Collateral return
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.CollateralUsed">
            <summary>
            Collateral used
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.RepayQuantity">
            <summary>
            Repay quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Loans.HitoBitCryptoLoanRepayRecord.RepayType">
            <summary>
            1 for "repay with borrowed asset", 2 for "repay with collateral"
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginCollateralRatio">
            <summary>
            Cross margin collateral info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginCollateralRatio.Collaterals">
            <summary>
            Collaterals
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginCollateralRatio.AssetNames">
            <summary>
            Asset names
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginCollateral">
            <summary>
            Collateral info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginCollateral.MinUsdValue">
            <summary>
            Min usd value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginCollateral.MaxUsdValue">
            <summary>
            Max usd value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginCollateral.DiscountRate">
            <summary>
            Discount rate
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginLeverageResult">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitCrossMarginLeverageResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation">
            <summary>
            Forced liquidation info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.ExecutedQuantity">
            <summary>
            The executed quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.Quantity">
            <summary>
            Total quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitForcedLiquidation.IsIsolated">
            <summary>
            Is isolated margin
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitFuturesInterestRate">
            <summary>
            Future hourly interest rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitFuturesInterestRate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitFuturesInterestRate.NextHourlyInterestRate">
            <summary>
            Next interest rate
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory">
            <summary>
            Interest history entry info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.IsolatedSymbol">
            <summary>
            Isolated symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.RawAsset">
            <summary>
            The raw asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.InterestQuantity">
            <summary>
            The quantity of interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.InterestAccuredTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.Principal">
            <summary>
            Principal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestHistory.Type">
            <summary>
            Type of interest
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData">
            <summary>
            Cross margin interest data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData.Coin">
            <summary>
            The coin
            </summary>        
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData.TransferIn">
            <summary>
            If coin can be transferred into cross
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData.Borrowable">
            <summary>
            If coin can be borrowed in cross
            </summary>        
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData.DailyInterest">
            <summary>
            The daily interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData.YearlyInterest">
            <summary>
            The yearly interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData.BorrowLimit">
            <summary>
            The yearly interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestMarginData.MarginablePairs">
            <summary>
            Cross marginable pairs for this coin
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestRateHistory">
            <summary>
            Interest rate history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestRateHistory.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestRateHistory.DailyInterest">
            <summary>
            The daily interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestRateHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitInterestRateHistory.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeData">
            <summary>
            Fee data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeData.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeData.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeData.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeData.FeeInfo">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeInfo">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeInfo.DailyInterest">
            <summary>
            Daily interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginFeeInfo.BorrowLimit">
            <summary>
            Borrow limit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginTierData">
            <summary>
            Isolated margin tier data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginTierData.Symbol">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginTierData.Tier">
            <summary>
            Tier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginTierData.EffectiveMultiple">
            <summary>
            Effective multiple
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginTierData.InitialRiskRatio">
            <summary>
            Initial risk ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginTierData.LiquidationRiskRatio">
            <summary>
            Liquidation risk ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginTierData.BaseAssetMaxBorrowable">
            <summary>
            Base asset max borrowable
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitIsolatedMarginTierData.QuoteAssetMaxBorrowable">
            <summary>
            Quote asset max borrowable
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount">
            <summary>
            Information about margin account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.BorrowEnabled">
            <summary>
            Boolean indicating if this account can borrow
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.TradeEnabled">
            <summary>
            Boolean indicating if this account can trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.TransferEnabled">
            <summary>
            Boolean indicating if this account can transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.CollateralMarginLevel">
            <summary>
            Collateral margin level
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.TotalCollateralValueInUSDT">
            <summary>
            Total collateral value in USDT
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.MarginLevel">
            <summary>
            Aggregate level of margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.TotalAssetOfBtc">
            <summary>
            Aggregate total balance as BTC
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.TotalLiabilityOfBtc">
            <summary>
            Aggregate total liability balance of BTC
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.TotalNetAssetOfBtc">
            <summary>
            Aggregate total available net balance of BTC
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccount.Balances">
            <summary>
            Balance list
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginBalance">
            <summary>
            Information about an asset balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginBalance.Borrowed">
            <summary>
            The quantity that was borrowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginBalance.Available">
            <summary>
            The quantity that isn't locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginBalance.Interest">
            <summary>
            Fee to need pay by borrowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginBalance.Locked">
            <summary>
            The quantity that is currently locked in a trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginBalance.NetAsset">
            <summary>
            The quantity that is netAsset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginBalance.Total">
            <summary>
            The total balance of this asset (Available + Locked)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshot">
            <summary>
            Margin account snapshot
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshot.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshot.Type">
            <summary>
            Account type the data is for
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshot.Data">
            <summary>
            Snapshot data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshotData">
            <summary>
            Margin snapshot data
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshotData.MarginLevel">
            <summary>
            The margin level
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshotData.TotalAssetOfBtc">
            <summary>
            Total BTC asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshotData.TotalLiabilityOfBtc">
            <summary>
            Total BTC liability
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshotData.TotalNetAssetOfBtc">
            <summary>
            Total net BTC asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAccountSnapshotData.UserAssets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAmount">
            <summary>
            The result quantity of getting maxBorrowable or maxTransferable 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAmount.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAmount.BorrowLimit">
            <summary>
            The borrow limit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAsset">
            <summary>
            Margin asset info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAsset.FullName">
            <summary>
            Full name of the asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAsset.Name">
            <summary>
            Short name of the asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAsset.IsBorrowable">
            <summary>
            Is borrowable
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAsset.IsMortgageable">
            <summary>
            Is mortgageable
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAsset.MinimalBorrowQuantity">
            <summary>
            Minimal quantity which can be borrowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAsset.MinimalRepayQuanitty">
            <summary>
            Minimal quantity which can be repaid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginAsset.DelistTime">
            <summary>
            Time at which the asset gets delisted
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDelistSchedule">
            <summary>
            Delist margin schedule
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDelistSchedule.DelistTime">
            <summary>
            Delist time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDelistSchedule.CrossMarginAssets">
            <summary>
            Cross margin assets
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDelistSchedule.IsolatedMarginSymbols">
            <summary>
            Isolated margin symbols
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAsset">
            <summary>
            Asset info for dust conversion
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAsset.TotalTransferBtc">
            <summary>
            Total btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAsset.TotalTransferBnb">
            <summary>
            Total bnb
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAsset.DribbletPercentage">
            <summary>
            Dribblet percentage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAsset.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAssetDetails">
            <summary>
            Asset dust details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAssetDetails.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAssetDetails.AssetFullName">
            <summary>
            Asset full name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAssetDetails.QuantityFree">
            <summary>
            Quantity fee
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAssetDetails.ToBtc">
            <summary>
            To btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAssetDetails.ToBnb">
            <summary>
            To bnb
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAssetDetails.ToBnbOffExchange">
            <summary>
            To bnb off exchange
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustAssetDetails.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustTransfer">
            <summary>
            Margin dust transfer info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustTransfer.TotalServiceCharge">
            <summary>
            Total service charge
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustTransfer.TotalTransfered">
            <summary>
            Total transfered
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginDustTransfer.TransferResults">
            <summary>
            Transfer results
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMargingDustTransferResult">
            <summary>
            Transfer results
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMargingDustTransferResult.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMargingDustTransferResult.FromAsset">
            <summary>
            Source asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMargingDustTransferResult.OperateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMargingDustTransferResult.ServiceChargeQuantity">
            <summary>
            Service charge quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMargingDustTransferResult.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMargingDustTransferResult.TransferedQuantity">
            <summary>
            Transfered quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginLevel">
            <summary>
            Personal margin level information
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginLevel.NormalLevel">
            <summary>
            The level at which your margin level is considered normal.
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginLevel.MarginCallLevel">
            <summary>
            The level at which you will be margin called (asked to deposit more funds)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginLevel.ForcedLiquidationLevel">
            <summary>
            The level at which your positions will be liquidated until your account balances
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginOrderOcoList">
            <summary>
            Oco info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginOrderOcoList.MarginBuyBorrowQuantity">
            <summary>
            Margin buy borrow quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginOrderOcoList.MarginBuyBorrowAsset">
            <summary>
            Margin buy borrow asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginOrderOcoList.IsIsolated">
            <summary>
            Is isolated margin
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair">
            <summary>
            Margin pair info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair.BaseAsset">
            <summary>
            Base asset of the pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair.QuoteAsset">
            <summary>
            Quote asset of the pair
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair.IsBuyAllowed">
            <summary>
            Is buying allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair.IsSellAllowed">
            <summary>
            Is selling allowed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair.IsMarginTrade">
            <summary>
            Is margin trading
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPair.DelistTime">
            <summary>
            Time at which the symbol gets delisted
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPriceIndex">
            <summary>
            Price index for a symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPriceIndex.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPriceIndex.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitMarginPriceIndex.CalculationTime">
            <summary>
            Time of calculation
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransaction">
            <summary>
            The result of transferring
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransaction.TransactionId">
            <summary>
            The Transaction id as assigned by HitoBit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan">
            <summary>
            Loan info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan.IsolatedSymbol">
            <summary>
            Isolated symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan.Asset">
            <summary>
            The asset of the loan
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan.TransactionId">
            <summary>
            The transaction id of the loan
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan.Principal">
            <summary>
            Principal repaid 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan.Interest">
            <summary>
            Interest repaid 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan.Quantity">
            <summary>
            Quantity repaid 
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan.Timestamp">
            <summary>
            Time of repay completed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitLoan.Status">
            <summary>
            The status of the loan
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay">
            <summary>
            Repay info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay.IsolatedSymbol">
            <summary>
            Isolated symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay.Asset">
            <summary>
            The asset of the repay
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay.TransactionId">
            <summary>
            The transaction id of the repay
            </summary>`
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay.Quantity">
            <summary>
            Total quantity repaid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay.Interest">
            <summary>
            Interest repaid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay.Principal">
            <summary>
            Principal repaid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay.Timestamp">
            <summary>
            Time of repay completed
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitRepay.Status">
            <summary>
            The status of the repay
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityAsset">
            <summary>
            Small liability asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityAsset.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityAsset.Principal">
            <summary>
            Principal
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityAsset.LiabilityAsset">
            <summary>
            Liability asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityAsset.LiabilityQuantity">
            <summary>
            Liability quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityHistory">
            <summary>
            Small liability history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityHistory.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityHistory.TargetAsset">
            <summary>
            Target asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityHistory.TargetQuantity">
            <summary>
            Target quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityHistory.BizType">
            <summary>
            Biz type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitSmallLiabilityHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory">
            <summary>
            Transfer history entry
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.Quantity">
            <summary>
            Quanity of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.Asset">
            <summary>
            Asset of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.Status">
            <summary>
            Status of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.Timestamp">
            <summary>
            Timestamp of the transaction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.Direction">
            <summary>
            Direction of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.TransferFrom">
            <summary>
            Transfer from
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.TransferTo">
            <summary>
            Transfer to
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.FromSymbol">
            <summary>
            Transfer from symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Margin.HitoBitTransferHistory.ToSymbol">
            <summary>
            Transfer to symbol
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetails">
            <summary>
            Resale list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetails.TotalNum">
            <summary>
            Total number of results
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetails.PageSize">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetails.ProfitTransferDetails">
            <summary>
            Transfer details
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem">
            <summary>
            Resale item
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem.ConfigId">
            <summary>
            Config id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem.PoolUserName">
            <summary>
            From user
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem.ToPoolUserName">
            <summary>
            To user
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem.AlgoName">
            <summary>
            Algorithm
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem.Hashrate">
            <summary>
            Hash rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem.Day">
            <summary>
            Start day
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem.Coin">
            <summary>
            Coin name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleDetailsItem.Quantity">
            <summary>
            Transferred income
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleList">
            <summary>
            Resale list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleList.TotalNum">
            <summary>
            Total number of results
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleList.PageSize">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleList.ResaleItmes">
            <summary>
            Details
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem">
            <summary>
            Resale item
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem.ConfigId">
            <summary>
            Mining id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem.PoolUserName">
            <summary>
            From user
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem.ToPoolUserName">
            <summary>
            To user
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem.AlgoName">
            <summary>
            Algorithm
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem.Hashrate">
            <summary>
            Hash rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem.StartDay">
            <summary>
            Start day
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem.EndDay">
            <summary>
            End day
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashrateResaleItem.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerList">
            <summary>
            Miner list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerList.TotalNum">
            <summary>
            Total number of entries
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerList.PageSize">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerList.WorkerDatas">
            <summary>
            Worker data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerInfo">
            <summary>
            Miner details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerInfo.WorkerId">
            <summary>
            Worker id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerInfo.WorkerName">
            <summary>
            Worker name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerInfo.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerInfo.HashRate">
            <summary>
            Hash rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerInfo.DayHashRate">
            <summary>
            Day hash rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerInfo.RejectRate">
            <summary>
            Reject rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerInfo.LastShareTime">
            <summary>
            Last share time
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerDetails">
            <summary>
            Miner details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerDetails.WorkerName">
            <summary>
            Name of the worker
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerDetails.Type">
            <summary>
            Data type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMinerDetails.HashRateDatas">
            <summary>
            Hash rate data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashRate">
            <summary>
            Hash rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashRate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashRate.HashRate">
            <summary>
            Hashrate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitHashRate.Reject">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccount">
            <summary>
            Mining account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccount.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccount.UserName">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccount.Hashrates">
            <summary>
            Hash rates
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAlgorithm">
            <summary>
            Mining coin info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAlgorithm.AlgorithmName">
            <summary>
            The name of the algorithm
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAlgorithm.AlgorithmId">
            <summary>
            The id of the algorithm
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAlgorithm.PoolIndex">
            <summary>
            The pool index
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAlgorithm.Unit">
            <summary>
            The unit of measurement
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningCoin">
            <summary>
            Mining coin info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningCoin.CoinName">
            <summary>
            The name of the coin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningCoin.CoinId">
            <summary>
            The id of the coin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningCoin.PoolIndex">
            <summary>
            The pool index
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningCoin.AlgorithmId">
            <summary>
            Algorithm id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningCoin.AlgorithmName">
            <summary>
            Algorithm name
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningEarnings">
            <summary>
            Earning info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningEarnings.TotalNum">
            <summary>
            Total number of results
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningEarnings.PageSize">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningEarnings.AccountProfits">
            <summary>
            Profit items
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccountEarning">
            <summary>
            Earning info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccountEarning.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccountEarning.Coin">
            <summary>
            Coin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccountEarning.Type">
            <summary>
            Earning type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccountEarning.SubAccountId">
            <summary>
            Sub account id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccountEarning.SubName">
            <summary>
            Mining account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningAccountEarning.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic">
            <summary>
            Mining statistics
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.FifteenMinuteHashRate">
            <summary>
            Hashrate last fifteen minutes
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.DayHashRate">
            <summary>
            Day hashrate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.ValidShares">
            <summary>
            Valid shares
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.InvalidShares">
            <summary>
            Invalid shares
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.ProfitToday">
            <summary>
            Todays profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.ProfitYesterday">
            <summary>
            Yesterdays profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.UserName">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.Unit">
            <summary>
            Hashrate unit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitMiningStatistic.Algorithm">
            <summary>
            Algorithm
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueList">
            <summary>
            Revenue list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueList.TotalNum">
            <summary>
            Total number of results
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueList.PageSize">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueList.OtherProfits">
            <summary>
            Revenue items
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueItem">
            <summary>
            Revenue
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueItem.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueItem.Coin">
            <summary>
            Coin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueItem.Type">
            <summary>
            Earning type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueItem.ProfitQuantity">
            <summary>
            Profit quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitOtherRevenueItem.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueList">
            <summary>
            Revenue list
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueList.TotalNum">
            <summary>
            Total number of results
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueList.PageSize">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueList.AccountProfits">
            <summary>
            Revenue items
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem">
            <summary>
            Revenue
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem.Coin">
            <summary>
            Coin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem.Type">
            <summary>
            Earning type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem.DayHashRate">
            <summary>
            Day hashrate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem.ProfitQuantity">
            <summary>
            Profit quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem.HashTransfer">
            <summary>
            Hash transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem.TransferQuantity">
            <summary>
            Transfer quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Mining.HitoBitRevenueItem.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginCollateralRate">
            <summary>
            Portfolio margin collateral rate info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginCollateralRate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginCollateralRate.CollateralRate">
            <summary>
            Collateral rate
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginInfo">
            <summary>
            Portfolio margin account info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginInfo.UniMaintenanceMarginRate">
            <summary>
            Portfolio margin account maintenance margin rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginInfo.AccountEquity">
            <summary>
            Account equity, in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginInfo.ActualEquity">
            <summary>
            Portfolio margin account actual equity, in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginInfo.AccountMaintenanceMargin">
            <summary>
            Portfolio margin account maintenance margin, in USD
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginInfo.AccountStatus">
            <summary>
            Account status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginInfo.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginLoan">
            <summary>
            Bankruptcy loan info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginLoan.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.PortfolioMargin.HitoBitPortfolioMarginLoan.Quantity">
            <summary>
            Loan amount
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnAccount">
            <summary>
            Simple earn account info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnAccount.TotalQuantityInBtc">
            <summary>
            Total quantity in BTC
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnAccount.TotalQuantityInUsdt">
            <summary>
            Total quantity in USDT
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnAccount.TotalFlexibleQuantityInBtc">
            <summary>
            Total quantity in BTC in flexible products
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnAccount.TotalFlexibleQuantityInUsdt">
            <summary>
            Total quantity in USDT in flexible products
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnAccount.TotalLockedInBtc">
            <summary>
            Total quantity in BTC in locked products
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnAccount.TotalLockedInUsdt">
            <summary>
            Total quantity in USDT in locked products
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnCollateralRecord">
            <summary>
            Simple Earn collateral record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnCollateralRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnCollateralRecord.ProductId">
            <summary>
            Product Id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnCollateralRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnCollateralRecord.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnCollateralRecord.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnCollateralRecord.ProductName">
            <summary>
            Product name
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnCollateralRecord.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition">
            <summary>
            Flexible product position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.LatestAnnualPercentageRate">
            <summary>
            Latest annual percentage rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.TierAnnualPercentageRate">
            <summary>
            Tier annual percentage rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.CanRedeem">
            <summary>
            Can redeem product
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.ProductId">
            <summary>
            product id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.TotalQuantity">
            <summary>
            Total quantity of position
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.YesterdayAirdropPercentageRate">
            <summary>
            Air drop percentage rate of yesterday
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.AirDropAsset">
            <summary>
            Air drop asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.CollateralQuantity">
            <summary>
            Collateral quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.YesterdayRealTimeRewards">
            <summary>
            Realtime rewards of yesterday
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.CumulativeBonusRewards">
            <summary>
            Cumulative bonus rewards
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.CumulativeRealTimeRewards">
            <summary>
            Cumulative realtime rewards
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.CumulativeTotalRewards">
            <summary>
            Cumulative total rewards
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePosition.AutoSubscribe">
            <summary>
            Is auto subscribe enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePreview">
            <summary>
            Simple Earn flexible product subscription preview
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePreview.RewardAsset">
            <summary>
            Reward asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePreview.AirDropAsset">
            <summary>
            Airdrop asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePreview.TotalQuantity">
            <summary>
            Total amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePreview.EstimatedDailyBonusRewards">
            <summary>
            Estimated daily bonus rewards
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePreview.EstimatedDailyRealTimeRewards">
            <summary>
            Estimated daily realtime rewards
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexiblePreview.EstimatedDailyAirdropRewards">
            <summary>
            Estimated daily airdrop rewards
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct">
            <summary>
            Simple earn product info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.LatestAnnualPercentageRate">
            <summary>
            Latest annual percentage rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.TierAnnualPercentageRate">
            <summary>
            Tier annual percentage rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.AirDropPercentageRate">
            <summary>
            Air drop percentage rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.CanPurchase">
            <summary>
            Can purchase product
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.CanRedeem">
            <summary>
            Can redeem product
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.IsSoldOut">
            <summary>
            Product is sold out
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.Hot">
            <summary>
            Is hot
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.MinPurchaseQuantity">
            <summary>
            Min purchase quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.ProductId">
            <summary>
            product id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.SubscriptionStartTime">
            <summary>
            Subscription start time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleProduct.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord">
            <summary>
            Flexible product subscription record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.PurchaseId">
            <summary>
            Purchase id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.Type">
            <summary>
            Subscription type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.SourceAccount">
            <summary>
            Source account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.SpotQuantity">
            <summary>
            Quantity from spot
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.FundingQuantity">
            <summary>
            Quantity from funding
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRecord.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRedemptionRecord">
            <summary>
            Simple Earn flexible product redemption record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRedemptionRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRedemptionRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRedemptionRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRedemptionRecord.ProjectId">
            <summary>
            Project id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRedemptionRecord.RedeemId">
            <summary>
            Redeem id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRedemptionRecord.DestinationAccount">
            <summary>
            Destination account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRedemptionRecord.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRewardRecord">
            <summary>
            Simple Earn flexible product reward record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRewardRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRewardRecord.ProjectId">
            <summary>
            Project id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRewardRecord.Rewards">
            <summary>
            Rewards
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRewardRecord.Type">
            <summary>
            Reward type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnFlexibleRewardRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition">
            <summary>
            Locked product position info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.ProjectId">
            <summary>
            Project id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.Quantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.PurchaseTime">
            <summary>
            Purchase time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.Duration">
            <summary>
            Duration in days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.AccrualDays">
            <summary>
            Accrual days
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.RewardAsset">
            <summary>
            Reward asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.APY">
            <summary>
            APY
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.IsRenewable">
            <summary>
            Is renewable
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.IsAutoRenew">
            <summary>
            Is auto renew enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPosition.RedeemDate">
            <summary>
            Redeem date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview">
            <summary>
            Simple Earn locked product preview
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.RewardAsset">
            <summary>
            Reward asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.ExtraRewardAsset">
            <summary>
            Extra reward asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.TotalRewardQuantity">
            <summary>
            Total reward quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.EstimatedTotalExtraRewardQuantity">
            <summary>
            Estimated total extra reward quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.NextPay">
            <summary>
            Next pay
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.NextPayDate">
            <summary>
            Next pay date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.ValueDate">
            <summary>
            Value date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.RewardsEndDate">
            <summary>
            Rewards end date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.DeliverDate">
            <summary>
            Deliver date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedPreview.NextSubscriptionDate">
            <summary>
            Next subscription date
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProduct">
            <summary>
            Simple earn locked product info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProduct.ProjectId">
            <summary>
            Project id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProduct.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProduct.Quota">
            <summary>
            Quota
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails">
            <summary>
            Simple earn locked project details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.RewardAsset">
            <summary>
            Reward asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.Duration">
            <summary>
            Duration
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.Renewable">
            <summary>
            Renewable
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.IsSoldOut">
            <summary>
            Is sold out
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.Apr">
            <summary>
            Apr
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.SubscriptionStartTime">
            <summary>
            Subscription start time
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.ExtraRewardAsset">
            <summary>
            Extra reward asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectDetails.ExtraRewardApr">
            <summary>
            Extra reward apr
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectQuota">
            <summary>
            Simple earn locked project quota
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectQuota.TotalPersonalQuota">
            <summary>
            Total personal quota
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedProjectQuota.Minimum">
            <summary>
            Minimum
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord">
            <summary>
            Locked product subscription record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.PurchaseId">
            <summary>
            Purchase id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.Type">
            <summary>
            Subscription type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.SourceAccount">
            <summary>
            Source account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.SpotQuantity">
            <summary>
            Quantity from spot
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.FundingQuantity">
            <summary>
            Quantity from funding
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRecord.LockPeriod">
            <summary>
            Lock period
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord">
            <summary>
            Simple Earn locked product redemption record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.RedeemId">
            <summary>
            Redeem id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.LockPeriod">
            <summary>
            Lock period
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.DeliveryDate">
            <summary>
            Delivery date
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRedemptionRecord.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRewardRecord">
            <summary>
            Simple Earn locked product reward record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRewardRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRewardRecord.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRewardRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRewardRecord.LockPeriod">
            <summary>
            Lock period
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnLockedRewardRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnPersonalQuotaLeft">
            <summary>
            Simple Earn personal quota left
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnPersonalQuotaLeft.PersonalQuotaLeft">
            <summary>
            Personal quota left
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnPurchase">
            <summary>
            Purchase id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnPurchase.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnPurchase.PurchaseId">
            <summary>
            Purchase id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnPurchase.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnRateRecord">
            <summary>
            Simple Earn rate record
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnRateRecord.ProductId">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnRateRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnRateRecord.AnnualPercentageRate">
            <summary>
            Annual percentage rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnRateRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnRedemption">
            <summary>
            Redemption
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnRedemption.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnRedemption.RedeemId">
            <summary>
            Redeem id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnResult">
            <summary>
            Simple Earn result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SimpleEarn.HitoBitSimpleEarnResult.Success">
            <summary>
            Result
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethRateHistory">
            <summary>
            Rate history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethRateHistory.ExchangeRate">
            <summary>
            Exchange rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethRateHistory.AnnualPercentageRate">
            <summary>
            Anual percentage rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethRateHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethWrapHistory">
            <summary>
            Wrap history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethWrapHistory.ExchangeRate">
            <summary>
            Exchange rate
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethWrapHistory.ToQuantity">
            <summary>
            Output quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethWrapHistory.FromQuantity">
            <summary>
            Input quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethWrapHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethWrapHistory.FromAsset">
            <summary>
            From asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethWrapHistory.ToAsset">
            <summary>
            To asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitBethWrapHistory.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRedemptionHistory">
            <summary>
            Redemption history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRedemptionHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRedemptionHistory.Quantity">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRedemptionHistory.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRedemptionHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRedemptionHistory.ArrivalTime">
            <summary>
            Arrival timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRewardsHistory">
            <summary>
            Rewards history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRewardsHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRewardsHistory.Quantity">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRewardsHistory.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRewardsHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRewardsHistory.Holding">
            <summary>
            BETH holding balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthRewardsHistory.AnnualPercentageRate">
            <summary>
            Annual percentage rate
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingAccount">
            <summary>
            Eth staking account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingAccount.TotalProfitInBeth">
            <summary>
            Total profit in Beth
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingAccount.LastDayProfitInBeth">
            <summary>
            Last day profit in Beth
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingHistory">
            <summary>
            Staking history
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingHistory.Quantity">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingHistory.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingQuota">
            <summary>
            Eth staking quota
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingQuota.LeftStakingPersonalQuota">
            <summary>
            Staking quota left
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitEthStakingQuota.LeftRedemptionPersonalQuota">
            <summary>
            Redemption quota left
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitStakingResult">
            <summary>
            Staking result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.Staking.HitoBitStakingResult.Success">
            <summary>
            Successful
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccount">
            <summary>
            Sub account details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccount.Email">
            <summary>
            The email associated with the sub account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccount.IsFreeze">
            <summary>
            Is account frozen
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccount.CreateTime">
            <summary>
            The time the sub account was created
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountAssetTransferHistoryList.Transfers">
            <summary>
            Transfers
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountAssetTransferHistory">
            <summary>
            HitoBit sub account transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountAssetTransferHistory.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountAssetTransferHistory.From">
            <summary>
            From email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountAssetTransferHistory.To">
            <summary>
            To email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountAssetTransferHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountAssetTransferHistory.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountAssetTransferHistory.Timestamp">
            <summary>
            The time transaction was created
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountBlvt">
            <summary>
            Sub account details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountBlvt.Email">
            <summary>
            The email associated with the sub account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountBlvt.EnableBlvt">
            <summary>
            Blvt enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit">
            <summary>
            Information about a deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.InsertTime">
            <summary>
            Time the deposit was added to HitoBit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.Quantity">
            <summary>
            The quantity deposited
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.Asset">
            <summary>
            The asset deposited
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.Address">
            <summary>
            The address of the deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.AddressTag">
            <summary>
            The address tag
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.TransactionId">
            <summary>
            The transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.ConfirmTimes">
            <summary>
            Confirmation status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.TransferType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDeposit.Status">
            <summary>
            The status of the deposit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDepositAddress">
            <summary>
            Deposit address info for a sub-account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDepositAddress.Address">
            <summary>
            The deposit address
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDepositAddress.Asset">
            <summary>
            Asset type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDepositAddress.Tag">
            <summary>
            Tag for the deposit address
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountDepositAddress.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountEmail">
            <summary>
            Sub account details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountEmail.Email">
            <summary>
            The email associated with the sub account
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails">
            <summary>
            Sub account futures details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.Email">
            <summary>
            Email of the sub account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.Assets">
            <summary>
            List of asset details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.CanDeposit">
            <summary>
            Can deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.CanTrade">
            <summary>
            Can trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.CanWithdraw">
            <summary>
            Can withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.FeeTier">
            <summary>
            Fee tier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.MaxWithdrawQuantity">
            <summary>
            Max quantity which can be withdrawn
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.TotalMaintenanceMargin">
            <summary>
            Total maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.TotalOpenOrderInitialMargin">
            <summary>
            Total open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.TotalPositionInitialMargin">
            <summary>
            Total position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.TotalUnrealizedProfit">
            <summary>
            Total unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.TotalWalletBalance">
            <summary>
            Total wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetails.UpdateTime">
            <summary>
            Time of the data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset">
            <summary>
            Sub account future asset details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.MaxWithdrawQuantity">
            <summary>
            Max quantity which can be withdrawn
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.OpenOrderInitialMargin">
            <summary>
            Open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.PositionInitialMargin">
            <summary>
            Position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesAsset.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailsV2">
            <summary>
            Sub account futures details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailsV2.UsdtMarginedFutures">
            <summary>
            Futures account response (USDT margined)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailsV2.CoinMarginedFutures">
            <summary>
            Delivery account response (COIN margined)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2">
            <summary>
            Sub account futures details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2.Email">
            <summary>
            Email of the sub account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2.Assets">
            <summary>
            List of asset details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2.CanDeposit">
            <summary>
            Can deposit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2.CanTrade">
            <summary>
            Can trade
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2.CanWithdraw">
            <summary>
            Can withdraw
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2.FeeTier">
            <summary>
            Fee tier
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2.UpdateTime">
            <summary>
            Time of the data
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt">
            <summary>
            Sub account futures details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt.MaxWithdrawQuantity">
            <summary>
            Max quantity which can be withdrawn
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt.TotalMaintenanceMargin">
            <summary>
            Total maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt.TotalOpenOrderInitialMargin">
            <summary>
            Total open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt.TotalPositionInitialMargin">
            <summary>
            Total position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt.TotalUnrealizedProfit">
            <summary>
            Total unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesDetailV2Usdt.TotalWalletBalance">
            <summary>
            Total wallet balance
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesEnabled">
            <summary>
            Sub account futures trading enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesEnabled.Email">
            <summary>
            Email of the account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesEnabled.IsFuturesEnabled">
            <summary>
            Whether futures trading is enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk">
            <summary>
            Sub account position risk
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk.EntryPrice">
            <summary>
            The entry price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk.MaxNotional">
            <summary>
            Max notional
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk.PositionQuantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRisk.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskV2">
            <summary>
            Sub account position risk
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskV2.UsdtMarginedFutures">
            <summary>
            Futures account response (USDT margined)
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskV2.CoinMarginedFutures">
            <summary>
            Delivery account response (COIN margined)
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin">
            <summary>
            Sub account position risk
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.EntryPrice">
            <summary>
            The entry price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.Isolated">
            <summary>
            Isolated
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.IsolatedWallet">
            <summary>
            Isolated wallet
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.IsAutoAddMargin">
            <summary>
            Is auto add margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.PositionQuantity">
            <summary>
            Position amount
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesPositionRiskCoin.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginDetails">
            <summary>
            Sub account margin trade details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginDetails.Email">
            <summary>
            Email of the account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginDetails.MarginLevel">
            <summary>
            Margin level
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginDetails.TotalAssetOfBtc">
            <summary>
            Total asset in btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginDetails.TotalLiabilityOfBtc">
            <summary>
            Total liability
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginDetails.TotalNetAssetOfBtc">
            <summary>
            Total net asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginDetails.MarginTradeCoeff">
            <summary>
            Trade details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginDetails.MarginUserAssets">
            <summary>
            Asset list
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitMarginTradeCoeff">
            <summary>
            Margin trade detail
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitMarginTradeCoeff.ForceLiquidationBar">
            <summary>
            Liquidation margin ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitMarginTradeCoeff.MarginCallBar">
            <summary>
            Margin record margin ratio
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitMarginTradeCoeff.NormalBar">
            <summary>
            Initial margin ratio
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginEnabled">
            <summary>
            Sub account margin trading enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginEnabled.Email">
            <summary>
            Email of the account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginEnabled.IsMarginEnabled">
            <summary>
            Whether Margin trading is enabled
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary">
            <summary>
            Sub accounts futures summary
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.TotalMaintenanceMargin">
            <summary>
            Total maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.TotalOpenOrderInitialMargin">
            <summary>
            Total open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.TotalPositionInitialMargin">
            <summary>
            Total position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.TotalUnrealizedProfit">
            <summary>
            Total unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.TotalWalletBalance">
            <summary>
            Total wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsFuturesSummary.SubAccounts">
            <summary>
            Sub accounts info
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo">
            <summary>
            Sub account future details
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.Email">
            <summary>
            Email of the sub account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.TotalMaintenanceMargin">
            <summary>
            Total maintenance margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.TotalOpenOrderInitialMargin">
            <summary>
            Total open order initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.TotalPositionInitialMargin">
            <summary>
            Total position initial margin
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.TotalUnrealizedProfit">
            <summary>
            Total unrealized profit
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.TotalWalletBalance">
            <summary>
            Total wallet balance
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountFuturesInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsMarginSummary">
            <summary>
            Sub accounts margin summary
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsMarginSummary.TotalAssetOfBtc">
            <summary>
            Total btc asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsMarginSummary.TotalLiabilityOfBtc">
            <summary>
            Total liability
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsMarginSummary.TotalNetAssetOfBtc">
            <summary>
            Total net btc
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountsMarginSummary.SubAccounts">
            <summary>
            Sub account details
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginInfo">
            <summary>
            Sub account margin info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginInfo.Email">
            <summary>
            Sub account email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginInfo.TotalAssetOfBtc">
            <summary>
            Total btc asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginInfo.TotalLiabilityOfBtc">
            <summary>
            Total liability
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountMarginInfo.TotalNetAssetOfBtc">
            <summary>
            Total net btc
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountSpotAssetsSummary">
            <summary>
            Sub accounts btc value summary
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountSpotAssetsSummary.TotalCount">
            <summary>
            Total records
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountSpotAssetsSummary.MasterAccountTotalAsset">
            <summary>
            Master account total asset value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountSpotAssetsSummary.SubAccountsBtcValues">
            <summary>
            Sub account values
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountBtcValue">
            <summary>
            Sub account btc value
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountBtcValue.Email">
            <summary>
            Sub account email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountBtcValue.TotalAsset">
            <summary>
            Sub account total asset 
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountStatus">
            <summary>
            Sub-account Status on Margin/Futures
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountStatus.Email">
            <summary>
            User email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountStatus.IsAccountEnabled">
            <summary>
            Sub account user enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountStatus.IsActive">
            <summary>
            Sub account user active
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountStatus.CreateTime">
            <summary>
            The time the sub account was created
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountStatus.IsMarginEnabled">
            <summary>
            Is Margin enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountStatus.IsFutureEnabled">
            <summary>
            Is Futures enabled
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountStatus.MobileNumber">
            <summary>
            User mobile number
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransaction">
            <summary>
            Transaction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransaction.TransactionId">
            <summary>
            The transaction id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransfer">
            <summary>
            Sub account transfer info
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransfer.From">
            <summary>
            From which email the transfer originated
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransfer.To">
            <summary>
            To which email the transfer was to
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransfer.Asset">
            <summary>
            The asset of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransfer.Quantity">
            <summary>
            The quantity of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransfer.Timestamp">
            <summary>
            The timestamp of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransfer.Status">
            <summary>
            Status of the transaction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransfer.TransactionId">
            <summary>
            Transaction Id
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferResult">
            <summary>
            Sub account transfer result
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferResult.Success">
            <summary>
            Whether the transfer was successful
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferResult.TransactionId">
            <summary>
            The transaction id of the transfer
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount">
            <summary>
            Sub account historic transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.CounterParty">
            <summary>
            Counter party of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.Email">
            <summary>
            Email of the account
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.FromAccountType">
            <summary>
            From account type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.ToAccountType">
            <summary>
            To account type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.Type">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountTransferSubAccount.Timestamp">
            <summary>
            Timestamp of the transfer
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransfersList.Transactions">
            <summary>
            Transactions
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction">
            <summary>
            HitoBit sub account universal transaction
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.FromEmail">
            <summary>
            From email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.ToEmail">
            <summary>
            To email
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.FromAccountType">
            <summary>
            From account type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.ToAccountType">
            <summary>
            To account type
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.Spot.SubAccountData.HitoBitSubAccountUniversalTransferTransaction.CreateTime">
            <summary>
            The time the universal transaction was created
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Models.HitoBitStreamEvent">
            <summary>
            A event received by a HitoBit websocket
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitStreamEvent.Event">
            <summary>
            The type of the event
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Models.HitoBitStreamEvent.EventTime">
            <summary>
            The time the event happened
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Options.HitoBitOrderBookOptions">
            <summary>
            Options for the HitoBit SymbolOrderBook
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitOrderBookOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitOrderBookOptions.Limit">
            <summary>
            The top amount of results to keep in sync. If for example limit=10 is used, the order book will contain the 10 best bids and 10 best asks. Leaving this null will sync the full order book
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitOrderBookOptions.UpdateInterval">
            <summary>
            Update interval in milliseconds, either 100 or 1000. Defaults to 1000
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Options.HitoBitRestApiOptions">
            <summary>
            Options for HitoBit Rest API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestApiOptions.TimestampOffset">
            <summary>
            A manual offset for the timestamp. Should only be used if AutoTimestamp and regular time synchronization on the OS is not reliable enough
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestApiOptions.TradeRulesBehaviour">
            <summary>
            Whether to check the trade rules when placing new orders and what to do if the trade isn't valid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestApiOptions.TradeRulesUpdateInterval">
            <summary>
            How often the trade rules should be updated. Only used when TradeRulesBehaviour is not None
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestApiOptions.BrokerId">
            <summary>
            The broker reference id to use
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Options.HitoBitRestOptions">
            <summary>
            Options for the HitoBitRestClient
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestOptions.ReceiveWindow">
            <summary>
            The default receive window for requests
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestOptions.UsdFuturesOptions">
            <summary>
            Usd futures API options
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitRestOptions.CoinFuturesOptions">
            <summary>
            Coin futures API options
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Options.HitoBitSocketApiOptions">
            <summary>
            Options for HitoBit Socket API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitSocketApiOptions.TradeRulesBehaviour">
            <summary>
            Whether to check the trade rules when placing new orders and what to do if the trade isn't valid
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitSocketApiOptions.TradeRulesUpdateInterval">
            <summary>
            How often the trade rules should be updated. Only used when TradeRulesBehaviour is not None
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitSocketApiOptions.BrokerId">
            <summary>
            The broker reference id to use
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Options.HitoBitSocketOptions">
            <summary>
            Options for the HitoBitSocketClient
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitSocketOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitSocketOptions.SpotOptions">
            <summary>
            Options for the Spot API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitSocketOptions.UsdFuturesOptions">
            <summary>
            Options for the Usd Futures API
            </summary>
        </member>
        <member name="P:HitoBit.Net.Objects.Options.HitoBitSocketOptions.CoinFuturesOptions">
            <summary>
            Options for the Coin Futures API
            </summary>
        </member>
        <member name="T:HitoBit.Net.Objects.Sockets.HitoBitCoinFuturesUserDataSubscription">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Sockets.HitoBitCoinFuturesUserDataSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitCoinFuturesUserDataSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitCoinFuturesUserDataSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.List{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate}})">
            <summary>
            ctor
            </summary>
            <param name="logger"></param>
            <param name="topics"></param>
            <param name="orderHandler"></param>
            <param name="configHandler"></param>
            <param name="marginHandler"></param>
            <param name="accountHandler"></param>
            <param name="listenkeyHandler"></param>
            <param name="strategyHandler"></param>
            <param name="gridHandler"></param>
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitCoinFuturesUserDataSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitCoinFuturesUserDataSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitCoinFuturesUserDataSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSpotUserDataSubscription">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSpotUserDataSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSpotUserDataSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSpotUserDataSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.List{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamOrderList}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamPositionsUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Spot.Socket.HitoBitStreamBalanceUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSpotUserDataSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSpotUserDataSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSpotUserDataSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSubscription`1">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSubscription`1.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSubscription`1.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSubscription`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.List{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{`0}},System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="logger"></param>
            <param name="topics"></param>
            <param name="handler"></param>
            <param name="auth"></param>
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSubscription`1.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSubscription`1.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.Subscriptions.HitoBitSubscription`1.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.Objects.Sockets.HitoBitUsdFuturesUserDataSubscription">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.Objects.Sockets.HitoBitUsdFuturesUserDataSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitUsdFuturesUserDataSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitUsdFuturesUserDataSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.List{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamTradeUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.HitoBitStreamEvent}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitStrategyUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitGridUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HitoBit.Net.Objects.Models.Futures.Socket.HitoBitConditionOrderTriggerRejectUpdate}})">
            <summary>
            ctor
            </summary>
            <param name="logger"></param>
            <param name="topics"></param>
            <param name="orderHandler"></param>
            <param name="tradeHandler"></param>
            <param name="configHandler"></param>
            <param name="marginHandler"></param>
            <param name="accountHandler"></param>
            <param name="listenkeyHandler"></param>
            <param name="strategyHandler"></param>
            <param name="gridHandler"></param>
            <param name="condOrderHandler"></param>
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitUsdFuturesUserDataSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitUsdFuturesUserDataSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.Objects.Sockets.HitoBitUsdFuturesUserDataSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesCoinSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesCoinSymbolOrderBook.#ctor(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesCoinSymbolOrderBook.#ctor(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,HitoBit.Net.Interfaces.Clients.IHitoBitRestClient,HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="restClient">Rest client instance</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesCoinSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesCoinSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesCoinSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesCoinSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesUsdtSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesUsdtSymbolOrderBook.#ctor(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesUsdtSymbolOrderBook.#ctor(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,HitoBit.Net.Interfaces.Clients.IHitoBitRestClient,HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="restClient">Rest client instance</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesUsdtSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesUsdtSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesUsdtSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitFuturesUsdtSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory">
            <summary>
            HitoBit order book factory
            </summary>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="P:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory.Spot">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory.UsdFutures">
            <inheritdoc />
        </member>
        <member name="P:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory.CoinFutures">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory.CreateSpot(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory.CreateUsdtFutures(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitOrderBookFactory.CreateCoinFutures(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:HitoBit.Net.SymbolOrderBooks.HitoBitSpotSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitSpotSymbolOrderBook.#ctor(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitSpotSymbolOrderBook.#ctor(System.String,System.Action{HitoBit.Net.Objects.Options.HitoBitOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,HitoBit.Net.Interfaces.Clients.IHitoBitRestClient,HitoBit.Net.Interfaces.Clients.IHitoBitSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="restClient">Rest client instance</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitSpotSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitSpotSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitSpotSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HitoBit.Net.SymbolOrderBooks.HitoBitSpotSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.HitoBit(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the HitoBit REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.HitoBit(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the HitoBit Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddHitoBit(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{HitoBit.Net.Objects.Options.HitoBitRestOptions},System.Action{HitoBit.Net.Objects.Options.HitoBitSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IHitoBitClient and IHitoBitSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultRestOptionsDelegate">Set default options for the rest client</param>
            <param name="defaultSocketOptionsDelegate">Set default options for the socket client</param>
            <param name="socketClientLifeTime">The lifetime of the IHitoBitSocketClient for the service collection. Defaults to Singleton.</param>
            <returns></returns>
        </member>
    </members>
</doc>
